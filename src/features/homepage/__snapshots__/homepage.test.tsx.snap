// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`homepage should render 1`] = `
<Wrapper>
  <Provider
    store={
      Object {
        "@@observable": [Function],
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Provider
      value={
        Object {
          "store": Object {
            "@@observable": [Function],
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "subscription": Object {
            "addNestedSub": [Function],
            "getListeners": [Function],
            "handleChangeWrapper": [Function],
            "isSubscribed": [Function],
            "notifyNestedSubs": [Function],
            "onStateChange": [Function],
            "trySubscribe": [Function],
            "tryUnsubscribe": [Function],
          },
        }
      }
    >
      <Connect(ConnectedRouterWithContext)
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Connect(ConnectedRouterWithContext)
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
        >
          <ConnectedRouterWithContext
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            onLocationChanged={[Function]}
          >
            <Consumer>
              <ConnectedRouter
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                onLocationChanged={[Function]}
                store={
                  Object {
                    "@@observable": [Function],
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  }
                }
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Provider
                    value={
                      Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                        "staticContext": undefined,
                      }
                    }
                  >
                    <Provider
                      value={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                    >
                      <Homepage>
                        <section>
                          <header>
                            <h2>
                              Homepage
                            </h2>
                          </header>
                          <div
                            style={
                              Object {
                                "textAlign": "center",
                              }
                            }
                          >
                            Site under construction
                          </div>
                          <Loader>
                            <div>
                              <span
                                key={1}
                              />
                              <span
                                key={2}
                              />
                              <span
                                key={3}
                              />
                              <span
                                key={4}
                              />
                            </div>
                          </Loader>
                        </section>
                      </Homepage>
                    </Provider>
                  </Provider>
                </Router>
              </ConnectedRouter>
            </Consumer>
          </ConnectedRouterWithContext>
        </Connect(ConnectedRouterWithContext)>
      </Connect(ConnectedRouterWithContext)>
    </Provider>
  </Provider>
</Wrapper>
`;
