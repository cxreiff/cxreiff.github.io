{"mappings":"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","sources":["src/features/shaders/shaders.component.tsx","src/common/subnavigation/subnavigation.component.tsx","src/common/subnavigation/subnavigation.module.scss","src/common/shaderDemo/shaderDemo.component.tsx","src/common/shaderView/shaderView.component.tsx","node_modules/.pnpm/ndarray-pixels@2.0.1/node_modules/ndarray-pixels/src/browser-save-pixels.ts","node_modules/.pnpm/ndarray-pixels@2.0.1/node_modules/ndarray-pixels/src/index.ts","node_modules/.pnpm/ndarray-pixels@2.0.1/node_modules/ndarray-pixels/src/browser-get-pixels.ts","node_modules/.pnpm/ndarray@1.0.19/node_modules/ndarray/ndarray.js","node_modules/.pnpm/iota-array@1.0.0/node_modules/iota-array/iota.js","node_modules/.pnpm/is-buffer@1.1.6/node_modules/is-buffer/index.js","node_modules/.pnpm/ndarray-ops@1.2.2/node_modules/ndarray-ops/ndarray-ops.js","node_modules/.pnpm/cwise-compiler@1.1.3/node_modules/cwise-compiler/compiler.js","node_modules/.pnpm/cwise-compiler@1.1.3/node_modules/cwise-compiler/lib/thunk.js","node_modules/.pnpm/cwise-compiler@1.1.3/node_modules/cwise-compiler/lib/compile.js","node_modules/.pnpm/uniq@1.0.1/node_modules/uniq/uniq.js","src/common/shaderView/shaderView.module.scss","src/common/shaderDemo/shaderDemo.module.scss","src/features/shaders/shadersList.ts","src/assets/shaders/square.json","src/assets/shaders/assorted1.vert","src/assets/shaders/assorted1.frag","src/assets/shaders/basic1.vert","src/assets/shaders/basic1.frag","src/assets/shaders/basic2.vert","src/assets/shaders/basic2.frag","src/assets/shaders/basic3.vert","src/assets/shaders/basic3.frag","src/assets/shaders/basic4.vert","src/assets/shaders/basic4.frag","src/assets/shaders/texture1.vert","src/assets/shaders/texture1.frag"],"sourcesContent":["import { FC } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { Subnavigation } from \"~src/common/subnavigation/subnavigation.component\";\nimport { ShaderDemo } from \"~src/common/shaderDemo/shaderDemo.component\";\nimport { CATEGORIES, Category, SHADERS_LIST } from \"./shadersList\";\n\nconst Shaders: FC = () => {\n  let { category } = useParams<{ category: Category }>();\n\n  if (!(category && CATEGORIES.includes(category))) {\n    category = CATEGORIES[0];\n  }\n\n  return (\n    <section>\n      <Subnavigation\n        current={`/projects/shaders/${category}`}\n        routes={CATEGORIES.map((nav_category) => ({\n          route: `/projects/shaders/${nav_category}`,\n          label: nav_category,\n        }))}\n      />\n      {SHADERS_LIST[category].map((shaderProps, index) => (\n        <ShaderDemo key={index} {...shaderProps} />\n      ))}\n    </section>\n  );\n};\n\nexport default Shaders;\n","import { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"./subnavigation.module.scss\";\nimport cn from \"classnames\";\n\ntype SubnavigationProps = {\n  current: string;\n  routes: { route: string; label: string }[];\n};\n\nexport const Subnavigation: FC<SubnavigationProps> = ({ routes, current }) => (\n  <ul className={styles.subnavigation}>\n    {routes.map(({ route, label }) => (\n      <li key={route} className={cn({ [styles.current]: current === route })}>\n        <Link to={route}>{label}</Link>\n      </li>\n    ))}\n  </ul>\n);\n","@use \"../../shared.scss\" as *;\n@use \"../../themed.scss\" as *;\n\n.subnavigation {\n  @include card($color-lighter, true, false);\n\n  margin: 0 0 2rem 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n\n  @include is_larger_than($sm-breakpoint) {\n    flex-direction: row;\n  }\n\n  & > li {\n    position: relative;\n    width: 100%;\n\n    @include interactive(\n      0.25rem,\n      $roundness,\n      $color-dark,\n      $color-darker,\n      $color-darker,\n      $color-lighter\n    );\n\n    a {\n      width: 100%;\n      display: inline-block;\n      position: relative;\n      padding: 0 1.25rem;\n      line-height: 2rem;\n      text-decoration: none;\n\n      @include themed(true) {\n        color: t($color-darker);\n      }\n    }\n\n    @include themed(true) {\n      &.current {\n        background: t($color-darker);\n\n        a {\n          color: t($color-lighter);\n        }\n      }\n    }\n\n    @include is_larger_than($sm-breakpoint) {\n      width: min-content;\n    }\n  }\n}\n","import { FC } from \"react\";\n\nimport { useAppSelector } from \"~/src/app/store\";\nimport { Theme } from \"~/src/features/theme/theme.slice\";\nimport {\n  SyntaxHighlighter,\n  styleLight,\n  styleDark,\n} from \"~/src/utilities/syntaxHighlighter\";\nimport {\n  ShaderView,\n  ShaderViewProps,\n} from \"../shaderView/shaderView.component\";\n\nimport styles from \"./shaderDemo.module.scss\";\n\nfunction omitHidden(input: string) {\n  return input.replace(\n    /\\/\\/\\[demo_hide\\]([\\s\\S]*?)\\/\\/\\[demo_hide_end\\]/g,\n    \"{...}\"\n  );\n}\n\nexport const ShaderDemo: FC<ShaderViewProps> = ({\n  vertexShader,\n  fragmentShader,\n  ...props\n}) => {\n  const theme = useAppSelector((state) => state.theme.theme);\n\n  return (\n    <section className={styles.shader_demo}>\n      <div className={styles.shader_view}>\n        <ShaderView\n          vertexShader={vertexShader}\n          fragmentShader={fragmentShader}\n          {...props}\n        />\n      </div>\n      <div className={styles.shader_syntax}>\n        <SyntaxHighlighter\n          language={\"glsl\"}\n          style={theme === Theme.DARKMODE ? styleDark : styleLight}\n        >\n          {omitHidden(vertexShader)}\n        </SyntaxHighlighter>\n        <SyntaxHighlighter\n          language={\"glsl\"}\n          style={theme === Theme.DARKMODE ? styleDark : styleLight}\n        >\n          {omitHidden(fragmentShader)}\n        </SyntaxHighlighter>\n      </div>\n    </section>\n  );\n};\n","import { FC, useEffect, useRef } from \"react\";\nimport ReglInit, {\n  Vec2,\n  PrimitiveType,\n  Regl,\n  Texture2D,\n  NDArrayLike,\n} from \"regl\";\nimport { getPixels } from \"ndarray-pixels\";\nimport { NdArray } from \"ndarray\";\n\nimport { Frame } from \"../frame/frame.component\";\nimport styles from \"./shaderView.module.scss\";\n\ntype BufferMap = { [key: string]: Buffer };\ntype Texture2DMap = { [key: string]: Texture2D };\n\ninterface Uniforms {\n  u_resolution: Vec2;\n  u_time: number;\n}\n\ninterface Attributes {\n  position: number[][];\n}\n\nexport type ShaderViewProps = {\n  vertexShader: string;\n  fragmentShader: string;\n  position: number[][];\n  primitive: PrimitiveType;\n  textures?: BufferMap;\n};\n\nasync function importTexture(buffer: Buffer): Promise<NdArray> {\n  return await getPixels(buffer, \"image/png\");\n}\n\nasync function importTextures(\n  buffers: BufferMap,\n  regl: Regl\n): Promise<Texture2DMap> {\n  const result: Texture2DMap = {};\n  for (const key in buffers) {\n    result[key] = regl.texture(\n      // cardinal sin committed as regl.texture() types don't\n      // allow Uint8Array, but handle that data type properly.\n      (await importTexture(buffers[key])) as unknown as NDArrayLike\n    );\n  }\n  return result;\n}\n\nasync function runShaders(\n  regl: Regl,\n  vertexShader: string,\n  fragmentShader: string,\n  position: number[][],\n  primitive: PrimitiveType,\n  textures: BufferMap\n) {\n  const textureArrayMap = await importTextures(textures, regl);\n  const drawVertices = regl<Uniforms, Attributes>({\n    vert: vertexShader,\n    frag: fragmentShader,\n    attributes: {\n      position,\n    },\n    uniforms: {\n      u_resolution: [\n        regl.context(\"viewportWidth\"),\n        regl.context(\"viewportHeight\"),\n      ],\n      u_time: regl.context(\"time\"),\n      ...textureArrayMap,\n    },\n    primitive,\n    count: 4,\n  });\n  regl.frame(() => {\n    regl.clear({ color: [0, 0, 0, 0], depth: 1 });\n    drawVertices();\n  });\n}\n\nexport const ShaderView: FC<ShaderViewProps> = ({\n  vertexShader,\n  fragmentShader,\n  position,\n  primitive,\n  textures = {},\n}) => {\n  const ref = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      runShaders(\n        ReglInit(ref.current),\n        vertexShader,\n        fragmentShader,\n        position,\n        primitive,\n        textures\n      );\n    }\n  }, [ref, vertexShader, fragmentShader, position, primitive, textures]);\n\n  return (\n    <Frame aspect={1 / 1} className={styles.shader_view}>\n      <canvas ref={ref} width={800} height={800} />\n    </Frame>\n  );\n};\n","import ndarray from 'ndarray';\nimport type { NdArray } from 'ndarray';\nimport ops from 'ndarray-ops';\n\nexport interface SavePixelsOptions {quality?: number}\n\nexport default savePixels;\n\nfunction savePixels(array: NdArray, type: 'canvas'): HTMLCanvasElement;\nfunction savePixels(array: NdArray, type: 'png'): Readable;\nfunction savePixels(array: NdArray, type: 'jpeg' | 'jpg', options?: SavePixelsOptions): Readable;\nfunction savePixels(\n\tarray: NdArray, type: 'canvas' | 'png' | 'jpeg' | 'jpg',\n\toptions: SavePixelsOptions = {}\n): Readable | HTMLCanvasElement {\n\n\t// Create HTMLCanvasElement and write pixel data.\n\tconst canvas = document.createElement('canvas');\n\tcanvas.width = array.shape[0];\n\tcanvas.height = array.shape[1];\n\n\tconst context = canvas.getContext('2d')!;\n\tconst imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\n\ttry {\n\t\thandleData(array, imageData.data);\n\t} catch (e) {\n\t\t// Pass errors to stream, to match 'save-pixels' behavior.\n\t\treturn Readable.from(Promise.reject(e));\n\t}\n\n\tcontext.putImageData(imageData, 0, 0);\n\n\tconst quality = options.quality ? options.quality / 100 : undefined;\n\n\t// Encode to target format.\n\tswitch (type) {\n\t\tcase 'canvas':\n\t\t\treturn canvas;\n\t\tcase 'jpg':\n\t\tcase 'jpeg':\n\t\t\treturn streamCanvas(canvas, 'image/jpeg', quality);\n\t\tcase 'png':\n\t\t\treturn streamCanvas(canvas, 'image/png');\n\t\tdefault:\n\t\t\tthrow new Error('[ndarray-pixels] Unsupported file type: ' + type);\n\t}\n}\n\n/** Creates readable stream from given HTMLCanvasElement and options. */\nfunction streamCanvas(canvas: HTMLCanvasElement, mimeType: string, quality?: number): Readable {\n\tconst promise = new Promise<Uint8Array>((resolve, reject) => {\n\t\tcanvas.toBlob(async (blob) => {\n\t\t\tif (blob) {\n\t\t\t\tresolve(new Uint8Array(await blob.arrayBuffer()));\n\t\t\t} else {\n\t\t\t\treject(new Error('[ndarray-pixels] Failed to canvas.toBlob().'));\n\t\t\t}\n\t\t}, mimeType, quality);\n\t});\n\treturn Readable.from(promise);\n}\n\nfunction handleData(\n\tarray: NdArray,\n\tdata: Uint8Array | Uint8ClampedArray,\n\tframe = -1\n): Uint8Array | Uint8ClampedArray {\n\n\tif (array.shape.length === 4) {\n\t\treturn handleData(array.pick(frame), data, 0);\n\t} else if (array.shape.length === 3) {\n\t\tif (array.shape[2] === 3) {\n\t\t\tops.assign(\n\t\t\t\tndarray(\n\t\t\t\t\tdata,\n\t\t\t\t\t[array.shape[0], array.shape[1], 3],\n\t\t\t\t\t[4, 4 * array.shape[0], 1]\n\t\t\t\t),\n\t\t\t\tarray\n\t\t\t);\n\t\t\tops.assigns(\n\t\t\t\tndarray(\n\t\t\t\t\tdata,\n\t\t\t\t\t[array.shape[0] * array.shape[1]],\n\t\t\t\t\t[4],\n\t\t\t\t\t3\n\t\t\t\t),\n\t\t\t\t255\n\t\t\t);\n\t\t} else if (array.shape[2] === 4) {\n\t\t\tops.assign(\n\t\t\t\tndarray(\n\t\t\t\t\tdata,\n\t\t\t\t\t[array.shape[0], array.shape[1], 4],\n\t\t\t\t\t[4, array.shape[0] * 4, 1]\n\t\t\t\t),\n\t\t\t\tarray\n\t\t\t);\n\t\t} else if (array.shape[2] === 1) {\n\t\t\tops.assign(\n\t\t\t\tndarray(\n\t\t\t\t\tdata,\n\t\t\t\t\t[array.shape[0], array.shape[1], 3],\n\t\t\t\t\t[4, 4 * array.shape[0], 1]\n\t\t\t\t),\n\t\t\t\tndarray(\n\t\t\t\t\tarray.data,\n\t\t\t\t\t[array.shape[0], array.shape[1], 3],\n\t\t\t\t\t[array.stride[0], array.stride[1], 0],\n\t\t\t\t\tarray.offset\n\t\t\t\t)\n\t\t\t);\n\t\t\tops.assigns(\n\t\t\t\tndarray(\n\t\t\t\t\tdata,\n\t\t\t\t\t[array.shape[0] * array.shape[1]],\n\t\t\t\t\t[4],\n\t\t\t\t\t3\n\t\t\t\t),\n\t\t\t\t255\n\t\t\t);\n\t\t} else {\n\t\t\tthrow new Error('[ndarray-pixels] Incompatible array shape.');\n\t\t}\n\t} else if (array.shape.length === 2) {\n\t\tops.assign(\n\t\t\tndarray(data,\n\t\t\t[array.shape[0], array.shape[1], 3],\n\t\t\t[4, 4 * array.shape[0], 1]),\n\t\t\tndarray(array.data,\n\t\t\t[array.shape[0], array.shape[1], 3],\n\t\t\t[array.stride[0], array.stride[1], 0],\n\t\t\tarray.offset)\n\t\t);\n\t\tops.assigns(\n\t\t\tndarray(data,\n\t\t\t[array.shape[0] * array.shape[1]],\n\t\t\t[4],\n\t\t\t3),\n\t\t\t255\n\t\t);\n\t} else {\n\t\tthrow new Error('[ndarray-pixels] Incompatible array shape.');\n\t}\n\treturn data;\n}\n\nclass Readable {\n\tconstructor (private _promise: Promise<Uint8Array>) {}\n\n\ton(event: 'data' | 'error' | 'end', fn: (res?: Uint8Array | Error) => void): this {\n\t\tif (event === 'data') {\n\t\t\tthis._promise.then(fn);\n\t\t} else if (event === 'error') {\n\t\t\tthis._promise.catch(fn)\n\t\t} else if (event === 'end') {\n\t\t\tthis._promise.finally(fn);\n\t\t}\n\t\treturn this;\n\t}\n\n\tstatic from (promise: Promise<Uint8Array>): Readable {\n\t\treturn new Readable(promise);\n\t}\n}\n","import getPixelsInternal from 'get-pixels';\nimport type { NdArray } from 'ndarray';\nimport savePixelsInternal from 'save-pixels';\n\n/**\n * Decodes image data to an `ndarray`.\n *\n * MIME type is optional when given a path or URL, and required when given a Uint8Array.\n *\n * Accepts `image/png` or `image/jpeg` in Node.js, and additional formats on browsers with\n * the necessary support in Canvas 2D.\n *\n * @param data\n * @param mimeType `image/jpeg`, `image/png`, etc.\n * @returns\n */\nasync function getPixels (data: string | Uint8Array, mimeType?: string): Promise<NdArray> {\n    // In Node.js, get-pixels needs a Buffer and won't accept Uint8Array.\n    if (data instanceof Uint8Array && typeof Buffer !== 'undefined') {\n        data = Buffer.from(data);\n    }\n\n    return new Promise((resolve, reject) => {\n        getPixelsInternal(data, mimeType!, (err: Error | null, pixels: NdArray) => {\n            if (pixels && !err) {\n                resolve(pixels);\n            } else {\n                reject(err);\n            }\n        });\n    });\n}\n\n/**\n * Encodes an `ndarray` as image data in the given format.\n *\n * If the source `ndarray` was constructed manually with default stride, use\n * `ndarray.transpose(1, 0)` to reshape it and ensure an identical result from getPixels(). For an\n * ndarray created by getPixels(), this isn't necessary.\n *\n * Accepts `image/png` or `image/jpeg` in Node.js, and additional formats on browsers with\n * the necessary support in Canvas 2D.\n *\n * @param pixels ndarray of shape W x H x 4.\n * @param mimeType `image/jpeg`, `image/png`, etc.\n * @returns\n */\nasync function savePixels (pixels: NdArray, mimeType: string): Promise<Uint8Array> {\n    return new Promise((resolve, reject) => {\n        const chunks: Uint8Array[] = [];\n        const internalType = mimeType.replace('image/', '') as 'png' | 'gif';\n        savePixelsInternal(pixels, internalType)\n            .on('data', (d: Uint8Array) => chunks.push(d))\n            .on('end', () => resolve(concat(chunks)))\n            .on('error', (e: Error) => reject(e));\n    });\n}\n\nfunction concat (arrays: Uint8Array[]): Uint8Array {\n    let totalByteLength = 0;\n    for (const array of arrays) {\n        totalByteLength += array.byteLength;\n    }\n\n    const result = new Uint8Array(totalByteLength);\n\n    let byteOffset = 0;\n    for (const array of arrays) {\n        result.set(array, byteOffset);\n        byteOffset += array.byteLength;\n    }\n\n    return result;\n}\n\nexport {getPixels, savePixels};\n","import ndarray from 'ndarray';\nimport type { NdArray } from 'ndarray';\n\nexport type GetPixelsCallback = (err: string | Event | null, pixels?: NdArray) => void;\n\nexport default getPixels;\n\nfunction getPixels(path: string, callback: GetPixelsCallback): void;\nfunction getPixels(path: string | Uint8Array, type: string, callback: GetPixelsCallback): void\nfunction getPixels(path: string | Uint8Array, typeOrCallback: string | GetPixelsCallback, callback?: GetPixelsCallback): void {\n\tcallback = callback || typeOrCallback as GetPixelsCallback;\n\n\t// Construct a Blob URL for Uint8Array inputs.\n\tif (path instanceof Uint8Array) {\n\t\tif (typeof typeOrCallback !== 'string') {\n\t\t\tthrow new Error('[ndarray-pixels] Type must be given for Uint8Array image data');\n\t\t}\n\t\tconst blob = new Blob([path], {type: typeOrCallback});\n\t\tpath = URL.createObjectURL(blob);\n\t}\n\n\t// Decode image with Canvas API.\n\tconst img = new Image();\n\timg.crossOrigin = 'anonymous';\n\timg.onload = function() {\n\t\tURL.revokeObjectURL(path as string);\n\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = img.width;\n\t\tcanvas.height = img.height;\n\t\tconst context = canvas.getContext('2d')!;\n\t\tcontext.drawImage(img, 0, 0);\n\t\tconst pixels = context.getImageData(0, 0, img.width, img.height)\n\t\tcallback!(null, ndarray(new Uint8Array(pixels.data), [img.width, img.height, 4], [4, 4*img.width, 1], 0));\n\t}\n\timg.onerror = (err) => {\n\t\tURL.revokeObjectURL(path as string);\n\t\tcallback!(err);\n\t};\n\timg.src = path;\n}\n","var iota = require(\"iota-array\")\nvar isBuffer = require(\"is-buffer\")\n\nvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\nfunction compare1st(a, b) {\n  return a[0] - b[0]\n}\n\nfunction order() {\n  var stride = this.stride\n  var terms = new Array(stride.length)\n  var i\n  for(i=0; i<terms.length; ++i) {\n    terms[i] = [Math.abs(stride[i]), i]\n  }\n  terms.sort(compare1st)\n  var result = new Array(terms.length)\n  for(i=0; i<result.length; ++i) {\n    result[i] = terms[i][1]\n  }\n  return result\n}\n\nfunction compileConstructor(dtype, dimension) {\n  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n  if(dimension < 0) {\n    className = \"View_Nil\" + dtype\n  }\n  var useGetters = (dtype === \"generic\")\n\n  if(dimension === -1) {\n    //Special case for trivial arrays\n    var code =\n      \"function \"+className+\"(a){this.data=a;};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new \"+className+\"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n    var procedure = new Function(code)\n    return procedure()\n  } else if(dimension === 0) {\n    //Special case for 0d arrays\n    var code =\n      \"function \"+className+\"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function \"+className+\"_copy() {\\\nreturn new \"+className+\"(this.data,this.offset)\\\n};\\\nproto.pick=function \"+className+\"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function \"+className+\"_get(){\\\nreturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\"};\\\nproto.set=function \"+className+\"_set(v){\\\nreturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n};\\\nreturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n    var procedure = new Function(\"TrivialArray\", code)\n    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n  }\n\n  var code = [\"'use strict'\"]\n\n  //Create constructor for view\n  var indices = iota(dimension)\n  var args = indices.map(function(i) { return \"i\"+i })\n  var index_str = \"this.offset+\" + indices.map(function(i) {\n        return \"this.stride[\" + i + \"]*i\" + i\n      }).join(\"+\")\n  var shapeArg = indices.map(function(i) {\n      return \"b\"+i\n    }).join(\",\")\n  var strideArg = indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")\n  code.push(\n    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n      \"this.shape=[\" + shapeArg + \"]\",\n      \"this.stride=[\" + strideArg + \"]\",\n      \"this.offset=d|0}\",\n    \"var proto=\"+className+\".prototype\",\n    \"proto.dtype='\"+dtype+\"'\",\n    \"proto.dimension=\"+dimension)\n\n  //view.size:\n  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\nreturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\"}})\")\n\n  //view.order:\n  if(dimension === 1) {\n    code.push(\"proto.order=[0]\")\n  } else {\n    code.push(\"Object.defineProperty(proto,'order',{get:\")\n    if(dimension < 4) {\n      code.push(\"function \"+className+\"_order(){\")\n      if(dimension === 2) {\n        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n      } else if(dimension === 3) {\n        code.push(\n\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})\")\n      }\n    } else {\n      code.push(\"ORDER})\")\n    }\n  }\n\n  //view.set(i0, ..., v):\n  code.push(\n\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n  if(useGetters) {\n    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]=v}\")\n  }\n\n  //view.get(i0, ...):\n  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n  if(useGetters) {\n    code.push(\"return this.data.get(\"+index_str+\")}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]}\")\n  }\n\n  //view.index:\n  code.push(\n    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\n  //view.hi():\n  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"this.stride[\"+i + \"]\"\n    }).join(\",\")+\",this.offset)}\")\n\n  //view.lo():\n  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\nd=i\"+i+\"|0;\\\nb+=c\"+i+\"*d;\\\na\"+i+\"-=d}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\"+i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")+\",b)}\")\n\n  //view.step():\n  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n    indices.map(function(i) {\n      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'){\\\nd=i\"+i+\"|0;\\\nif(d<0){\\\nc+=b\"+i+\"*(a\"+i+\"-1);\\\na\"+i+\"=ceil(-a\"+i+\"/d)\\\n}else{\\\na\"+i+\"=ceil(a\"+i+\"/d)\\\n}\\\nb\"+i+\"*=d\\\n}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\" + i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\" + i\n    }).join(\",\")+\",c)}\")\n\n  //view.transpose():\n  var tShape = new Array(dimension)\n  var tStride = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    tShape[i] = \"a[i\"+i+\"]\"\n    tStride[i] = \"b[i\"+i+\"]\"\n  }\n  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\n  //view.pick():\n  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n  }\n  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\n  //Add return statement\n  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n    indices.map(function(i) {\n      return \"shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"stride[\"+i+\"]\"\n    }).join(\",\")+\",offset)}\")\n\n  //Compile procedure\n  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n}\n\nfunction arrayDType(data) {\n  if(isBuffer(data)) {\n    return \"buffer\"\n  }\n  if(hasTypedArrays) {\n    switch(Object.prototype.toString.call(data)) {\n      case \"[object Float64Array]\":\n        return \"float64\"\n      case \"[object Float32Array]\":\n        return \"float32\"\n      case \"[object Int8Array]\":\n        return \"int8\"\n      case \"[object Int16Array]\":\n        return \"int16\"\n      case \"[object Int32Array]\":\n        return \"int32\"\n      case \"[object Uint8Array]\":\n        return \"uint8\"\n      case \"[object Uint16Array]\":\n        return \"uint16\"\n      case \"[object Uint32Array]\":\n        return \"uint32\"\n      case \"[object Uint8ClampedArray]\":\n        return \"uint8_clamped\"\n      case \"[object BigInt64Array]\":\n        return \"bigint64\"\n      case \"[object BigUint64Array]\":\n        return \"biguint64\"\n    }\n  }\n  if(Array.isArray(data)) {\n    return \"array\"\n  }\n  return \"generic\"\n}\n\nvar CACHED_CONSTRUCTORS = {\n  \"float32\":[],\n  \"float64\":[],\n  \"int8\":[],\n  \"int16\":[],\n  \"int32\":[],\n  \"uint8\":[],\n  \"uint16\":[],\n  \"uint32\":[],\n  \"array\":[],\n  \"uint8_clamped\":[],\n  \"bigint64\": [],\n  \"biguint64\": [],\n  \"buffer\":[],\n  \"generic\":[]\n}\n\n;(function() {\n  for(var id in CACHED_CONSTRUCTORS) {\n    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n  }\n});\n\nfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n  if(data === undefined) {\n    var ctor = CACHED_CONSTRUCTORS.array[0]\n    return ctor([])\n  } else if(typeof data === \"number\") {\n    data = [data]\n  }\n  if(shape === undefined) {\n    shape = [ data.length ]\n  }\n  var d = shape.length\n  if(stride === undefined) {\n    stride = new Array(d)\n    for(var i=d-1, sz=1; i>=0; --i) {\n      stride[i] = sz\n      sz *= shape[i]\n    }\n  }\n  if(offset === undefined) {\n    offset = 0\n    for(var i=0; i<d; ++i) {\n      if(stride[i] < 0) {\n        offset -= (shape[i]-1)*stride[i]\n      }\n    }\n  }\n  var dtype = arrayDType(data)\n  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n  while(ctor_list.length <= d+1) {\n    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n  }\n  var ctor = ctor_list[d+1]\n  return ctor(data, shape, stride, offset)\n}\n\nmodule.exports = wrappedNDArrayCtor\n","\"use strict\"\n\nfunction iota(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = i\n  }\n  return result\n}\n\nmodule.exports = iota","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","\"use strict\"\n\nvar compile = require(\"cwise-compiler\")\n\nvar EmptyProc = {\n  body: \"\",\n  args: [],\n  thisVars: [],\n  localVars: []\n}\n\nfunction fixup(x) {\n  if(!x) {\n    return EmptyProc\n  }\n  for(var i=0; i<x.args.length; ++i) {\n    var a = x.args[i]\n    if(i === 0) {\n      x.args[i] = {name: a, lvalue:true, rvalue: !!x.rvalue, count:x.count||1 }\n    } else {\n      x.args[i] = {name: a, lvalue:false, rvalue:true, count: 1}\n    }\n  }\n  if(!x.thisVars) {\n    x.thisVars = []\n  }\n  if(!x.localVars) {\n    x.localVars = []\n  }\n  return x\n}\n\nfunction pcompile(user_args) {\n  return compile({\n    args:     user_args.args,\n    pre:      fixup(user_args.pre),\n    body:     fixup(user_args.body),\n    post:     fixup(user_args.proc),\n    funcName: user_args.funcName\n  })\n}\n\nfunction makeOp(user_args) {\n  var args = []\n  for(var i=0; i<user_args.args.length; ++i) {\n    args.push(\"a\"+i)\n  }\n  var wrapper = new Function(\"P\", [\n    \"return function \", user_args.funcName, \"_ndarrayops(\", args.join(\",\"), \") {P(\", args.join(\",\"), \");return a0}\"\n  ].join(\"\"))\n  return wrapper(pcompile(user_args))\n}\n\nvar assign_ops = {\n  add:  \"+\",\n  sub:  \"-\",\n  mul:  \"*\",\n  div:  \"/\",\n  mod:  \"%\",\n  band: \"&\",\n  bor:  \"|\",\n  bxor: \"^\",\n  lshift: \"<<\",\n  rshift: \">>\",\n  rrshift: \">>>\"\n}\n;(function(){\n  for(var id in assign_ops) {\n    var op = assign_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\",\"array\",\"array\"],\n      body: {args:[\"a\",\"b\",\"c\"],\n             body: \"a=b\"+op+\"c\"},\n      funcName: id\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\",\"array\"],\n      body: {args:[\"a\",\"b\"],\n             body:\"a\"+op+\"=b\"},\n      rvalue: true,\n      funcName: id+\"eq\"\n    })\n    exports[id+\"s\"] = makeOp({\n      args: [\"array\", \"array\", \"scalar\"],\n      body: {args:[\"a\",\"b\",\"s\"],\n             body:\"a=b\"+op+\"s\"},\n      funcName: id+\"s\"\n    })\n    exports[id+\"seq\"] = makeOp({\n      args: [\"array\",\"scalar\"],\n      body: {args:[\"a\",\"s\"],\n             body:\"a\"+op+\"=s\"},\n      rvalue: true,\n      funcName: id+\"seq\"\n    })\n  }\n})();\n\nvar unary_ops = {\n  not: \"!\",\n  bnot: \"~\",\n  neg: \"-\",\n  recip: \"1.0/\"\n}\n;(function(){\n  for(var id in unary_ops) {\n    var op = unary_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\", \"array\"],\n      body: {args:[\"a\",\"b\"],\n             body:\"a=\"+op+\"b\"},\n      funcName: id\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\"],\n      body: {args:[\"a\"],\n             body:\"a=\"+op+\"a\"},\n      rvalue: true,\n      count: 2,\n      funcName: id+\"eq\"\n    })\n  }\n})();\n\nvar binary_ops = {\n  and: \"&&\",\n  or: \"||\",\n  eq: \"===\",\n  neq: \"!==\",\n  lt: \"<\",\n  gt: \">\",\n  leq: \"<=\",\n  geq: \">=\"\n}\n;(function() {\n  for(var id in binary_ops) {\n    var op = binary_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\",\"array\",\"array\"],\n      body: {args:[\"a\", \"b\", \"c\"],\n             body:\"a=b\"+op+\"c\"},\n      funcName: id\n    })\n    exports[id+\"s\"] = makeOp({\n      args: [\"array\",\"array\",\"scalar\"],\n      body: {args:[\"a\", \"b\", \"s\"],\n             body:\"a=b\"+op+\"s\"},\n      funcName: id+\"s\"\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\", \"array\"],\n      body: {args:[\"a\", \"b\"],\n             body:\"a=a\"+op+\"b\"},\n      rvalue:true,\n      count:2,\n      funcName: id+\"eq\"\n    })\n    exports[id+\"seq\"] = makeOp({\n      args: [\"array\", \"scalar\"],\n      body: {args:[\"a\",\"s\"],\n             body:\"a=a\"+op+\"s\"},\n      rvalue:true,\n      count:2,\n      funcName: id+\"seq\"\n    })\n  }\n})();\n\nvar math_unary = [\n  \"abs\",\n  \"acos\",\n  \"asin\",\n  \"atan\",\n  \"ceil\",\n  \"cos\",\n  \"exp\",\n  \"floor\",\n  \"log\",\n  \"round\",\n  \"sin\",\n  \"sqrt\",\n  \"tan\"\n]\n;(function() {\n  for(var i=0; i<math_unary.length; ++i) {\n    var f = math_unary[i]\n    exports[f] = makeOp({\n                    args: [\"array\", \"array\"],\n                    pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                    body: {args:[\"a\",\"b\"], body:\"a=this_f(b)\", thisVars:[\"this_f\"]},\n                    funcName: f\n                  })\n    exports[f+\"eq\"] = makeOp({\n                      args: [\"array\"],\n                      pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                      body: {args: [\"a\"], body:\"a=this_f(a)\", thisVars:[\"this_f\"]},\n                      rvalue: true,\n                      count: 2,\n                      funcName: f+\"eq\"\n                    })\n  }\n})();\n\nvar math_comm = [\n  \"max\",\n  \"min\",\n  \"atan2\",\n  \"pow\"\n]\n;(function(){\n  for(var i=0; i<math_comm.length; ++i) {\n    var f= math_comm[i]\n    exports[f] = makeOp({\n                  args:[\"array\", \"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n                  funcName: f\n                })\n    exports[f+\"s\"] = makeOp({\n                  args:[\"array\", \"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"s\"\n                  })\n    exports[f+\"eq\"] = makeOp({ args:[\"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n                  rvalue: true,\n                  count: 2,\n                  funcName: f+\"eq\"\n                  })\n    exports[f+\"seq\"] = makeOp({ args:[\"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n                  rvalue:true,\n                  count:2,\n                  funcName: f+\"seq\"\n                  })\n  }\n})();\n\nvar math_noncomm = [\n  \"atan2\",\n  \"pow\"\n]\n;(function(){\n  for(var i=0; i<math_noncomm.length; ++i) {\n    var f= math_noncomm[i]\n    exports[f+\"op\"] = makeOp({\n                  args:[\"array\", \"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"op\"\n                })\n    exports[f+\"ops\"] = makeOp({\n                  args:[\"array\", \"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"ops\"\n                  })\n    exports[f+\"opeq\"] = makeOp({ args:[\"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n                  rvalue: true,\n                  count: 2,\n                  funcName: f+\"opeq\"\n                  })\n    exports[f+\"opseq\"] = makeOp({ args:[\"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n                  rvalue:true,\n                  count:2,\n                  funcName: f+\"opseq\"\n                  })\n  }\n})();\n\nexports.any = compile({\n  args:[\"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"if(a){return true}\", localVars: [], thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return false\"},\n  funcName: \"any\"\n})\n\nexports.all = compile({\n  args:[\"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1}], body: \"if(!x){return false}\", localVars: [], thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n  funcName: \"all\"\n})\n\nexports.sum = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s+=a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"sum\"\n})\n\nexports.prod = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=1\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s*=a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"prod\"\n})\n\nexports.norm2squared = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norm2squared\"\n})\n  \nexports.norm2 = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return Math.sqrt(this_s)\"},\n  funcName: \"norm2\"\n})\n  \n\nexports.norminf = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:4}], body:\"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norminf\"\n})\n\nexports.norm1 = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:3}], body: \"this_s+=a<0?-a:a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norm1\"\n})\n\nexports.sup = compile({\n  args: [ \"array\" ],\n  pre:\n   { body: \"this_h=-Infinity\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  body:\n   { body: \"if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_\",\n     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  post:\n   { body: \"return this_h\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] }\n })\n\nexports.inf = compile({\n  args: [ \"array\" ],\n  pre:\n   { body: \"this_h=Infinity\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  body:\n   { body: \"if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_\",\n     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  post:\n   { body: \"return this_h\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] }\n })\n\nexports.argmin = compile({\n  args:[\"index\",\"array\",\"shape\"],\n  pre:{\n    body:\"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n    args:[\n      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n      ],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[]},\n  body:{\n    body:\"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n    args:[\n      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[\"_inline_1_k\"]},\n  post:{\n    body:\"{return this_i}\",\n    args:[],\n    thisVars:[\"this_i\"],\n    localVars:[]}\n})\n\nexports.argmax = compile({\n  args:[\"index\",\"array\",\"shape\"],\n  pre:{\n    body:\"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n    args:[\n      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n      ],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[]},\n  body:{\n    body:\"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n    args:[\n      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[\"_inline_1_k\"]},\n  post:{\n    body:\"{return this_i}\",\n    args:[],\n    thisVars:[\"this_i\"],\n    localVars:[]}\n})  \n\nexports.random = makeOp({\n  args: [\"array\"],\n  pre: {args:[], body:\"this_f=Math.random\", thisVars:[\"this_f\"]},\n  body: {args: [\"a\"], body:\"a=this_f()\", thisVars:[\"this_f\"]},\n  funcName: \"random\"\n})\n\nexports.assign = makeOp({\n  args:[\"array\", \"array\"],\n  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n  funcName: \"assign\" })\n\nexports.assigns = makeOp({\n  args:[\"array\", \"scalar\"],\n  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n  funcName: \"assigns\" })\n\n\nexports.equals = compile({\n  args:[\"array\", \"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1},\n               {name:\"y\", lvalue:false, rvalue:true, count:1}], \n        body: \"if(x!==y){return false}\", \n        localVars: [], \n        thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n  funcName: \"equals\"\n})\n\n\n","\"use strict\"\n\nvar createThunk = require(\"./lib/thunk.js\")\n\nfunction Procedure() {\n  this.argTypes = []\n  this.shimArgs = []\n  this.arrayArgs = []\n  this.arrayBlockIndices = []\n  this.scalarArgs = []\n  this.offsetArgs = []\n  this.offsetArgIndex = []\n  this.indexArgs = []\n  this.shapeArgs = []\n  this.funcName = \"\"\n  this.pre = null\n  this.body = null\n  this.post = null\n  this.debug = false\n}\n\nfunction compileCwise(user_args) {\n  //Create procedure\n  var proc = new Procedure()\n  \n  //Parse blocks\n  proc.pre    = user_args.pre\n  proc.body   = user_args.body\n  proc.post   = user_args.post\n\n  //Parse arguments\n  var proc_args = user_args.args.slice(0)\n  proc.argTypes = proc_args\n  for(var i=0; i<proc_args.length; ++i) {\n    var arg_type = proc_args[i]\n    if(arg_type === \"array\" || (typeof arg_type === \"object\" && arg_type.blockIndices)) {\n      proc.argTypes[i] = \"array\"\n      proc.arrayArgs.push(i)\n      proc.arrayBlockIndices.push(arg_type.blockIndices ? arg_type.blockIndices : 0)\n      proc.shimArgs.push(\"array\" + i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count>0) {\n        throw new Error(\"cwise: pre() block may not reference array args\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count>0) {\n        throw new Error(\"cwise: post() block may not reference array args\")\n      }\n    } else if(arg_type === \"scalar\") {\n      proc.scalarArgs.push(i)\n      proc.shimArgs.push(\"scalar\" + i)\n    } else if(arg_type === \"index\") {\n      proc.indexArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count > 0) {\n        throw new Error(\"cwise: pre() block may not reference array index\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array index\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count > 0) {\n        throw new Error(\"cwise: post() block may not reference array index\")\n      }\n    } else if(arg_type === \"shape\") {\n      proc.shapeArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].lvalue) {\n        throw new Error(\"cwise: pre() block may not write to array shape\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array shape\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].lvalue) {\n        throw new Error(\"cwise: post() block may not write to array shape\")\n      }\n    } else if(typeof arg_type === \"object\" && arg_type.offset) {\n      proc.argTypes[i] = \"offset\"\n      proc.offsetArgs.push({ array: arg_type.array, offset:arg_type.offset })\n      proc.offsetArgIndex.push(i)\n    } else {\n      throw new Error(\"cwise: Unknown argument type \" + proc_args[i])\n    }\n  }\n  \n  //Make sure at least one array argument was specified\n  if(proc.arrayArgs.length <= 0) {\n    throw new Error(\"cwise: No array arguments specified\")\n  }\n  \n  //Make sure arguments are correct\n  if(proc.pre.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in pre() block\")\n  }\n  if(proc.body.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in body() block\")\n  }\n  if(proc.post.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in post() block\")\n  }\n\n  //Check debug flag\n  proc.debug = !!user_args.printCode || !!user_args.debug\n  \n  //Retrieve name\n  proc.funcName = user_args.funcName || \"cwise\"\n  \n  //Read in block size\n  proc.blockSize = user_args.blockSize || 64\n\n  return createThunk(proc)\n}\n\nmodule.exports = compileCwise\n","\"use strict\"\n\n// The function below is called when constructing a cwise function object, and does the following:\n// A function object is constructed which accepts as argument a compilation function and returns another function.\n// It is this other function that is eventually returned by createThunk, and this function is the one that actually\n// checks whether a certain pattern of arguments has already been used before and compiles new loops as needed.\n// The compilation passed to the first function object is used for compiling new functions.\n// Once this function object is created, it is called with compile as argument, where the first argument of compile\n// is bound to \"proc\" (essentially containing a preprocessed version of the user arguments to cwise).\n// So createThunk roughly works like this:\n// function createThunk(proc) {\n//   var thunk = function(compileBound) {\n//     var CACHED = {}\n//     return function(arrays and scalars) {\n//       if (dtype and order of arrays in CACHED) {\n//         var func = CACHED[dtype and order of arrays]\n//       } else {\n//         var func = CACHED[dtype and order of arrays] = compileBound(dtype and order of arrays)\n//       }\n//       return func(arrays and scalars)\n//     }\n//   }\n//   return thunk(compile.bind1(proc))\n// }\n\nvar compile = require(\"./compile.js\")\n\nfunction createThunk(proc) {\n  var code = [\"'use strict'\", \"var CACHED={}\"]\n  var vars = []\n  var thunkName = proc.funcName + \"_cwise_thunk\"\n  \n  //Build thunk\n  code.push([\"return function \", thunkName, \"(\", proc.shimArgs.join(\",\"), \"){\"].join(\"\"))\n  var typesig = []\n  var string_typesig = []\n  var proc_args = [[\"array\",proc.arrayArgs[0],\".shape.slice(\", // Slice shape so that we only retain the shape over which we iterate (which gets passed to the cwise operator as SS).\n                    Math.max(0,proc.arrayBlockIndices[0]),proc.arrayBlockIndices[0]<0?(\",\"+proc.arrayBlockIndices[0]+\")\"):\")\"].join(\"\")]\n  var shapeLengthConditions = [], shapeConditions = []\n  // Process array arguments\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    var j = proc.arrayArgs[i]\n    vars.push([\"t\", j, \"=array\", j, \".dtype,\",\n               \"r\", j, \"=array\", j, \".order\"].join(\"\"))\n    typesig.push(\"t\" + j)\n    typesig.push(\"r\" + j)\n    string_typesig.push(\"t\"+j)\n    string_typesig.push(\"r\"+j+\".join()\")\n    proc_args.push(\"array\" + j + \".data\")\n    proc_args.push(\"array\" + j + \".stride\")\n    proc_args.push(\"array\" + j + \".offset|0\")\n    if (i>0) { // Gather conditions to check for shape equality (ignoring block indices)\n      shapeLengthConditions.push(\"array\" + proc.arrayArgs[0] + \".shape.length===array\" + j + \".shape.length+\" + (Math.abs(proc.arrayBlockIndices[0])-Math.abs(proc.arrayBlockIndices[i])))\n      shapeConditions.push(\"array\" + proc.arrayArgs[0] + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[0]) + \"]===array\" + j + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[i]) + \"]\")\n    }\n  }\n  // Check for shape equality\n  if (proc.arrayArgs.length > 1) {\n    code.push(\"if (!(\" + shapeLengthConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same dimensionality!')\")\n    code.push(\"for(var shapeIndex=array\" + proc.arrayArgs[0] + \".shape.length-\" + Math.abs(proc.arrayBlockIndices[0]) + \"; shapeIndex-->0;) {\")\n    code.push(\"if (!(\" + shapeConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same shape!')\")\n    code.push(\"}\")\n  }\n  // Process scalar arguments\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\n    proc_args.push(\"scalar\" + proc.scalarArgs[i])\n  }\n  // Check for cached function (and if not present, generate it)\n  vars.push([\"type=[\", string_typesig.join(\",\"), \"].join()\"].join(\"\"))\n  vars.push(\"proc=CACHED[type]\")\n  code.push(\"var \" + vars.join(\",\"))\n  \n  code.push([\"if(!proc){\",\n             \"CACHED[type]=proc=compile([\", typesig.join(\",\"), \"])}\",\n             \"return proc(\", proc_args.join(\",\"), \")}\"].join(\"\"))\n\n  if(proc.debug) {\n    console.log(\"-----Generated thunk:\\n\" + code.join(\"\\n\") + \"\\n----------\")\n  }\n  \n  //Compile thunk\n  var thunk = new Function(\"compile\", code.join(\"\\n\"))\n  return thunk(compile.bind(undefined, proc))\n}\n\nmodule.exports = createThunk\n","\"use strict\"\n\nvar uniq = require(\"uniq\")\n\n// This function generates very simple loops analogous to how you typically traverse arrays (the outermost loop corresponds to the slowest changing index, the innermost loop to the fastest changing index)\n// TODO: If two arrays have the same strides (and offsets) there is potential for decreasing the number of \"pointers\" and related variables. The drawback is that the type signature would become more specific and that there would thus be less potential for caching, but it might still be worth it, especially when dealing with large numbers of arguments.\nfunction innerFill(order, proc, body) {\n  var dimension = order.length\n    , nargs = proc.arrayArgs.length\n    , has_index = proc.indexArgs.length>0\n    , code = []\n    , vars = []\n    , idx=0, pidx=0, i, j\n  for(i=0; i<dimension; ++i) { // Iteration variables\n    vars.push([\"i\",i,\"=0\"].join(\"\"))\n  }\n  //Compute scan deltas\n  for(j=0; j<nargs; ++j) {\n    for(i=0; i<dimension; ++i) {\n      pidx = idx\n      idx = order[i]\n      if(i === 0) { // The innermost/fastest dimension's delta is simply its stride\n        vars.push([\"d\",j,\"s\",i,\"=t\",j,\"p\",idx].join(\"\"))\n      } else { // For other dimensions the delta is basically the stride minus something which essentially \"rewinds\" the previous (more inner) dimension\n        vars.push([\"d\",j,\"s\",i,\"=(t\",j,\"p\",idx,\"-s\",pidx,\"*t\",j,\"p\",pidx,\")\"].join(\"\"))\n      }\n    }\n  }\n  if (vars.length > 0) {\n    code.push(\"var \" + vars.join(\",\"))\n  }  \n  //Scan loop\n  for(i=dimension-1; i>=0; --i) { // Start at largest stride and work your way inwards\n    idx = order[i]\n    code.push([\"for(i\",i,\"=0;i\",i,\"<s\",idx,\";++i\",i,\"){\"].join(\"\"))\n  }\n  //Push body of inner loop\n  code.push(body)\n  //Advance scan pointers\n  for(i=0; i<dimension; ++i) {\n    pidx = idx\n    idx = order[i]\n    for(j=0; j<nargs; ++j) {\n      code.push([\"p\",j,\"+=d\",j,\"s\",i].join(\"\"))\n    }\n    if(has_index) {\n      if(i > 0) {\n        code.push([\"index[\",pidx,\"]-=s\",pidx].join(\"\"))\n      }\n      code.push([\"++index[\",idx,\"]\"].join(\"\"))\n    }\n    code.push(\"}\")\n  }\n  return code.join(\"\\n\")\n}\n\n// Generate \"outer\" loops that loop over blocks of data, applying \"inner\" loops to the blocks by manipulating the local variables in such a way that the inner loop only \"sees\" the current block.\n// TODO: If this is used, then the previous declaration (done by generateCwiseOp) of s* is essentially unnecessary.\n//       I believe the s* are not used elsewhere (in particular, I don't think they're used in the pre/post parts and \"shape\" is defined independently), so it would be possible to make defining the s* dependent on what loop method is being used.\nfunction outerFill(matched, order, proc, body) {\n  var dimension = order.length\n    , nargs = proc.arrayArgs.length\n    , blockSize = proc.blockSize\n    , has_index = proc.indexArgs.length > 0\n    , code = []\n  for(var i=0; i<nargs; ++i) {\n    code.push([\"var offset\",i,\"=p\",i].join(\"\"))\n  }\n  //Generate loops for unmatched dimensions\n  // The order in which these dimensions are traversed is fairly arbitrary (from small stride to large stride, for the first argument)\n  // TODO: It would be nice if the order in which these loops are placed would also be somehow \"optimal\" (at the very least we should check that it really doesn't hurt us if they're not).\n  for(var i=matched; i<dimension; ++i) {\n    code.push([\"for(var j\"+i+\"=SS[\", order[i], \"]|0;j\", i, \">0;){\"].join(\"\")) // Iterate back to front\n    code.push([\"if(j\",i,\"<\",blockSize,\"){\"].join(\"\")) // Either decrease j by blockSize (s = blockSize), or set it to zero (after setting s = j).\n    code.push([\"s\",order[i],\"=j\",i].join(\"\"))\n    code.push([\"j\",i,\"=0\"].join(\"\"))\n    code.push([\"}else{s\",order[i],\"=\",blockSize].join(\"\"))\n    code.push([\"j\",i,\"-=\",blockSize,\"}\"].join(\"\"))\n    if(has_index) {\n      code.push([\"index[\",order[i],\"]=j\",i].join(\"\"))\n    }\n  }\n  for(var i=0; i<nargs; ++i) {\n    var indexStr = [\"offset\"+i]\n    for(var j=matched; j<dimension; ++j) {\n      indexStr.push([\"j\",j,\"*t\",i,\"p\",order[j]].join(\"\"))\n    }\n    code.push([\"p\",i,\"=(\",indexStr.join(\"+\"),\")\"].join(\"\"))\n  }\n  code.push(innerFill(order, proc, body))\n  for(var i=matched; i<dimension; ++i) {\n    code.push(\"}\")\n  }\n  return code.join(\"\\n\")\n}\n\n//Count the number of compatible inner orders\n// This is the length of the longest common prefix of the arrays in orders.\n// Each array in orders lists the dimensions of the correspond ndarray in order of increasing stride.\n// This is thus the maximum number of dimensions that can be efficiently traversed by simple nested loops for all arrays.\nfunction countMatches(orders) {\n  var matched = 0, dimension = orders[0].length\n  while(matched < dimension) {\n    for(var j=1; j<orders.length; ++j) {\n      if(orders[j][matched] !== orders[0][matched]) {\n        return matched\n      }\n    }\n    ++matched\n  }\n  return matched\n}\n\n//Processes a block according to the given data types\n// Replaces variable names by different ones, either \"local\" ones (that are then ferried in and out of the given array) or ones matching the arguments that the function performing the ultimate loop will accept.\nfunction processBlock(block, proc, dtypes) {\n  var code = block.body\n  var pre = []\n  var post = []\n  for(var i=0; i<block.args.length; ++i) {\n    var carg = block.args[i]\n    if(carg.count <= 0) {\n      continue\n    }\n    var re = new RegExp(carg.name, \"g\")\n    var ptrStr = \"\"\n    var arrNum = proc.arrayArgs.indexOf(i)\n    switch(proc.argTypes[i]) {\n      case \"offset\":\n        var offArgIndex = proc.offsetArgIndex.indexOf(i)\n        var offArg = proc.offsetArgs[offArgIndex]\n        arrNum = offArg.array\n        ptrStr = \"+q\" + offArgIndex // Adds offset to the \"pointer\" in the array\n      case \"array\":\n        ptrStr = \"p\" + arrNum + ptrStr\n        var localStr = \"l\" + i\n        var arrStr = \"a\" + arrNum\n        if (proc.arrayBlockIndices[arrNum] === 0) { // Argument to body is just a single value from this array\n          if(carg.count === 1) { // Argument/array used only once(?)\n            if(dtypes[arrNum] === \"generic\") {\n              if(carg.lvalue) {\n                pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\n                code = code.replace(re, localStr)\n                post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n              } else {\n                code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\n              }\n            } else {\n              code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\n            }\n          } else if(dtypes[arrNum] === \"generic\") {\n            pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\n            code = code.replace(re, localStr)\n            if(carg.lvalue) {\n              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n            }\n          } else {\n            pre.push([\"var \", localStr, \"=\", arrStr, \"[\", ptrStr, \"]\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\n            code = code.replace(re, localStr)\n            if(carg.lvalue) {\n              post.push([arrStr, \"[\", ptrStr, \"]=\", localStr].join(\"\"))\n            }\n          }\n        } else { // Argument to body is a \"block\"\n          var reStrArr = [carg.name], ptrStrArr = [ptrStr]\n          for(var j=0; j<Math.abs(proc.arrayBlockIndices[arrNum]); j++) {\n            reStrArr.push(\"\\\\s*\\\\[([^\\\\]]+)\\\\]\")\n            ptrStrArr.push(\"$\" + (j+1) + \"*t\" + arrNum + \"b\" + j) // Matched index times stride\n          }\n          re = new RegExp(reStrArr.join(\"\"), \"g\")\n          ptrStr = ptrStrArr.join(\"+\")\n          if(dtypes[arrNum] === \"generic\") {\n            /*if(carg.lvalue) {\n              pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\n              code = code.replace(re, localStr)\n              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n            } else {\n              code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\n            }*/\n            throw new Error(\"cwise: Generic arrays not supported in combination with blocks!\")\n          } else {\n            // This does not produce any local variables, even if variables are used multiple times. It would be possible to do so, but it would complicate things quite a bit.\n            code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\n          }\n        }\n      break\n      case \"scalar\":\n        code = code.replace(re, \"Y\" + proc.scalarArgs.indexOf(i))\n      break\n      case \"index\":\n        code = code.replace(re, \"index\")\n      break\n      case \"shape\":\n        code = code.replace(re, \"shape\")\n      break\n    }\n  }\n  return [pre.join(\"\\n\"), code, post.join(\"\\n\")].join(\"\\n\").trim()\n}\n\nfunction typeSummary(dtypes) {\n  var summary = new Array(dtypes.length)\n  var allEqual = true\n  for(var i=0; i<dtypes.length; ++i) {\n    var t = dtypes[i]\n    var digits = t.match(/\\d+/)\n    if(!digits) {\n      digits = \"\"\n    } else {\n      digits = digits[0]\n    }\n    if(t.charAt(0) === 0) {\n      summary[i] = \"u\" + t.charAt(1) + digits\n    } else {\n      summary[i] = t.charAt(0) + digits\n    }\n    if(i > 0) {\n      allEqual = allEqual && summary[i] === summary[i-1]\n    }\n  }\n  if(allEqual) {\n    return summary[0]\n  }\n  return summary.join(\"\")\n}\n\n//Generates a cwise operator\nfunction generateCWiseOp(proc, typesig) {\n\n  //Compute dimension\n  // Arrays get put first in typesig, and there are two entries per array (dtype and order), so this gets the number of dimensions in the first array arg.\n  var dimension = (typesig[1].length - Math.abs(proc.arrayBlockIndices[0]))|0\n  var orders = new Array(proc.arrayArgs.length)\n  var dtypes = new Array(proc.arrayArgs.length)\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    dtypes[i] = typesig[2*i]\n    orders[i] = typesig[2*i+1]\n  }\n  \n  //Determine where block and loop indices start and end\n  var blockBegin = [], blockEnd = [] // These indices are exposed as blocks\n  var loopBegin = [], loopEnd = [] // These indices are iterated over\n  var loopOrders = [] // orders restricted to the loop indices\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    if (proc.arrayBlockIndices[i]<0) {\n      loopBegin.push(0)\n      loopEnd.push(dimension)\n      blockBegin.push(dimension)\n      blockEnd.push(dimension+proc.arrayBlockIndices[i])\n    } else {\n      loopBegin.push(proc.arrayBlockIndices[i]) // Non-negative\n      loopEnd.push(proc.arrayBlockIndices[i]+dimension)\n      blockBegin.push(0)\n      blockEnd.push(proc.arrayBlockIndices[i])\n    }\n    var newOrder = []\n    for(var j=0; j<orders[i].length; j++) {\n      if (loopBegin[i]<=orders[i][j] && orders[i][j]<loopEnd[i]) {\n        newOrder.push(orders[i][j]-loopBegin[i]) // If this is a loop index, put it in newOrder, subtracting loopBegin, to make sure that all loopOrders are using a common set of indices.\n      }\n    }\n    loopOrders.push(newOrder)\n  }\n\n  //First create arguments for procedure\n  var arglist = [\"SS\"] // SS is the overall shape over which we iterate\n  var code = [\"'use strict'\"]\n  var vars = []\n  \n  for(var j=0; j<dimension; ++j) {\n    vars.push([\"s\", j, \"=SS[\", j, \"]\"].join(\"\")) // The limits for each dimension.\n  }\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    arglist.push(\"a\"+i) // Actual data array\n    arglist.push(\"t\"+i) // Strides\n    arglist.push(\"p\"+i) // Offset in the array at which the data starts (also used for iterating over the data)\n    \n    for(var j=0; j<dimension; ++j) { // Unpack the strides into vars for looping\n      vars.push([\"t\",i,\"p\",j,\"=t\",i,\"[\",loopBegin[i]+j,\"]\"].join(\"\"))\n    }\n    \n    for(var j=0; j<Math.abs(proc.arrayBlockIndices[i]); ++j) { // Unpack the strides into vars for block iteration\n      vars.push([\"t\",i,\"b\",j,\"=t\",i,\"[\",blockBegin[i]+j,\"]\"].join(\"\"))\n    }\n  }\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\n    arglist.push(\"Y\" + i)\n  }\n  if(proc.shapeArgs.length > 0) {\n    vars.push(\"shape=SS.slice(0)\") // Makes the shape over which we iterate available to the user defined functions (so you can use width/height for example)\n  }\n  if(proc.indexArgs.length > 0) {\n    // Prepare an array to keep track of the (logical) indices, initialized to dimension zeroes.\n    var zeros = new Array(dimension)\n    for(var i=0; i<dimension; ++i) {\n      zeros[i] = \"0\"\n    }\n    vars.push([\"index=[\", zeros.join(\",\"), \"]\"].join(\"\"))\n  }\n  for(var i=0; i<proc.offsetArgs.length; ++i) { // Offset arguments used for stencil operations\n    var off_arg = proc.offsetArgs[i]\n    var init_string = []\n    for(var j=0; j<off_arg.offset.length; ++j) {\n      if(off_arg.offset[j] === 0) {\n        continue\n      } else if(off_arg.offset[j] === 1) {\n        init_string.push([\"t\", off_arg.array, \"p\", j].join(\"\"))      \n      } else {\n        init_string.push([off_arg.offset[j], \"*t\", off_arg.array, \"p\", j].join(\"\"))\n      }\n    }\n    if(init_string.length === 0) {\n      vars.push(\"q\" + i + \"=0\")\n    } else {\n      vars.push([\"q\", i, \"=\", init_string.join(\"+\")].join(\"\"))\n    }\n  }\n\n  //Prepare this variables\n  var thisVars = uniq([].concat(proc.pre.thisVars)\n                      .concat(proc.body.thisVars)\n                      .concat(proc.post.thisVars))\n  vars = vars.concat(thisVars)\n  if (vars.length > 0) {\n    code.push(\"var \" + vars.join(\",\"))\n  }\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    code.push(\"p\"+i+\"|=0\")\n  }\n  \n  //Inline prelude\n  if(proc.pre.body.length > 3) {\n    code.push(processBlock(proc.pre, proc, dtypes))\n  }\n\n  //Process body\n  var body = processBlock(proc.body, proc, dtypes)\n  var matched = countMatches(loopOrders)\n  if(matched < dimension) {\n    code.push(outerFill(matched, loopOrders[0], proc, body)) // TODO: Rather than passing loopOrders[0], it might be interesting to look at passing an order that represents the majority of the arguments for example.\n  } else {\n    code.push(innerFill(loopOrders[0], proc, body))\n  }\n\n  //Inline epilog\n  if(proc.post.body.length > 3) {\n    code.push(processBlock(proc.post, proc, dtypes))\n  }\n  \n  if(proc.debug) {\n    console.log(\"-----Generated cwise routine for \", typesig, \":\\n\" + code.join(\"\\n\") + \"\\n----------\")\n  }\n  \n  var loopName = [(proc.funcName||\"unnamed\"), \"_cwise_loop_\", orders[0].join(\"s\"),\"m\",matched,typeSummary(dtypes)].join(\"\")\n  var f = new Function([\"function \",loopName,\"(\", arglist.join(\",\"),\"){\", code.join(\"\\n\"),\"} return \", loopName].join(\"\"))\n  return f()\n}\nmodule.exports = generateCWiseOp\n","\"use strict\"\n\nfunction unique_pred(list, compare) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b=list[0]\n  for(var i=1; i<len; ++i) {\n    b = a\n    a = list[i]\n    if(compare(a, b)) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique_eq(list) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b = list[0]\n  for(var i=1; i<len; ++i, b=a) {\n    b = a\n    a = list[i]\n    if(a !== b) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique(list, compare, sorted) {\n  if(list.length === 0) {\n    return list\n  }\n  if(compare) {\n    if(!sorted) {\n      list.sort(compare)\n    }\n    return unique_pred(list, compare)\n  }\n  if(!sorted) {\n    list.sort()\n  }\n  return unique_eq(list)\n}\n\nmodule.exports = unique\n","@use \"../../shared.scss\" as *;\n@use \"../../themed.scss\" as *;\n\n.shader_view {\n  @include card($color-background-container, true, false);\n\n  width: 100%;\n  height: 100%;\n\n  & > canvas {\n    margin: 0;\n  }\n}\n","@use \"../../shared.scss\" as *;\n@use \"../../themed.scss\" as *;\n\n.shader_demo {\n  margin-bottom: 2rem;\n\n  @include is_larger_than($sm-breakpoint) {\n    display: grid;\n    gap: 1rem;\n    align-items: center;\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n}\n\n.shader_syntax {\n  & > pre {\n    @include card($color-background-container, true, false);\n\n    margin: 0 !important;\n    &:not(:last-child) {\n      margin-bottom: 1rem !important;\n    }\n  }\n}\n\n.shader_view {\n  height: 240px;\n  margin-bottom: 1rem;\n\n  @include is_larger_than($sm-breakpoint) {\n    height: 100%;\n    margin-bottom: initial;\n  }\n}\n","import fs from \"fs\";\nimport { ShaderViewProps } from \"~src/common/shaderView/shaderView.component\";\n\nimport square from \"~src/assets/shaders/square.json\";\n\nimport vertexAssorted1 from \"~src/assets/shaders/assorted1.vert\";\nimport fragmentAssorted1 from \"~src/assets/shaders/assorted1.frag\";\nimport vertexBasic1 from \"~src/assets/shaders/basic1.vert\";\nimport fragmentBasic1 from \"~src/assets/shaders/basic1.frag\";\nimport vertexBasic2 from \"~src/assets/shaders/basic2.vert\";\nimport fragmentBasic2 from \"~src/assets/shaders/basic2.frag\";\nimport vertexBasic3 from \"~src/assets/shaders/basic3.vert\";\nimport fragmentBasic3 from \"~src/assets/shaders/basic3.frag\";\nimport vertexBasic4 from \"~src/assets/shaders/basic4.vert\";\nimport fragmentBasic4 from \"~src/assets/shaders/basic4.frag\";\nimport vertexTexture1 from \"~src/assets/shaders/texture1.vert\";\nimport fragmentTexture1 from \"~src/assets/shaders/texture1.frag\";\n\nconst kitty = fs.readFileSync(\"src/assets/images/kitty.png\");\n\nexport const CATEGORIES = [\"basic\", \"textures\", \"shading\", \"other\"] as const;\n\nexport type Category = (typeof CATEGORIES)[number];\n\nexport const SHADERS_LIST: { [K in Category]: ShaderViewProps[] } = {\n  basic: [\n    {\n      vertexShader: vertexBasic1,\n      fragmentShader: fragmentBasic1,\n      primitive: \"triangle strip\",\n      position: square.map(([x, y, z, h]) => [x * 0.7, y * 0.7, z, h]),\n    },\n    {\n      vertexShader: vertexBasic2,\n      fragmentShader: fragmentBasic2,\n      primitive: \"triangle strip\",\n      position: square.map(([x, y, z, h]) => [x * 0.7, y * 0.7, z, h]),\n    },\n    {\n      vertexShader: vertexBasic3,\n      fragmentShader: fragmentBasic3,\n      primitive: \"triangle strip\",\n      position: square.map(([x, y, z, h]) => [x * 0.8, y * 0.8, z, h]),\n    },\n    {\n      vertexShader: vertexBasic4,\n      fragmentShader: fragmentBasic4,\n      primitive: \"triangle strip\",\n      position: square.map(([x, y, z, h]) => [x * 0.8, y * 0.8, z, h]),\n    },\n  ],\n  textures: [\n    {\n      vertexShader: vertexTexture1,\n      fragmentShader: fragmentTexture1,\n      primitive: \"triangle strip\",\n      position: square.map(([x, y, z, h]) => [x * 0.8, y * 0.8, z, h]),\n      textures: {\n        \"textures[0]\": kitty,\n      },\n    },\n  ],\n  shading: [],\n  other: [\n    {\n      vertexShader: vertexAssorted1,\n      fragmentShader: fragmentAssorted1,\n      primitive: \"triangle strip\",\n      position: square,\n    },\n  ],\n};\n","[\n  [-1.0, -1.0, 0, 1],\n  [1.0, -1.0, 0, 1],\n  [-1.0, 1.0, 0, 1],\n  [1.0, 1.0, 0, 1]\n]\n","precision mediump float;\n\nattribute vec4 position;\n\nvoid main() {\n    gl_Position = position;\n}\n","precision mediump float;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / u_resolution;\n    float color = 0.0;\n\n    color += sin(uv.y * cos(u_time / 21.0) * 12.0)\n        + sin(uv.x * cos(u_time / 10.0) * 20.0);\n    color += sin(uv.x * cos(u_time / 43.0) * 24.0)\n        + cos(uv.y * cos(u_time / 20.0) * 30.0);\n    color += sin(uv.y * sin(u_time / 65.0) * 36.0)\n        + cos(uv.x * sin(u_time / 30.0) * 40.0);\n    color += sin(uv.x * sin(u_time / 87.0) * 48.0)\n        + sin(uv.y * sin(u_time / 40.0) * 50.0);\n\n    gl_FragColor = vec4(\n        color * 0.65,\n        color * 0.45,\n        color * 0.85,\n        1.0\n    );\n}\n","precision mediump float;\n\nuniform float u_time;\nattribute vec4 position;\n\nmat4 rotate_z(float theta)\n{\n    return mat4(\n        vec4( cos(theta), sin(theta), 0.0, 0.0),\n        vec4(-sin(theta), cos(theta), 0.0, 0.0),\n        vec4(        0.0,        0.0, 1.0, 0.0),\n        vec4(        0.0,        0.0, 0.0, 1.0)\n    );\n}\n\nvoid main() {\n    gl_Position = rotate_z(u_time) * position;\n}\n","precision mediump float;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / u_resolution;\n\n    gl_FragColor = vec4(\n        0.65 * (sin(u_time + uv.x) * 0.3 + 0.7),\n        0.45 * (cos(u_time + uv.y) * 0.3 + 0.7),\n        0.85 * (sin(u_time + uv.x) * 0.3 + 0.7),\n        1.0\n    );\n}\n","precision mediump float;\n\nuniform float u_time;\nattribute vec4 position;\n\nmat4 rotate_x(float theta)\n{\n    return mat4(\n        vec4(1.0,         0.0,        0.0, 0.0),\n        vec4(0.0,  cos(theta), sin(theta), 0.0),\n        vec4(0.0, -sin(theta), cos(theta), 0.0),\n        vec4(0.0,         0.0,        0.0, 1.0)\n    );\n}\n\nmat4 projection(float perspective)\n{\n    return mat4(\n        vec4(1.0, 0.0, 0.0, 0.0),\n        vec4(0.0, 1.0, 0.0, 0.0),\n        vec4(0.0, 0.0, 1.0, perspective),\n        vec4(0.0, 0.0, 0.0, 1.0)\n    );\n}\n\nvoid main() {\n    gl_Position = projection(0.3) * rotate_x(u_time) * position;\n}\n","precision mediump float;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid main() //[demo_hide]\n{\n    vec2 uv = gl_FragCoord.xy / u_resolution;\n\n    gl_FragColor = vec4(\n        0.65 * (sin(u_time + uv.x) * 0.3 + 0.7),\n        0.45 * (cos(u_time + uv.y) * 0.3 + 0.7),\n        0.85 * (sin(u_time + uv.x) * 0.3 + 0.7),\n        1.0\n    );\n} //[demo_hide_end]\n","precision mediump float;\n\nuniform float u_time;\nuniform vec2 u_resolution;\nattribute vec4 position;\n\nmat4 view_frustum(\n    float angle,\n    float aspect,\n    float near,\n    float far\n) //[demo_hide]\n{\n    return mat4(\n        vec4(1.0/tan(angle), 0.0, 0.0, 0.0),\n        vec4(0.0, aspect/tan(angle), 0.0, 0.0),\n        vec4(0.0, 0.0, (far+near)/(far-near), 1.0),\n        vec4(0.0, 0.0, -2.0*far*near/(far-near), 0.0)\n    );\n} //[demo_hide_end]\n\nmat4 translate(float x, float y, float z)\n{\n    return mat4(\n        vec4(1.0, 0.0, 0.0, 0.0),\n        vec4(0.0, 1.0, 0.0, 0.0),\n        vec4(0.0, 0.0, 1.0, 0.0),\n        vec4(x,   y,   z,   1.0)\n    );\n}\n\nvoid main() {\n    float aspect = u_resolution.x / u_resolution.y;\n    gl_Position = view_frustum(radians(45.0), aspect, 0.5, 5.0)\n        * translate(cos(u_time), 0.0, 3.0 + sin(u_time))\n        * position;\n}\n","precision mediump float;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid main() //[demo_hide]\n{\n    vec2 uv = gl_FragCoord.xy / u_resolution;\n\n    gl_FragColor = vec4(\n        0.65 * (sin(u_time + uv.x) * 0.3 + 0.7),\n        0.45 * (cos(u_time + uv.y) * 0.3 + 0.7),\n        0.85 * (sin(u_time + uv.x) * 0.3 + 0.7),\n        1.0\n    );\n} //[demo_hide_end]\n","precision mediump float;\n\nuniform float u_time;\nuniform vec2 u_resolution;\nattribute vec4 position;\n\nmat4 scale(float x, float y, float z) //[demo_hide]\n{\n    return mat4(\n        vec4(x,   0.0, 0.0, 0.0),\n        vec4(0.0, y,   0.0, 0.0),\n        vec4(0.0, 0.0, z,   0.0),\n        vec4(0.0, 0.0, 0.0, 1.0)\n    );\n} //[demo_hide_end]\n\nmat4 translate(float x, float y, float z) //[demo_hide]\n{\n    return mat4(\n        vec4(1.0, 0.0, 0.0, 0.0),\n        vec4(0.0, 1.0, 0.0, 0.0),\n        vec4(0.0, 0.0, 1.0, 0.0),\n        vec4(x,   y,   z,   1.0)\n    );\n} //[demo_hide_end]\n\nmat4 rotate_x(float theta) //[demo_hide]\n{\n    return mat4(\n        vec4(1.0,         0.0,         0.0, 0.0),\n        vec4(0.0,  cos(theta),  sin(theta), 0.0),\n        vec4(0.0, -sin(theta),  cos(theta), 0.0),\n        vec4(0.0,         0.0,         0.0, 1.0)\n    );\n} //[demo_hide_end]\n\nmat4 view_frustum(\n    float angle,\n    float aspect,\n    float near,\n    float far\n) {\n    return mat4(\n        vec4(1.0/tan(angle), 0.0, 0.0, 0.0),\n        vec4(0.0, aspect/tan(angle), 0.0, 0.0),\n        vec4(0.0, 0.0, (far+near)/(far-near), 1.0),\n        vec4(0.0, 0.0, -2.0*far*near/(far-near), 0.0)\n    );\n}\n\nvoid main() {\n    float aspect = u_resolution.x / u_resolution.y;\n    gl_Position = view_frustum(radians(45.0), aspect, 0.5, 5.0)\n        * translate(cos(u_time), 0.0, 3.0 + sin(u_time))\n        * rotate_x(u_time)\n        * scale(aspect, 1.0, 1.0)\n        * position;\n}\n","precision mediump float;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid main() //[demo_hide]\n{\n    vec2 uv = gl_FragCoord.xy / u_resolution;\n\n    gl_FragColor = vec4(\n        0.65 * (sin(u_time + uv.x) * 0.3 + 0.7),\n        0.45 * (cos(u_time + uv.y) * 0.3 + 0.7),\n        0.85 * (sin(u_time + uv.x) * 0.3 + 0.7),\n        1.0\n    );\n} //[demo_hide_end]\n","precision mediump float;\n\nuniform float u_time;\nuniform vec2 u_resolution;\nattribute vec4 position;\n\nvarying vec2 texcoord;\n\nmat4 translate(float x, float y, float z) //[demo_hide]\n{\n    return mat4(\n        vec4(1.0, 0.0, 0.0, 0.0),\n        vec4(0.0, 1.0, 0.0, 0.0),\n        vec4(0.0, 0.0, 1.0, 0.0),\n        vec4(x,   y,   z,   1.0)\n    );\n} //[demo_hide_end]\n\nmat4 rotate_x(float theta) //[demo_hide]\n{\n    return mat4(\n        vec4(1.0,         0.0,         0.0, 0.0),\n        vec4(0.0,  cos(theta),  sin(theta), 0.0),\n        vec4(0.0, -sin(theta),  cos(theta), 0.0),\n        vec4(0.0,         0.0,         0.0, 1.0)\n    );\n} //[demo_hide_end]\n\nmat4 view_frustum(\n    float angle,\n    float aspect,\n    float near,\n    float far\n) { //[demo_hide]\n\n    return mat4(\n        vec4(1.0/tan(angle), 0.0, 0.0, 0.0),\n        vec4(0.0, aspect/tan(angle), 0.0, 0.0),\n        vec4(0.0, 0.0, (far+near)/(far-near), 1.0),\n        vec4(0.0, 0.0, -2.0*far*near/(far-near), 0.0)\n    );\n} //[demo_hide_end]\n\nvoid main() {\n    float aspect = u_resolution.x / u_resolution.y;\n    gl_Position = view_frustum(radians(45.0), aspect, 0.5, 5.0)\n        * translate(0.0, 0.0, 1.0)\n        * rotate_x(sin(u_time) * 0.5)\n        * position;\n    texcoord = position.xy * vec2(0.5, -0.5) + vec2(0.5);\n}\n","precision mediump float;\n\nuniform sampler2D textures[1];\n\nvarying vec2 texcoord;\n\nvoid main() {\n    gl_FragColor = texture2D(textures[0], texcoord);\n}\n"],"names":["$lKtKv","parcelRequire","$7f07a3dc4c62428a$export$2e2bcd8739ae039","category","$hvI8U","useParams","$aEUbb","CATEGORIES","includes","jsxs","jsx","$jHHQg","Subnavigation","current","routes","map","nav_category","route","label","SHADERS_LIST","shaderProps","index","$3Lj83","ShaderDemo","$48f2355488d6ae26$export$9d31ae5c3d01953a","className","$parcel$interopDefault","$8S2Ob","subnavigation","$9sY3z","$4Yl7V","Link","to","$67558b924274b342$export$3273e9d4e49fa9c8","$67558b924274b342$export$97aac956da55dae9","$6a46d818bcf6984f$var$omitHidden","input","replace","$6a46d818bcf6984f$export$c691ce0b43a64cb2","vertexShader","fragmentShader","props","theme","$hTxeE","useAppSelector","state","$hOEIm","shader_demo","shader_view","$cflIb","ShaderView","shader_syntax","$cqg0o","SyntaxHighlighter","language","style","$ee91V","Theme","DARKMODE","styleDark","styleLight","async","$7567eb09d751c200$var$importTexture","buffer","$4it4t","getPixels","$7567eb09d751c200$var$runShaders","regl","position","primitive","textures","textureArrayMap","buffers","result","key","texture","$7567eb09d751c200$var$importTextures","drawVertices","vert","frag","attributes","uniforms","u_resolution","context","u_time","count","frame","clear","color","depth","$7567eb09d751c200$export$ec92a3ab06ae2ae2","ref","$fPSy9","useRef","useEffect","$lrQbr","$gHXkF","Frame","aspect","$ePSYF","width","height","$iczqV","data","mimeType","Uint8Array","$320f64ccd0cedc4d$require$Buffer","Buffer","from","Promise","resolve","reject","path","typeOrCallback","callback","Error","blob","Blob","type","URL","createObjectURL","img","Image","crossOrigin","onload","revokeObjectURL","canvas","document","createElement","getContext","drawImage","pixels","getImageData","ndarray","onerror","err","src","$hB4q7","$d404d54ffa5194d4$var$hasTypedArrays","Float64Array","$d404d54ffa5194d4$var$compare1st","a","b","$d404d54ffa5194d4$var$order","i","stride","this","terms","Array","length","Math","abs","sort","$d404d54ffa5194d4$var$compileConstructor","dtype","dimension","join","useGetters","code","Function","procedure","$d404d54ffa5194d4$var$CACHED_CONSTRUCTORS","indices","args","index_str","shapeArg","strideArg","push","a_vars","c_vars","tShape","tStride","n","idx","float32","float64","int8","int16","int32","uint8","uint16","uint32","array","uint8_clamped","bigint64","biguint64","generic","module","exports","shape","offset","undefined","ctor","d","sz","$7E4wf","Object","prototype","toString","call","isArray","$d404d54ffa5194d4$var$arrayDType","ctor_list","$590fc640dd350ee6$var$isBuffer","obj","constructor","isBuffer","readFloatLE","slice","$590fc640dd350ee6$var$isSlowBuffer","_isBuffer","$018dc125a583e169$var$EmptyProc","body","thisVars","localVars","$018dc125a583e169$var$fixup","x","name","lvalue","rvalue","$018dc125a583e169$var$makeOp","user_args","funcName","wrapper","$gW9OT","pre","post","proc","$018dc125a583e169$var$pcompile","$018dc125a583e169$var$assign_ops","add","sub","mul","div","mod","band","bor","bxor","lshift","rshift","rrshift","id","op","$018dc125a583e169$var$unary_ops","not","bnot","neg","recip","$018dc125a583e169$var$binary_ops","and","or","eq","neq","lt","gt","leq","geq","$018dc125a583e169$var$math_unary","f","$018dc125a583e169$var$math_comm","$018dc125a583e169$var$math_noncomm","any","all","sum","prod","norm2squared","norm2","norminf","norm1","sup","inf","argmin","argmax","random","assign","assigns","equals","$c549ae1f175a01ea$var$Procedure","argTypes","shimArgs","arrayArgs","arrayBlockIndices","scalarArgs","offsetArgs","offsetArgIndex","indexArgs","shapeArgs","debug","proc_args","arg_type","blockIndices","printCode","blockSize","$23CXl","vars","thunkName","typesig","string_typesig","max","shapeLengthConditions","shapeConditions","j","console","log","thunk","$kgd6z","bind","$ebff77a33e1cfea9$var$innerFill","order","nargs","has_index","pidx","$ebff77a33e1cfea9$var$processBlock","block","dtypes","carg","re","RegExp","ptrStr","arrNum","indexOf","offArgIndex","localStr","arrStr","reStrArr","ptrStrArr","trim","$ebff77a33e1cfea9$var$typeSummary","summary","allEqual","t","digits","match","charAt","orders","blockBegin","blockEnd","loopBegin","loopEnd","loopOrders","newOrder","arglist","zeros","off_arg","init_string","$5brTy","concat","matched","$ebff77a33e1cfea9$var$countMatches","indexStr","$ebff77a33e1cfea9$var$outerFill","loopName","list","compare","sorted","ptr","len","$3c639e33fe129cf8$var$unique_pred","$3c639e33fe129cf8$var$unique_eq","$acd0798002a968fa$export$447389b194657347","$cf86b037a886b2fb$export$157037839347bb9","$cf86b037a886b2fb$export$fa3e70b0974fa065","$cf86b037a886b2fb$export$447389b194657347","$afb612b3dcf10688$var$kitty","$afb612b3dcf10688$export$a513ea61a7bee91c","$afb612b3dcf10688$export$6844c95cdbc118c2","basic","$imcCA","$5aEpn","$gwzP5","y","z","h","$cdkHD","$hc8Na","$lEDvD","$11Nf0","$9FcaC","$8uKSL","$lzKmm","$eaBcA","shading","other","$j4TH4","$9S1gd","JSON","parse"],"version":3,"file":"shaders.component.b7394d8a.js.map"}