{"mappings":"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","sources":["src/features/shaders/shaders.component.tsx","src/common/codeDemo/codeDemo.component.tsx","src/common/codeDemo/codeDemo.module.scss","src/features/shaders/shadersList.ts","src/features/shaders/demos/assorted1.ts","src/assets/shaders/assorted1.vert","src/assets/shaders/assorted1.frag","src/assets/shaders/square.json","src/features/shaders/demos/assorted2.ts","src/assets/shaders/assorted2.vert","src/assets/shaders/assorted2.frag","src/features/shaders/demos/assorted3.ts","src/assets/shaders/assorted3.vert","src/assets/shaders/assorted3.frag","src/features/shaders/demos/assorted4.ts","src/assets/shaders/assorted4.vert","src/assets/shaders/assorted4.frag","src/features/shaders/demos/assorted5.ts","src/assets/shaders/assorted5.vert","src/assets/shaders/assorted5.frag","src/features/shaders/demos/assorted6.ts","src/assets/shaders/assorted6.vert","src/assets/shaders/assorted6.frag","src/features/shaders/demos/basic1.ts","src/assets/shaders/basic1.vert","src/assets/shaders/basic1.frag","src/features/shaders/demos/basic2.ts","src/assets/shaders/basic2.vert","src/assets/shaders/basic2.frag","src/features/shaders/demos/basic3.ts","src/assets/shaders/basic3.vert","src/assets/shaders/basic3.frag","src/features/shaders/demos/basic4.ts","src/assets/shaders/basic4.vert","src/assets/shaders/basic4.frag","src/features/shaders/demos/textures1.ts","src/features/shaders/shadersShared.ts","node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/mat4.js","node_modules/.pnpm/gl-matrix@3.4.3/node_modules/gl-matrix/esm/common.js","node_modules/.pnpm/ndarray-pixels@3.0.4/node_modules/ndarray-pixels/src/index.ts","node_modules/.pnpm/ndarray-pixels@3.0.4/node_modules/ndarray-pixels/src/browser-get-pixels.ts","node_modules/.pnpm/ndarray@1.0.19/node_modules/ndarray/ndarray.js","node_modules/.pnpm/iota-array@1.0.0/node_modules/iota-array/iota.js","node_modules/.pnpm/is-buffer@1.1.6/node_modules/is-buffer/index.js","node_modules/.pnpm/ndarray-ops@1.2.2/node_modules/ndarray-ops/ndarray-ops.js","node_modules/.pnpm/cwise-compiler@1.1.3/node_modules/cwise-compiler/compiler.js","node_modules/.pnpm/cwise-compiler@1.1.3/node_modules/cwise-compiler/lib/thunk.js","node_modules/.pnpm/cwise-compiler@1.1.3/node_modules/cwise-compiler/lib/compile.js","node_modules/.pnpm/uniq@1.0.1/node_modules/uniq/uniq.js","src/assets/shaders/textures1.vert","src/assets/shaders/textures1.frag","src/features/shaders/demos/lighting1.ts","node_modules/.pnpm/bunny@1.0.1/node_modules/bunny/index.js","src/features/shaders/mesh.ts","node_modules/.pnpm/angle-normals@1.0.0/node_modules/angle-normals/angle-normals.js","src/assets/shaders/lighting1.vert","src/assets/shaders/lighting1.frag","src/features/shaders/demos/lighting2.ts","src/assets/shaders/lighting2.vert","src/assets/shaders/lighting2.frag","src/features/shaders/demos/lighting3.ts","src/assets/shaders/lighting3.vert","src/assets/shaders/lighting3.frag","src/features/shaders/demos/shadows1.ts","src/assets/shaders/shadows1_main.vert","src/assets/shaders/shadows1_main.frag","src/assets/shaders/shadows1_depth.vert","src/assets/shaders/shadows1_depth.frag","src/common/shaderView/shaderView.component.tsx","src/common/shaderView/shaderView.module.scss","src/common/toggle/toggle.component.tsx","src/common/toggle/toggle.module.scss","src/hooks/useLocalStorage.ts","src/features/shaders/shaders.module.scss"],"sourcesContent":["import { FC } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport cn from \"classnames\";\n\nimport { Subnavigation } from \"~src/common/subnavigation/subnavigation.component\";\nimport { CodeDemo } from \"~src/common/codeDemo/codeDemo.component\";\nimport { CATEGORIES, Category, SHADERS_LIST } from \"./shadersList\";\nimport { ShaderView } from \"~src/common/shaderView/shaderView.component\";\nimport { Toggle } from \"~src/common/toggle/toggle.component\";\nimport { useLocalStorage } from \"~src/hooks/useLocalStorage\";\n\nimport styles from \"./shaders.module.scss\";\n\nconst Shaders: FC = () => {\n  const [codeVisible, setCodeVisible] = useLocalStorage(\n    \"SHADER_CODE_VISIBLE\",\n    true\n  );\n  let { category } = useParams<{ category: Category }>();\n\n  if (!(category && CATEGORIES.includes(category))) {\n    category = CATEGORIES[0];\n  }\n\n  return (\n    <section>\n      <Subnavigation\n        current={`/projects/shaders/${category}`}\n        routes={CATEGORIES.map((nav_category) => ({\n          route: `/projects/shaders/${nav_category}`,\n          label: nav_category,\n        }))}\n        options={[\n          <Toggle key={\"show_code\"} value={codeVisible} setter={setCodeVisible}>\n            show code\n          </Toggle>,\n        ]}\n      />\n      <div\n        className={cn(styles.shader_list, {\n          [styles.code_visible]: codeVisible,\n        })}\n      >\n        {SHADERS_LIST[category].map(({ procedure, code }, index) =>\n          codeVisible ? (\n            <CodeDemo key={`${category!}${index}`} excerpts={code}>\n              <ShaderView procedure={procedure} />\n            </CodeDemo>\n          ) : (\n            <ShaderView key={index} procedure={procedure} />\n          )\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Shaders;\n","import { FC, ReactElement } from \"react\";\n\nimport { useAppSelector } from \"~/src/app/store\";\nimport { Theme } from \"~/src/features/theme/theme.slice\";\nimport {\n  SyntaxHighlighter,\n  styleLight,\n  styleDark,\n} from \"~/src/utilities/syntaxHighlighter\";\n\nimport styles from \"./codeDemo.module.scss\";\n\nfunction omitHidden(input: string) {\n  return input.replace(\n    /\\/\\/\\[demo_hide\\]([\\s\\S]*?)\\/\\/\\[demo_hide_end\\]/g,\n    \"{...}\"\n  );\n}\n\nexport type Excerpt = { language: string; code: string };\n\ntype CodeDemoProps = {\n  children: ReactElement;\n  excerpts: Excerpt[];\n};\n\nexport const CodeDemo: FC<CodeDemoProps> = ({ children, excerpts }) => {\n  const theme = useAppSelector((state) => state.theme.theme);\n\n  return (\n    <section className={styles.shader_demo}>\n      <div className={styles.shader_view}>{children}</div>\n      <div className={styles.shader_syntax}>\n        {excerpts.map(({ language, code }, index) => (\n          <SyntaxHighlighter\n            key={index}\n            language={language}\n            style={theme === Theme.DARKMODE ? styleDark : styleLight}\n          >\n            {omitHidden(code)}\n          </SyntaxHighlighter>\n        ))}\n      </div>\n    </section>\n  );\n};\n","@use \"../../shared.scss\" as *;\n@use \"../../themed.scss\" as *;\n\n.shader_demo {\n  margin-bottom: 2rem;\n\n  @include is_larger_than($sm-breakpoint) {\n    display: grid;\n    gap: 1rem;\n    align-items: center;\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n}\n\n.shader_syntax {\n  & > pre {\n    @include card($color-background-container, true);\n\n    margin: 0 !important;\n    &:not(:last-child) {\n      margin-bottom: 1rem !important;\n    }\n  }\n}\n\n.shader_view {\n  height: 240px;\n  margin-bottom: 1rem;\n\n  @include is_larger_than($sm-breakpoint) {\n    height: 100%;\n    margin-bottom: initial;\n  }\n}\n","import { Procedure } from \"~src/common/shaderView/shaderView.component\";\nimport { Excerpt } from \"~src/common/codeDemo/codeDemo.component\";\n\nimport assorted1 from \"./demos/assorted1\";\nimport assorted2 from \"./demos/assorted2\";\nimport assorted3 from \"./demos/assorted3\";\nimport assorted4 from \"./demos/assorted4\";\nimport assorted5 from \"./demos/assorted5\";\nimport assorted6 from \"./demos/assorted6\";\nimport basic1 from \"./demos/basic1\";\nimport basic2 from \"./demos/basic2\";\nimport basic3 from \"./demos/basic3\";\nimport basic4 from \"./demos/basic4\";\nimport textures1 from \"./demos/textures1\";\nimport lighting1 from \"./demos/lighting1\";\nimport lighting2 from \"./demos/lighting2\";\nimport lighting3 from \"./demos/lighting3\";\nimport shadows1 from \"./demos/shadows1\";\n\nexport const CATEGORIES = [\n  \"assorted\",\n  \"basic\",\n  \"textures\",\n  \"lighting\",\n  \"shadows\",\n] as const;\n\nexport type Category = (typeof CATEGORIES)[number];\n\nexport type ShaderDemo = { procedure: Procedure; code: Excerpt[] };\n\nexport const SHADERS_LIST: { [K in Category]: ShaderDemo[] } = {\n  assorted: [assorted1, assorted2, assorted3, assorted4, assorted5, assorted6],\n  basic: [basic1, basic2, basic3, basic4],\n  textures: [textures1],\n  lighting: [lighting1, lighting2, lighting3],\n  shadows: [shadows1],\n};\n","import { Procedure } from \"~src/common/shaderView/shaderView.component\";\nimport { ShaderDemo } from \"../shadersList\";\n\nimport vertexShader from \"~src/assets/shaders/assorted1.vert\";\nimport fragmentShader from \"~src/assets/shaders/assorted1.frag\";\nimport square from \"~src/assets/shaders/square.json\";\n\nconst procedure: Procedure = (regl) => {\n  const drawSquare = regl({\n    primitive: \"triangle strip\",\n    vert: vertexShader,\n    frag: fragmentShader,\n    elements: [0, 1, 2, 3],\n    uniforms: {\n      u_time: ({ time }) => time,\n      u_resolution: ({ viewportWidth, viewportHeight }) => [\n        viewportWidth,\n        viewportHeight,\n      ],\n    },\n    attributes: {\n      position: square.map(([x, y, z, h]) => [x, y, z, h]),\n    },\n  });\n  regl.frame(() => {\n    regl.clear({ depth: 1, color: [0, 0, 0, 1] });\n    drawSquare();\n  });\n};\n\nconst demo: ShaderDemo = {\n  procedure,\n  code: [{ language: \"glsl\", code: fragmentShader }],\n};\n\nexport default demo;\n","precision mediump float;\n\nattribute vec4 position;\n\nvoid main() {\n    gl_Position = position;\n}\n","precision mediump float;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nfloat circle(in vec2 uv, in float radius, in vec2 center) {\n    vec2 dist = uv - center;\n    return 1. - smoothstep(\n        radius - (radius * 0.01),\n        radius + (radius * 0.01),\n        dot(dist, dist) * 4.0\n    );\n}\n\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / u_resolution;\n\n    vec3 color = vec3(\n        circle(uv, 0.4, vec2(\n            0.5 - sin(u_time / 2.) / 12.,\n            0.5 - sin(u_time / 2.) / 12.\n        )),\n        circle(uv,0.4,vec2(\n            0.5 + sin(u_time / 2.) / 12.,\n            0.5 - cos(u_time) / 12.\n        )),\n        circle(uv,0.4,vec2(\n            0.5 - sin(u_time) / 12.,\n            0.5 - cos(u_time / 2.) / 12.\n        ))\n    );\n\n    gl_FragColor = vec4(color, 1.0);\n}\n\n","[\n  [-1.0, -1.0, 0, 1],\n  [1.0, -1.0, 0, 1],\n  [-1.0, 1.0, 0, 1],\n  [1.0, 1.0, 0, 1]\n]\n","import { Procedure } from \"~src/common/shaderView/shaderView.component\";\nimport { ShaderDemo } from \"../shadersList\";\n\nimport vertexShader from \"~src/assets/shaders/assorted2.vert\";\nimport fragmentShader from \"~src/assets/shaders/assorted2.frag\";\nimport square from \"~src/assets/shaders/square.json\";\n\nconst procedure: Procedure = (regl) => {\n  const drawSquare = regl({\n    primitive: \"triangle strip\",\n    vert: vertexShader,\n    frag: fragmentShader,\n    elements: [0, 1, 2, 3],\n    uniforms: {\n      u_time: ({ time }) => time,\n      u_resolution: ({ viewportWidth, viewportHeight }) => [\n        viewportWidth,\n        viewportHeight,\n      ],\n    },\n    attributes: {\n      position: square.map(([x, y, z, h]) => [x, y, z, h]),\n    },\n  });\n  regl.frame(() => {\n    regl.clear({ depth: 1, color: [0, 0, 0, 1] });\n    drawSquare();\n  });\n};\n\nconst demo: ShaderDemo = {\n  procedure,\n  code: [{ language: \"glsl\", code: fragmentShader }],\n};\n\nexport default demo;\n","precision mediump float;\n\nattribute vec4 position;\n\nvoid main() {\n    gl_Position = position;\n}\n","precision mediump float;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / u_resolution;\n\n    float color = 0.0;\n\n    color += sin(uv.y * cos(u_time / 21.0) * 12.0)\n        + sin(uv.x * cos(u_time / 10.0) * 20.0);\n    color += sin(uv.x * cos(u_time / 43.0) * 24.0)\n        + cos(uv.y * cos(u_time / 20.0) * 30.0);\n    color += sin(uv.y * sin(u_time / 65.0) * 36.0)\n        + cos(uv.x * sin(u_time / 30.0) * 40.0);\n    color += sin(uv.x * sin(u_time / 87.0) * 48.0)\n        + sin(uv.y * sin(u_time / 40.0) * 50.0);\n\n    gl_FragColor = vec4(\n        color * 0.65,\n        color * 0.45,\n        color * 0.85,\n        1.0\n    );\n}\n","import { Procedure } from \"~src/common/shaderView/shaderView.component\";\nimport { ShaderDemo } from \"../shadersList\";\n\nimport vertexShader from \"~src/assets/shaders/assorted3.vert\";\nimport fragmentShader from \"~src/assets/shaders/assorted3.frag\";\nimport square from \"~src/assets/shaders/square.json\";\n\nconst procedure: Procedure = (regl) => {\n  const drawSquare = regl({\n    primitive: \"triangle strip\",\n    vert: vertexShader,\n    frag: fragmentShader,\n    elements: [0, 1, 2, 3],\n    uniforms: {\n      u_time: ({ time }) => time,\n      u_resolution: ({ viewportWidth, viewportHeight }) => [\n        viewportWidth,\n        viewportHeight,\n      ],\n    },\n    attributes: {\n      position: square.map(([x, y, z, h]) => [x, y, z, h]),\n    },\n  });\n  regl.frame(() => {\n    regl.clear({ depth: 1, color: [0, 0, 0, 1] });\n    drawSquare();\n  });\n};\n\nconst demo: ShaderDemo = {\n  procedure,\n  code: [{ language: \"glsl\", code: fragmentShader }],\n};\n\nexport default demo;\n","precision mediump float;\n\nattribute vec4 position;\n\nvoid main() {\n    gl_Position = position;\n}\n","precision mediump float;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\n#define PI 3.14159265358979323846\n\nvec2 rotate2D(vec2 st, float angle) {\n    st -= 0.5;\n    st =  mat2(\n      cos(angle), -sin(angle),\n      sin(angle), cos(angle)\n    ) * st;\n    st += 0.5;\n    return st;\n}\n\nvec2 tile(vec2 st, float zoom) {\n    st *= zoom;\n    return fract(st);\n}\n\nfloat box(vec2 st, vec2 size, float smoothEdges) {\n    size = vec2(0.5) - size * 0.5;\n    vec2 aa = vec2(smoothEdges * 0.5);\n    vec2 uv = smoothstep(size, size + aa, st);\n    uv *= smoothstep(size, size + aa, vec2(1.0) - st);\n    return uv.x * uv.y;\n}\n\nvoid main() {\n    vec2 st = gl_FragCoord.xy / u_resolution.xy;\n    vec3 color = vec3(0.0);\n    vec2 pos = floor(st * 24.);\n\n    st = tile(st, 24.);\n    st = rotate2D(st, PI * 0.25);\n    \n    float emphasis = sin((u_time * 1.5 + pos.x));\n\n    color = vec3(box(\n        st,\n        vec2(0.4 + sin(pos.y / (PI * 2.)) * 0.8),\n        0.2 * (emphasis + 1.0)\n    ));\n\n    gl_FragColor = vec4(color, 1.0);\n}\n","import { Procedure } from \"~src/common/shaderView/shaderView.component\";\nimport { ShaderDemo } from \"../shadersList\";\n\nimport vertexShader from \"~src/assets/shaders/assorted4.vert\";\nimport fragmentShader from \"~src/assets/shaders/assorted4.frag\";\nimport square from \"~src/assets/shaders/square.json\";\n\nconst procedure: Procedure = (regl) => {\n  const drawSquare = regl({\n    primitive: \"triangle strip\",\n    vert: vertexShader,\n    frag: fragmentShader,\n    elements: [0, 1, 2, 3],\n    uniforms: {\n      u_time: ({ time }) => time,\n      u_resolution: ({ viewportWidth, viewportHeight }) => [\n        viewportWidth,\n        viewportHeight,\n      ],\n    },\n    attributes: {\n      position: square.map(([x, y, z, h]) => [x, y, z, h]),\n    },\n  });\n  regl.frame(() => {\n    regl.clear({ depth: 1, color: [0, 0, 0, 1] });\n    drawSquare();\n  });\n};\n\nconst demo: ShaderDemo = {\n  procedure,\n  code: [{ language: \"glsl\", code: fragmentShader }],\n};\n\nexport default demo;\n","precision mediump float;\n\nattribute vec4 position;\n\nvoid main() {\n    gl_Position = position;\n}\n","//[demo_hide]\nprecision mediump float;\n\n#define PI 3.14159265359\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nmat2 rotate2d(float angle) { //[demo_hide]\n    return mat2(\n        cos(angle), -sin(angle),\n        sin(angle), cos(angle)\n    );\n} //[demo_hide_end]\n\nfloat box(in vec2 uv, in vec2 size) //[demo_hide]\n{\n    size = vec2(0.5) - size * 0.5;\n    vec2 uvi = smoothstep(size, size + vec2(0.001), uv);\n    uvi *= smoothstep(size, size + vec2(0.001), vec2(1.0) - uv);\n    return uvi.x * uvi.y;\n} //[demo_hide_end]\n\nfloat circle(in vec2 uv, in float r) //[demo_hide]\n{\n    vec2 uvc = uv - vec2(0.5);\n    float uvd = dot(uvc, uvc);\n    return smoothstep(r - (r * 0.01), r + (r * 0.01), uvd * 9.0)\n        - smoothstep(r - (r * 0.01), r + (r * 0.01), uvd * 4.0);\n} //[demo_hide_end]\n\nvec2 tile(in vec2 uv, in vec2 scale) //[demo_hide]\n{\n    return fract(uv * scale);\n} //[demo_hide_end]\n\nfloat cross(in vec2 uv, float size) {\n    uv -= vec2(0.5);\n    uv *= rotate2d(PI / 4.);\n    uv += vec2(0.5);\n    return (\n        box(uv, vec2(size, size / 5.))\n        + box(uv, vec2(size / 5., size))\n    );\n}\n\nfloat pick(in float picked, in vec2 pos, in vec2 coords, in float loop) {\n    coords = vec2(floor(mod(coords.x - u_time * 1.5, loop)), coords.y);\n    vec2 pick = step(coords, pos) - step(coords + 0.01, pos);\n    return picked + pick.x * pick.y;\n}\n\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / u_resolution;\n    \n    vec2 GRID = vec2(6.);\n    vec2 pos = floor(uv * GRID);\n    uv = tile(uv, GRID);\n    \n    float picked = 0.0;\n    picked = pick(picked, pos, vec2(0, 1), GRID.x);\n    picked = pick(picked, pos, vec2(1, 2), GRID.x);\n    picked = pick(picked, pos, vec2(1, 4), GRID.x);\n    picked = pick(picked, pos, vec2(2, 1), GRID.x);\n    picked = pick(picked, pos, vec2(3, 0), GRID.x);\n    picked = pick(picked, pos, vec2(3, 3), GRID.x);\n    picked = pick(picked, pos, vec2(4, 2), GRID.x);\n    picked = pick(picked, pos, vec2(4, 5), GRID.x);\n    picked = pick(picked, pos, vec2(5, 1), GRID.x);\n    picked = pick(picked, pos, vec2(5, 4), GRID.x);\n\n    vec3 color = vec3(mix(\n        circle(uv, 0.5),\n        cross(uv, 0.75),\n        picked\n    ));\n\n    gl_FragColor = vec4(color, 1.0);\n}\n","import { Procedure } from \"~src/common/shaderView/shaderView.component\";\nimport { ShaderDemo } from \"../shadersList\";\n\nimport vertexShader from \"~src/assets/shaders/assorted5.vert\";\nimport fragmentShader from \"~src/assets/shaders/assorted5.frag\";\nimport square from \"~src/assets/shaders/square.json\";\n\nconst procedure: Procedure = (regl) => {\n  const drawSquare = regl({\n    primitive: \"triangle strip\",\n    vert: vertexShader,\n    frag: fragmentShader,\n    elements: [0, 1, 2, 3],\n    uniforms: {\n      u_time: ({ time }) => time,\n      u_resolution: ({ viewportWidth, viewportHeight }) => [\n        viewportWidth,\n        viewportHeight,\n      ],\n    },\n    attributes: {\n      position: square.map(([x, y, z, h]) => [x, y, z, h]),\n    },\n  });\n  regl.frame(() => {\n    regl.clear({ depth: 1, color: [0, 0, 0, 1] });\n    drawSquare();\n  });\n};\n\nconst demo: ShaderDemo = {\n  procedure,\n  code: [{ language: \"glsl\", code: fragmentShader }],\n};\n\nexport default demo;\n","precision mediump float;\n\nattribute vec4 position;\n\nvoid main() {\n    gl_Position = position;\n}\n","precision mediump float;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvec2 brickTile(vec2 st, float zoom) {\n    st *= zoom;\n   \n    st.x += step(1., mod(+st.y, 2.0))\n        * smoothstep(0.0, 0.5, fract(-u_time));\n    st.x -= step(1., mod(-st.y, 2.0))\n        * smoothstep(0.0, 0.5, fract(-u_time));\n    st.y -= step(1., mod(+st.x, 2.0))\n        * smoothstep(0.5, 1.0, fract(-u_time));\n    st.y += step(1., mod(-st.x, 2.0))\n        * smoothstep(0.5, 1.0, fract(-u_time));\n\n    return fract(st);\n}\n\nfloat box(vec2 st, vec2 size) {\n    size = vec2(0.5) - size * 0.5;\n    vec2 uv = smoothstep(size, size + vec2(1e-4), st);\n    uv *= smoothstep(size, size + vec2(1e-4), vec2(1.0) - st);\n    return uv.x * uv.y;\n}\n\nvoid main() {\n    vec2 st = gl_FragCoord.xy / u_resolution.xy;\n    vec3 color = vec3(0.0);\n\n    st /= vec2(2.15, 0.65) / 1.5;\n\n    st = brickTile(st, 5.0);\n\n    color = vec3(box(st,vec2(0.9)));\n\n    gl_FragColor = vec4(color,1.0);\n}\n","import { Procedure } from \"~src/common/shaderView/shaderView.component\";\nimport { ShaderDemo } from \"../shadersList\";\n\nimport vertexShader from \"~src/assets/shaders/assorted6.vert\";\nimport fragmentShader from \"~src/assets/shaders/assorted6.frag\";\nimport square from \"~src/assets/shaders/square.json\";\n\nconst procedure: Procedure = (regl) => {\n  const drawSquare = regl({\n    primitive: \"triangle strip\",\n    vert: vertexShader,\n    frag: fragmentShader,\n    elements: [0, 1, 2, 3],\n    uniforms: {\n      u_time: ({ time }) => time,\n      u_resolution: ({ viewportWidth, viewportHeight }) => [\n        viewportWidth,\n        viewportHeight,\n      ],\n    },\n    attributes: {\n      position: square.map(([x, y, z, h]) => [x, y, z, h]),\n    },\n  });\n  regl.frame(() => {\n    regl.clear({ depth: 1, color: [0, 0, 0, 1] });\n    drawSquare();\n  });\n};\n\nconst demo: ShaderDemo = {\n  procedure,\n  code: [{ language: \"glsl\", code: fragmentShader }],\n};\n\nexport default demo;\n","precision mediump float;\n\nattribute vec4 position;\n\nvoid main() {\n    gl_Position = position;\n}\n","precision mediump float;\n\n#define PI 3.14159265358979323846\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvec2 rotate2D (vec2 st, float angle) //[demo_hide]\n{\n    st -= 0.5;\n    st = mat2(\n        cos(angle), -sin(angle),\n        sin(angle), cos(angle)\n    ) * st;\n    st += 0.5;\n    return st;\n} //[demo_hide_end]\n\nvec2 tile (vec2 st, float zoom) //[demo_hide]\n{\n    st *= zoom;\n    return fract(st);\n} //[demo_hide_end]\n\nfloat circle(in vec2 st, in float radius) //[demo_hide]\n{\n    vec2 l = st - vec2(0.5);\n    return smoothstep(\n        radius - (radius * 0.01),\n        radius + (radius * 0.01),\n        dot(l, l) * 9.0\n    ) - smoothstep(\n        radius - (radius * 0.01),\n        radius + (radius * 0.01),\n        dot(l, l) * 4.0\n    );\n} //[demo_hide_end]\n\nvec2 rotateTilePattern(vec2 st) {\n    st *= 2.0;\n\n    float index = 0.0;\n    index += step(1., mod(st.x, 2.0));\n    index += step(1., mod(st.y, 2.0)) * 2.0;\n\n    st = fract(st);\n\n    if(index == 1.0) {\n        st = rotate2D(st, PI * 0.5);\n    } else if(index == 2.0) {\n        st = rotate2D(st, PI * -0.5);\n    } else if(index == 3.0) {\n        st = rotate2D(st, PI);\n    }\n\n    return st;\n}\n\nvoid main () {\n    vec2 st = gl_FragCoord.xy / u_resolution.xy;\n\n    st = tile(st, 3.0);\n    st = rotateTilePattern(st);\n\n    st = tile(st, 2.0);\n    st = rotate2D(st, -PI * u_time * 0.5);\n    \n    vec3 color = vec3(circle(st, st.x * st.y));\n\n    gl_FragColor = vec4(color, 1.0);\n}\n","import { Procedure } from \"~src/common/shaderView/shaderView.component\";\nimport { ShaderDemo } from \"../shadersList\";\n\nimport vertexShader from \"~src/assets/shaders/basic1.vert\";\nimport fragmentShader from \"~src/assets/shaders/basic1.frag\";\nimport square from \"~src/assets/shaders/square.json\";\n\nconst procedure: Procedure = (regl) => {\n  const drawSquare = regl({\n    primitive: \"triangle strip\",\n    vert: vertexShader,\n    frag: fragmentShader,\n    elements: [0, 1, 2, 3],\n    uniforms: {\n      u_time: ({ time }) => time,\n      u_resolution: ({ viewportWidth, viewportHeight }) => [\n        viewportWidth,\n        viewportHeight,\n      ],\n    },\n    attributes: {\n      position: square.map(([x, y, z, h]) => [x * 0.7, y * 0.7, z, h]),\n    },\n  });\n  regl.frame(() => {\n    regl.clear({ depth: 1, color: [0, 0, 0, 1] });\n    drawSquare();\n  });\n};\n\nconst demo: ShaderDemo = {\n  procedure,\n  code: [\n    { language: \"glsl\", code: vertexShader },\n    { language: \"glsl\", code: fragmentShader },\n  ],\n};\n\nexport default demo;\n","precision mediump float;\n\nuniform float u_time;\nattribute vec4 position;\n\nmat4 rotate_z(float theta) {\n    return mat4(\n        vec4( cos(theta), sin(theta), 0.0, 0.0),\n        vec4(-sin(theta), cos(theta), 0.0, 0.0),\n        vec4(        0.0,        0.0, 1.0, 0.0),\n        vec4(        0.0,        0.0, 0.0, 1.0)\n    );\n}\n\nvoid main() {\n    gl_Position = rotate_z(u_time) * position;\n}\n","precision mediump float;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / u_resolution;\n\n    gl_FragColor = vec4(\n        0.65 * (sin(u_time + uv.x) * 0.3 + 0.7),\n        0.45 * (cos(u_time + uv.y) * 0.3 + 0.7),\n        0.85 * (sin(u_time + uv.x) * 0.3 + 0.7),\n        1.0\n    );\n}\n","import { Procedure } from \"~src/common/shaderView/shaderView.component\";\nimport { ShaderDemo } from \"../shadersList\";\n\nimport vertexShader from \"~src/assets/shaders/basic2.vert\";\nimport fragmentShader from \"~src/assets/shaders/basic2.frag\";\nimport square from \"~src/assets/shaders/square.json\";\n\nconst procedure: Procedure = (regl) => {\n  const drawSquare = regl({\n    primitive: \"triangle strip\",\n    vert: vertexShader,\n    frag: fragmentShader,\n    elements: [0, 1, 2, 3],\n    uniforms: {\n      u_time: ({ time }) => time,\n      u_resolution: ({ viewportWidth, viewportHeight }) => [\n        viewportWidth,\n        viewportHeight,\n      ],\n    },\n    attributes: {\n      position: square.map(([x, y, z, h]) => [x * 0.7, y * 0.7, z, h]),\n    },\n  });\n  regl.frame(() => {\n    regl.clear({ depth: 1, color: [0, 0, 0, 1] });\n    drawSquare();\n  });\n};\n\nconst demo: ShaderDemo = {\n  procedure,\n  code: [\n    { language: \"glsl\", code: vertexShader },\n    { language: \"glsl\", code: fragmentShader },\n  ],\n};\n\nexport default demo;\n","precision mediump float;\n\nuniform float u_time;\nattribute vec4 position;\n\nmat4 rotate_x(float theta) {\n    return mat4(\n        vec4(1.0,         0.0,        0.0, 0.0),\n        vec4(0.0,  cos(theta), sin(theta), 0.0),\n        vec4(0.0, -sin(theta), cos(theta), 0.0),\n        vec4(0.0,         0.0,        0.0, 1.0)\n    );\n}\n\nmat4 projection(float perspective) {\n    return mat4(\n        vec4(1.0, 0.0, 0.0, 0.0),\n        vec4(0.0, 1.0, 0.0, 0.0),\n        vec4(0.0, 0.0, 1.0, perspective),\n        vec4(0.0, 0.0, 0.0, 1.0)\n    );\n}\n\nvoid main() {\n    gl_Position = projection(0.3) * rotate_x(u_time) * position;\n}\n","precision mediump float;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid main() //[demo_hide]\n{\n    vec2 uv = gl_FragCoord.xy / u_resolution;\n\n    gl_FragColor = vec4(\n        0.65 * (sin(u_time + uv.x) * 0.3 + 0.7),\n        0.45 * (cos(u_time + uv.y) * 0.3 + 0.7),\n        0.85 * (sin(u_time + uv.x) * 0.3 + 0.7),\n        1.0\n    );\n} //[demo_hide_end]\n","import { Procedure } from \"~src/common/shaderView/shaderView.component\";\nimport { ShaderDemo } from \"../shadersList\";\n\nimport vertexShader from \"~src/assets/shaders/basic3.vert\";\nimport fragmentShader from \"~src/assets/shaders/basic3.frag\";\nimport square from \"~src/assets/shaders/square.json\";\n\nconst procedure: Procedure = (regl) => {\n  const drawSquare = regl({\n    primitive: \"triangle strip\",\n    vert: vertexShader,\n    frag: fragmentShader,\n    elements: [0, 1, 2, 3],\n    uniforms: {\n      u_time: ({ time }) => time,\n      u_resolution: ({ viewportWidth, viewportHeight }) => [\n        viewportWidth,\n        viewportHeight,\n      ],\n    },\n    attributes: {\n      position: square.map(([x, y, z, h]) => [x * 0.8, y * 0.8, z, h]),\n    },\n  });\n  regl.frame(() => {\n    regl.clear({ depth: 1, color: [0, 0, 0, 1] });\n    drawSquare();\n  });\n};\n\nconst demo: ShaderDemo = {\n  procedure,\n  code: [\n    { language: \"glsl\", code: vertexShader },\n    { language: \"glsl\", code: fragmentShader },\n  ],\n};\n\nexport default demo;\n","precision mediump float;\n\nuniform float u_time;\nuniform vec2 u_resolution;\nattribute vec4 position;\n\nmat4 view_frustum(\n    float angle,\n    float aspect,\n    float near,\n    float far\n) //[demo_hide]\n{\n    return mat4(\n        vec4(1.0/tan(angle), 0.0, 0.0, 0.0),\n        vec4(0.0, aspect/tan(angle), 0.0, 0.0),\n        vec4(0.0, 0.0, (far+near)/(far-near), 1.0),\n        vec4(0.0, 0.0, -2.0*far*near/(far-near), 0.0)\n    );\n} //[demo_hide_end]\n\nmat4 translate(float x, float y, float z)\n{\n    return mat4(\n        vec4(1.0, 0.0, 0.0, 0.0),\n        vec4(0.0, 1.0, 0.0, 0.0),\n        vec4(0.0, 0.0, 1.0, 0.0),\n        vec4(x,   y,   z,   1.0)\n    );\n}\n\nvoid main() {\n    float aspect = u_resolution.x / u_resolution.y;\n    gl_Position = view_frustum(radians(45.0), aspect, 0.5, 5.0)\n        * translate(cos(u_time), 0.0, 3.0 + sin(u_time))\n        * position;\n}\n","precision mediump float;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid main() //[demo_hide]\n{\n    vec2 uv = gl_FragCoord.xy / u_resolution;\n\n    gl_FragColor = vec4(\n        0.65 * (sin(u_time + uv.x) * 0.3 + 0.7),\n        0.45 * (cos(u_time + uv.y) * 0.3 + 0.7),\n        0.85 * (sin(u_time + uv.x) * 0.3 + 0.7),\n        1.0\n    );\n} //[demo_hide_end]\n","import { Procedure } from \"~src/common/shaderView/shaderView.component\";\nimport { ShaderDemo } from \"../shadersList\";\n\nimport vertexShader from \"~src/assets/shaders/basic4.vert\";\nimport fragmentShader from \"~src/assets/shaders/basic4.frag\";\nimport square from \"~src/assets/shaders/square.json\";\n\nconst procedure: Procedure = (regl) => {\n  const drawSquare = regl({\n    primitive: \"triangle strip\",\n    vert: vertexShader,\n    frag: fragmentShader,\n    elements: [0, 1, 2, 3],\n    uniforms: {\n      u_time: ({ time }) => time,\n      u_resolution: ({ viewportWidth, viewportHeight }) => [\n        viewportWidth,\n        viewportHeight,\n      ],\n    },\n    attributes: {\n      position: square.map(([x, y, z, h]) => [x * 0.8, y * 0.8, z, h]),\n    },\n  });\n  regl.frame(() => {\n    regl.clear({ depth: 1, color: [0, 0, 0, 1] });\n    drawSquare();\n  });\n};\n\nconst demo: ShaderDemo = {\n  procedure,\n  code: [\n    { language: \"glsl\", code: vertexShader },\n    { language: \"glsl\", code: fragmentShader },\n  ],\n};\n\nexport default demo;\n","precision mediump float;\n\nuniform float u_time;\nuniform vec2 u_resolution;\nattribute vec4 position;\n\nmat4 scale(float x, float y, float z) //[demo_hide]\n{\n    return mat4(\n        vec4(x,   0.0, 0.0, 0.0),\n        vec4(0.0, y,   0.0, 0.0),\n        vec4(0.0, 0.0, z,   0.0),\n        vec4(0.0, 0.0, 0.0, 1.0)\n    );\n} //[demo_hide_end]\n\nmat4 translate(float x, float y, float z) //[demo_hide]\n{\n    return mat4(\n        vec4(1.0, 0.0, 0.0, 0.0),\n        vec4(0.0, 1.0, 0.0, 0.0),\n        vec4(0.0, 0.0, 1.0, 0.0),\n        vec4(x,   y,   z,   1.0)\n    );\n} //[demo_hide_end]\n\nmat4 rotate_x(float theta) //[demo_hide]\n{\n    return mat4(\n        vec4(1.0,         0.0,         0.0, 0.0),\n        vec4(0.0,  cos(theta),  sin(theta), 0.0),\n        vec4(0.0, -sin(theta),  cos(theta), 0.0),\n        vec4(0.0,         0.0,         0.0, 1.0)\n    );\n} //[demo_hide_end]\n\nmat4 view_frustum(\n    float angle,\n    float aspect,\n    float near,\n    float far\n) {\n    return mat4(\n        vec4(1.0/tan(angle), 0.0, 0.0, 0.0),\n        vec4(0.0, aspect/tan(angle), 0.0, 0.0),\n        vec4(0.0, 0.0, (far+near)/(far-near), 1.0),\n        vec4(0.0, 0.0, -2.0*far*near/(far-near), 0.0)\n    );\n}\n\nvoid main() {\n    float aspect = u_resolution.x / u_resolution.y;\n    gl_Position = view_frustum(radians(45.0), aspect, 0.5, 5.0)\n        * translate(cos(u_time), 0.0, 3.0 + sin(u_time))\n        * rotate_x(u_time)\n        * scale(aspect, 1.0, 1.0)\n        * position;\n}\n","precision mediump float;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid main() //[demo_hide]\n{\n    vec2 uv = gl_FragCoord.xy / u_resolution;\n\n    gl_FragColor = vec4(\n        0.65 * (sin(u_time + uv.x) * 0.3 + 0.7),\n        0.45 * (cos(u_time + uv.y) * 0.3 + 0.7),\n        0.85 * (sin(u_time + uv.x) * 0.3 + 0.7),\n        1.0\n    );\n} //[demo_hide_end]\n","import fs from \"fs\";\n\nimport { Procedure } from \"~src/common/shaderView/shaderView.component\";\nimport { ShaderDemo } from \"../shadersList\";\nimport { importTextures } from \"../shadersShared\";\n\nimport vertexShader from \"~src/assets/shaders/textures1.vert\";\nimport fragmentShader from \"~src/assets/shaders/textures1.frag\";\nimport square from \"~src/assets/shaders/square.json\";\n\nconst kitty = fs.readFileSync(\"src/assets/images/kitty.png\");\n\nconst procedure: Procedure = (regl) =>\n  (async () => {\n    const textures = await importTextures(\n      {\n        \"textures[0]\": kitty,\n      },\n      regl\n    );\n    const drawSquare = regl({\n      primitive: \"triangle strip\",\n      vert: vertexShader,\n      frag: fragmentShader,\n      elements: [0, 1, 2, 3],\n      uniforms: {\n        ...textures,\n        u_time: ({ time }) => time,\n        u_resolution: ({ viewportWidth, viewportHeight }) => [\n          viewportWidth,\n          viewportHeight,\n        ],\n      },\n      attributes: {\n        position: square.map(([x, y, z, h]) => [x * 0.8, y * 0.8, z, h]),\n      },\n    });\n    regl.frame(() => {\n      regl.clear({ depth: 1, color: [0, 0, 0, 1] });\n      drawSquare();\n    });\n  })();\n\nconst demo: ShaderDemo = {\n  procedure,\n  code: [\n    { language: \"glsl\", code: vertexShader },\n    { language: \"glsl\", code: fragmentShader },\n  ],\n};\n\nexport default demo;\n","import { DefaultContext, NDArrayLike, Regl, Texture2D } from \"regl\";\nimport { mat4 } from \"gl-matrix\";\nimport { NdArray } from \"ndarray\";\nimport { getPixels } from \"ndarray-pixels\";\n\ntype BufferMap = { [key: string]: Buffer };\ntype Texture2DMap = { [key: string]: Texture2D };\n\nexport async function importTexture(buffer: Buffer): Promise<NdArray> {\n  return await getPixels(buffer, \"image/png\");\n}\n\nexport async function importTextures(\n  buffers: BufferMap,\n  regl: Regl\n): Promise<Texture2DMap> {\n  const result: Texture2DMap = {};\n  for (const key in buffers) {\n    result[key] = regl.texture(\n      // cardinal sin committed as regl.texture() types do not\n      // allow Uint8Array, but do handle that data type properly.\n      (await importTexture(buffers[key])) as unknown as NDArrayLike\n    );\n  }\n  return result;\n}\n\nexport const rotatingInView = ({ tick }: DefaultContext) => {\n  const translate = mat4.translate(mat4.create(), mat4.create(), [0, -5, -20]);\n  const rotateY = mat4.rotateY(\n    mat4.create(),\n    mat4.create(),\n    (tick * Math.PI) / 400\n  );\n  return mat4.multiply(translate, translate, rotateY);\n};\n\nexport const lookingFromOrigin = () =>\n  mat4.lookAt(mat4.create(), [0, 0, 0], [0, 0, -1], [0, 1, 0]);\n\nexport const standardProjection = ({\n  viewportWidth,\n  viewportHeight,\n}: DefaultContext) =>\n  mat4.perspective(\n    mat4.create(),\n    Math.PI / 4,\n    viewportWidth / viewportHeight,\n    0.01,\n    1000.0\n  );\n\nexport const mvMatrix = (context: DefaultContext) =>\n  mat4.multiply(mat4.create(), lookingFromOrigin(), rotatingInView(context));\n","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import type { NdArray } from 'ndarray';\nimport { getPixelsInternal } from './node-get-pixels';\nimport { savePixelsInternal } from './node-save-pixels';\n\n/**\n * Decodes image data to an `ndarray`.\n *\n * MIME type is optional when given a path or URL, and required when given a Uint8Array.\n *\n * Accepts `image/png` or `image/jpeg` in Node.js, and additional formats on browsers with\n * the necessary support in Canvas 2D.\n *\n * @param data\n * @param mimeType `image/jpeg`, `image/png`, etc.\n * @returns\n */\nasync function getPixels(data: Uint8Array, mimeType: string): Promise<NdArray<Uint8Array>> {\n\treturn getPixelsInternal(data, mimeType);\n}\n\n/**\n * Encodes an `ndarray` as image data in the given format.\n *\n * If the source `ndarray` was constructed manually with default stride, use\n * `ndarray.transpose(1, 0)` to reshape it and ensure an identical result from getPixels(). For an\n * ndarray created by getPixels(), this isn't necessary.\n *\n * Accepts `image/png` or `image/jpeg` in Node.js, and additional formats on browsers with\n * the necessary support in Canvas 2D.\n *\n * @param pixels ndarray of shape W x H x 4.\n * @param mimeType `image/jpeg`, `image/png`, etc.\n * @returns\n */\nasync function savePixels(\n\tpixels: NdArray<Uint8Array | Uint8ClampedArray>,\n\tmimeType: string\n): Promise<Uint8Array> {\n\treturn savePixelsInternal(pixels, mimeType);\n}\n\nexport { getPixels, savePixels };\n","import ndarray from 'ndarray';\nimport type { NdArray } from 'ndarray';\n\nexport function getPixelsInternal(\n\tbuffer: Uint8Array,\n\tmimeType: string\n): Promise<NdArray<Uint8Array>> {\n\t// Warn for Data URIs, URLs, and file paths. Support removed in v3.\n\tif (!(buffer instanceof Uint8Array)) {\n\t\tthrow new Error('[ndarray-pixels] Input must be Uint8Array or Buffer.');\n\t}\n\n\tconst blob = new Blob([buffer], { type: mimeType });\n\tconst path = URL.createObjectURL(blob);\n\n\t// Decode image with Canvas API.\n\treturn new Promise((resolve, reject) => {\n\t\tconst img = new Image();\n\t\timg.crossOrigin = 'anonymous';\n\t\timg.onload = function () {\n\t\t\tURL.revokeObjectURL(path as string);\n\n\t\t\tconst canvas = document.createElement('canvas');\n\t\t\tcanvas.width = img.width;\n\t\t\tcanvas.height = img.height;\n\t\t\tconst context = canvas.getContext('2d')!;\n\t\t\tcontext.drawImage(img, 0, 0);\n\t\t\tconst pixels = context.getImageData(0, 0, img.width, img.height);\n\t\t\tresolve(\n\t\t\t\tndarray(\n\t\t\t\t\tnew Uint8Array(pixels.data),\n\t\t\t\t\t[img.width, img.height, 4],\n\t\t\t\t\t[4, 4 * img.width, 1],\n\t\t\t\t\t0\n\t\t\t\t)\n\t\t\t);\n\t\t};\n\t\timg.onerror = (err) => {\n\t\t\tURL.revokeObjectURL(path as string);\n\t\t\treject(err);\n\t\t};\n\t\timg.src = path;\n\t});\n}\n","var iota = require(\"iota-array\")\nvar isBuffer = require(\"is-buffer\")\n\nvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\nfunction compare1st(a, b) {\n  return a[0] - b[0]\n}\n\nfunction order() {\n  var stride = this.stride\n  var terms = new Array(stride.length)\n  var i\n  for(i=0; i<terms.length; ++i) {\n    terms[i] = [Math.abs(stride[i]), i]\n  }\n  terms.sort(compare1st)\n  var result = new Array(terms.length)\n  for(i=0; i<result.length; ++i) {\n    result[i] = terms[i][1]\n  }\n  return result\n}\n\nfunction compileConstructor(dtype, dimension) {\n  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n  if(dimension < 0) {\n    className = \"View_Nil\" + dtype\n  }\n  var useGetters = (dtype === \"generic\")\n\n  if(dimension === -1) {\n    //Special case for trivial arrays\n    var code =\n      \"function \"+className+\"(a){this.data=a;};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new \"+className+\"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n    var procedure = new Function(code)\n    return procedure()\n  } else if(dimension === 0) {\n    //Special case for 0d arrays\n    var code =\n      \"function \"+className+\"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function \"+className+\"_copy() {\\\nreturn new \"+className+\"(this.data,this.offset)\\\n};\\\nproto.pick=function \"+className+\"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function \"+className+\"_get(){\\\nreturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\"};\\\nproto.set=function \"+className+\"_set(v){\\\nreturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n};\\\nreturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n    var procedure = new Function(\"TrivialArray\", code)\n    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n  }\n\n  var code = [\"'use strict'\"]\n\n  //Create constructor for view\n  var indices = iota(dimension)\n  var args = indices.map(function(i) { return \"i\"+i })\n  var index_str = \"this.offset+\" + indices.map(function(i) {\n        return \"this.stride[\" + i + \"]*i\" + i\n      }).join(\"+\")\n  var shapeArg = indices.map(function(i) {\n      return \"b\"+i\n    }).join(\",\")\n  var strideArg = indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")\n  code.push(\n    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n      \"this.shape=[\" + shapeArg + \"]\",\n      \"this.stride=[\" + strideArg + \"]\",\n      \"this.offset=d|0}\",\n    \"var proto=\"+className+\".prototype\",\n    \"proto.dtype='\"+dtype+\"'\",\n    \"proto.dimension=\"+dimension)\n\n  //view.size:\n  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\nreturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\"}})\")\n\n  //view.order:\n  if(dimension === 1) {\n    code.push(\"proto.order=[0]\")\n  } else {\n    code.push(\"Object.defineProperty(proto,'order',{get:\")\n    if(dimension < 4) {\n      code.push(\"function \"+className+\"_order(){\")\n      if(dimension === 2) {\n        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n      } else if(dimension === 3) {\n        code.push(\n\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})\")\n      }\n    } else {\n      code.push(\"ORDER})\")\n    }\n  }\n\n  //view.set(i0, ..., v):\n  code.push(\n\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n  if(useGetters) {\n    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]=v}\")\n  }\n\n  //view.get(i0, ...):\n  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n  if(useGetters) {\n    code.push(\"return this.data.get(\"+index_str+\")}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]}\")\n  }\n\n  //view.index:\n  code.push(\n    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\n  //view.hi():\n  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"this.stride[\"+i + \"]\"\n    }).join(\",\")+\",this.offset)}\")\n\n  //view.lo():\n  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\nd=i\"+i+\"|0;\\\nb+=c\"+i+\"*d;\\\na\"+i+\"-=d}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\"+i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")+\",b)}\")\n\n  //view.step():\n  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n    indices.map(function(i) {\n      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'){\\\nd=i\"+i+\"|0;\\\nif(d<0){\\\nc+=b\"+i+\"*(a\"+i+\"-1);\\\na\"+i+\"=ceil(-a\"+i+\"/d)\\\n}else{\\\na\"+i+\"=ceil(a\"+i+\"/d)\\\n}\\\nb\"+i+\"*=d\\\n}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\" + i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\" + i\n    }).join(\",\")+\",c)}\")\n\n  //view.transpose():\n  var tShape = new Array(dimension)\n  var tStride = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    tShape[i] = \"a[i\"+i+\"]\"\n    tStride[i] = \"b[i\"+i+\"]\"\n  }\n  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\n  //view.pick():\n  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n  }\n  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\n  //Add return statement\n  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n    indices.map(function(i) {\n      return \"shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"stride[\"+i+\"]\"\n    }).join(\",\")+\",offset)}\")\n\n  //Compile procedure\n  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n}\n\nfunction arrayDType(data) {\n  if(isBuffer(data)) {\n    return \"buffer\"\n  }\n  if(hasTypedArrays) {\n    switch(Object.prototype.toString.call(data)) {\n      case \"[object Float64Array]\":\n        return \"float64\"\n      case \"[object Float32Array]\":\n        return \"float32\"\n      case \"[object Int8Array]\":\n        return \"int8\"\n      case \"[object Int16Array]\":\n        return \"int16\"\n      case \"[object Int32Array]\":\n        return \"int32\"\n      case \"[object Uint8Array]\":\n        return \"uint8\"\n      case \"[object Uint16Array]\":\n        return \"uint16\"\n      case \"[object Uint32Array]\":\n        return \"uint32\"\n      case \"[object Uint8ClampedArray]\":\n        return \"uint8_clamped\"\n      case \"[object BigInt64Array]\":\n        return \"bigint64\"\n      case \"[object BigUint64Array]\":\n        return \"biguint64\"\n    }\n  }\n  if(Array.isArray(data)) {\n    return \"array\"\n  }\n  return \"generic\"\n}\n\nvar CACHED_CONSTRUCTORS = {\n  \"float32\":[],\n  \"float64\":[],\n  \"int8\":[],\n  \"int16\":[],\n  \"int32\":[],\n  \"uint8\":[],\n  \"uint16\":[],\n  \"uint32\":[],\n  \"array\":[],\n  \"uint8_clamped\":[],\n  \"bigint64\": [],\n  \"biguint64\": [],\n  \"buffer\":[],\n  \"generic\":[]\n}\n\n;(function() {\n  for(var id in CACHED_CONSTRUCTORS) {\n    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n  }\n});\n\nfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n  if(data === undefined) {\n    var ctor = CACHED_CONSTRUCTORS.array[0]\n    return ctor([])\n  } else if(typeof data === \"number\") {\n    data = [data]\n  }\n  if(shape === undefined) {\n    shape = [ data.length ]\n  }\n  var d = shape.length\n  if(stride === undefined) {\n    stride = new Array(d)\n    for(var i=d-1, sz=1; i>=0; --i) {\n      stride[i] = sz\n      sz *= shape[i]\n    }\n  }\n  if(offset === undefined) {\n    offset = 0\n    for(var i=0; i<d; ++i) {\n      if(stride[i] < 0) {\n        offset -= (shape[i]-1)*stride[i]\n      }\n    }\n  }\n  var dtype = arrayDType(data)\n  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n  while(ctor_list.length <= d+1) {\n    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n  }\n  var ctor = ctor_list[d+1]\n  return ctor(data, shape, stride, offset)\n}\n\nmodule.exports = wrappedNDArrayCtor\n","\"use strict\"\n\nfunction iota(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = i\n  }\n  return result\n}\n\nmodule.exports = iota","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","\"use strict\"\n\nvar compile = require(\"cwise-compiler\")\n\nvar EmptyProc = {\n  body: \"\",\n  args: [],\n  thisVars: [],\n  localVars: []\n}\n\nfunction fixup(x) {\n  if(!x) {\n    return EmptyProc\n  }\n  for(var i=0; i<x.args.length; ++i) {\n    var a = x.args[i]\n    if(i === 0) {\n      x.args[i] = {name: a, lvalue:true, rvalue: !!x.rvalue, count:x.count||1 }\n    } else {\n      x.args[i] = {name: a, lvalue:false, rvalue:true, count: 1}\n    }\n  }\n  if(!x.thisVars) {\n    x.thisVars = []\n  }\n  if(!x.localVars) {\n    x.localVars = []\n  }\n  return x\n}\n\nfunction pcompile(user_args) {\n  return compile({\n    args:     user_args.args,\n    pre:      fixup(user_args.pre),\n    body:     fixup(user_args.body),\n    post:     fixup(user_args.proc),\n    funcName: user_args.funcName\n  })\n}\n\nfunction makeOp(user_args) {\n  var args = []\n  for(var i=0; i<user_args.args.length; ++i) {\n    args.push(\"a\"+i)\n  }\n  var wrapper = new Function(\"P\", [\n    \"return function \", user_args.funcName, \"_ndarrayops(\", args.join(\",\"), \") {P(\", args.join(\",\"), \");return a0}\"\n  ].join(\"\"))\n  return wrapper(pcompile(user_args))\n}\n\nvar assign_ops = {\n  add:  \"+\",\n  sub:  \"-\",\n  mul:  \"*\",\n  div:  \"/\",\n  mod:  \"%\",\n  band: \"&\",\n  bor:  \"|\",\n  bxor: \"^\",\n  lshift: \"<<\",\n  rshift: \">>\",\n  rrshift: \">>>\"\n}\n;(function(){\n  for(var id in assign_ops) {\n    var op = assign_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\",\"array\",\"array\"],\n      body: {args:[\"a\",\"b\",\"c\"],\n             body: \"a=b\"+op+\"c\"},\n      funcName: id\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\",\"array\"],\n      body: {args:[\"a\",\"b\"],\n             body:\"a\"+op+\"=b\"},\n      rvalue: true,\n      funcName: id+\"eq\"\n    })\n    exports[id+\"s\"] = makeOp({\n      args: [\"array\", \"array\", \"scalar\"],\n      body: {args:[\"a\",\"b\",\"s\"],\n             body:\"a=b\"+op+\"s\"},\n      funcName: id+\"s\"\n    })\n    exports[id+\"seq\"] = makeOp({\n      args: [\"array\",\"scalar\"],\n      body: {args:[\"a\",\"s\"],\n             body:\"a\"+op+\"=s\"},\n      rvalue: true,\n      funcName: id+\"seq\"\n    })\n  }\n})();\n\nvar unary_ops = {\n  not: \"!\",\n  bnot: \"~\",\n  neg: \"-\",\n  recip: \"1.0/\"\n}\n;(function(){\n  for(var id in unary_ops) {\n    var op = unary_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\", \"array\"],\n      body: {args:[\"a\",\"b\"],\n             body:\"a=\"+op+\"b\"},\n      funcName: id\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\"],\n      body: {args:[\"a\"],\n             body:\"a=\"+op+\"a\"},\n      rvalue: true,\n      count: 2,\n      funcName: id+\"eq\"\n    })\n  }\n})();\n\nvar binary_ops = {\n  and: \"&&\",\n  or: \"||\",\n  eq: \"===\",\n  neq: \"!==\",\n  lt: \"<\",\n  gt: \">\",\n  leq: \"<=\",\n  geq: \">=\"\n}\n;(function() {\n  for(var id in binary_ops) {\n    var op = binary_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\",\"array\",\"array\"],\n      body: {args:[\"a\", \"b\", \"c\"],\n             body:\"a=b\"+op+\"c\"},\n      funcName: id\n    })\n    exports[id+\"s\"] = makeOp({\n      args: [\"array\",\"array\",\"scalar\"],\n      body: {args:[\"a\", \"b\", \"s\"],\n             body:\"a=b\"+op+\"s\"},\n      funcName: id+\"s\"\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\", \"array\"],\n      body: {args:[\"a\", \"b\"],\n             body:\"a=a\"+op+\"b\"},\n      rvalue:true,\n      count:2,\n      funcName: id+\"eq\"\n    })\n    exports[id+\"seq\"] = makeOp({\n      args: [\"array\", \"scalar\"],\n      body: {args:[\"a\",\"s\"],\n             body:\"a=a\"+op+\"s\"},\n      rvalue:true,\n      count:2,\n      funcName: id+\"seq\"\n    })\n  }\n})();\n\nvar math_unary = [\n  \"abs\",\n  \"acos\",\n  \"asin\",\n  \"atan\",\n  \"ceil\",\n  \"cos\",\n  \"exp\",\n  \"floor\",\n  \"log\",\n  \"round\",\n  \"sin\",\n  \"sqrt\",\n  \"tan\"\n]\n;(function() {\n  for(var i=0; i<math_unary.length; ++i) {\n    var f = math_unary[i]\n    exports[f] = makeOp({\n                    args: [\"array\", \"array\"],\n                    pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                    body: {args:[\"a\",\"b\"], body:\"a=this_f(b)\", thisVars:[\"this_f\"]},\n                    funcName: f\n                  })\n    exports[f+\"eq\"] = makeOp({\n                      args: [\"array\"],\n                      pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                      body: {args: [\"a\"], body:\"a=this_f(a)\", thisVars:[\"this_f\"]},\n                      rvalue: true,\n                      count: 2,\n                      funcName: f+\"eq\"\n                    })\n  }\n})();\n\nvar math_comm = [\n  \"max\",\n  \"min\",\n  \"atan2\",\n  \"pow\"\n]\n;(function(){\n  for(var i=0; i<math_comm.length; ++i) {\n    var f= math_comm[i]\n    exports[f] = makeOp({\n                  args:[\"array\", \"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n                  funcName: f\n                })\n    exports[f+\"s\"] = makeOp({\n                  args:[\"array\", \"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"s\"\n                  })\n    exports[f+\"eq\"] = makeOp({ args:[\"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n                  rvalue: true,\n                  count: 2,\n                  funcName: f+\"eq\"\n                  })\n    exports[f+\"seq\"] = makeOp({ args:[\"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n                  rvalue:true,\n                  count:2,\n                  funcName: f+\"seq\"\n                  })\n  }\n})();\n\nvar math_noncomm = [\n  \"atan2\",\n  \"pow\"\n]\n;(function(){\n  for(var i=0; i<math_noncomm.length; ++i) {\n    var f= math_noncomm[i]\n    exports[f+\"op\"] = makeOp({\n                  args:[\"array\", \"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"op\"\n                })\n    exports[f+\"ops\"] = makeOp({\n                  args:[\"array\", \"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"ops\"\n                  })\n    exports[f+\"opeq\"] = makeOp({ args:[\"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n                  rvalue: true,\n                  count: 2,\n                  funcName: f+\"opeq\"\n                  })\n    exports[f+\"opseq\"] = makeOp({ args:[\"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n                  rvalue:true,\n                  count:2,\n                  funcName: f+\"opseq\"\n                  })\n  }\n})();\n\nexports.any = compile({\n  args:[\"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"if(a){return true}\", localVars: [], thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return false\"},\n  funcName: \"any\"\n})\n\nexports.all = compile({\n  args:[\"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1}], body: \"if(!x){return false}\", localVars: [], thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n  funcName: \"all\"\n})\n\nexports.sum = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s+=a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"sum\"\n})\n\nexports.prod = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=1\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s*=a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"prod\"\n})\n\nexports.norm2squared = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norm2squared\"\n})\n  \nexports.norm2 = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return Math.sqrt(this_s)\"},\n  funcName: \"norm2\"\n})\n  \n\nexports.norminf = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:4}], body:\"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norminf\"\n})\n\nexports.norm1 = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:3}], body: \"this_s+=a<0?-a:a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norm1\"\n})\n\nexports.sup = compile({\n  args: [ \"array\" ],\n  pre:\n   { body: \"this_h=-Infinity\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  body:\n   { body: \"if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_\",\n     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  post:\n   { body: \"return this_h\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] }\n })\n\nexports.inf = compile({\n  args: [ \"array\" ],\n  pre:\n   { body: \"this_h=Infinity\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  body:\n   { body: \"if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_\",\n     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  post:\n   { body: \"return this_h\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] }\n })\n\nexports.argmin = compile({\n  args:[\"index\",\"array\",\"shape\"],\n  pre:{\n    body:\"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n    args:[\n      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n      ],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[]},\n  body:{\n    body:\"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n    args:[\n      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[\"_inline_1_k\"]},\n  post:{\n    body:\"{return this_i}\",\n    args:[],\n    thisVars:[\"this_i\"],\n    localVars:[]}\n})\n\nexports.argmax = compile({\n  args:[\"index\",\"array\",\"shape\"],\n  pre:{\n    body:\"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n    args:[\n      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n      ],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[]},\n  body:{\n    body:\"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n    args:[\n      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[\"_inline_1_k\"]},\n  post:{\n    body:\"{return this_i}\",\n    args:[],\n    thisVars:[\"this_i\"],\n    localVars:[]}\n})  \n\nexports.random = makeOp({\n  args: [\"array\"],\n  pre: {args:[], body:\"this_f=Math.random\", thisVars:[\"this_f\"]},\n  body: {args: [\"a\"], body:\"a=this_f()\", thisVars:[\"this_f\"]},\n  funcName: \"random\"\n})\n\nexports.assign = makeOp({\n  args:[\"array\", \"array\"],\n  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n  funcName: \"assign\" })\n\nexports.assigns = makeOp({\n  args:[\"array\", \"scalar\"],\n  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n  funcName: \"assigns\" })\n\n\nexports.equals = compile({\n  args:[\"array\", \"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1},\n               {name:\"y\", lvalue:false, rvalue:true, count:1}], \n        body: \"if(x!==y){return false}\", \n        localVars: [], \n        thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n  funcName: \"equals\"\n})\n\n\n","\"use strict\"\n\nvar createThunk = require(\"./lib/thunk.js\")\n\nfunction Procedure() {\n  this.argTypes = []\n  this.shimArgs = []\n  this.arrayArgs = []\n  this.arrayBlockIndices = []\n  this.scalarArgs = []\n  this.offsetArgs = []\n  this.offsetArgIndex = []\n  this.indexArgs = []\n  this.shapeArgs = []\n  this.funcName = \"\"\n  this.pre = null\n  this.body = null\n  this.post = null\n  this.debug = false\n}\n\nfunction compileCwise(user_args) {\n  //Create procedure\n  var proc = new Procedure()\n  \n  //Parse blocks\n  proc.pre    = user_args.pre\n  proc.body   = user_args.body\n  proc.post   = user_args.post\n\n  //Parse arguments\n  var proc_args = user_args.args.slice(0)\n  proc.argTypes = proc_args\n  for(var i=0; i<proc_args.length; ++i) {\n    var arg_type = proc_args[i]\n    if(arg_type === \"array\" || (typeof arg_type === \"object\" && arg_type.blockIndices)) {\n      proc.argTypes[i] = \"array\"\n      proc.arrayArgs.push(i)\n      proc.arrayBlockIndices.push(arg_type.blockIndices ? arg_type.blockIndices : 0)\n      proc.shimArgs.push(\"array\" + i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count>0) {\n        throw new Error(\"cwise: pre() block may not reference array args\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count>0) {\n        throw new Error(\"cwise: post() block may not reference array args\")\n      }\n    } else if(arg_type === \"scalar\") {\n      proc.scalarArgs.push(i)\n      proc.shimArgs.push(\"scalar\" + i)\n    } else if(arg_type === \"index\") {\n      proc.indexArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count > 0) {\n        throw new Error(\"cwise: pre() block may not reference array index\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array index\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count > 0) {\n        throw new Error(\"cwise: post() block may not reference array index\")\n      }\n    } else if(arg_type === \"shape\") {\n      proc.shapeArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].lvalue) {\n        throw new Error(\"cwise: pre() block may not write to array shape\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array shape\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].lvalue) {\n        throw new Error(\"cwise: post() block may not write to array shape\")\n      }\n    } else if(typeof arg_type === \"object\" && arg_type.offset) {\n      proc.argTypes[i] = \"offset\"\n      proc.offsetArgs.push({ array: arg_type.array, offset:arg_type.offset })\n      proc.offsetArgIndex.push(i)\n    } else {\n      throw new Error(\"cwise: Unknown argument type \" + proc_args[i])\n    }\n  }\n  \n  //Make sure at least one array argument was specified\n  if(proc.arrayArgs.length <= 0) {\n    throw new Error(\"cwise: No array arguments specified\")\n  }\n  \n  //Make sure arguments are correct\n  if(proc.pre.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in pre() block\")\n  }\n  if(proc.body.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in body() block\")\n  }\n  if(proc.post.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in post() block\")\n  }\n\n  //Check debug flag\n  proc.debug = !!user_args.printCode || !!user_args.debug\n  \n  //Retrieve name\n  proc.funcName = user_args.funcName || \"cwise\"\n  \n  //Read in block size\n  proc.blockSize = user_args.blockSize || 64\n\n  return createThunk(proc)\n}\n\nmodule.exports = compileCwise\n","\"use strict\"\n\n// The function below is called when constructing a cwise function object, and does the following:\n// A function object is constructed which accepts as argument a compilation function and returns another function.\n// It is this other function that is eventually returned by createThunk, and this function is the one that actually\n// checks whether a certain pattern of arguments has already been used before and compiles new loops as needed.\n// The compilation passed to the first function object is used for compiling new functions.\n// Once this function object is created, it is called with compile as argument, where the first argument of compile\n// is bound to \"proc\" (essentially containing a preprocessed version of the user arguments to cwise).\n// So createThunk roughly works like this:\n// function createThunk(proc) {\n//   var thunk = function(compileBound) {\n//     var CACHED = {}\n//     return function(arrays and scalars) {\n//       if (dtype and order of arrays in CACHED) {\n//         var func = CACHED[dtype and order of arrays]\n//       } else {\n//         var func = CACHED[dtype and order of arrays] = compileBound(dtype and order of arrays)\n//       }\n//       return func(arrays and scalars)\n//     }\n//   }\n//   return thunk(compile.bind1(proc))\n// }\n\nvar compile = require(\"./compile.js\")\n\nfunction createThunk(proc) {\n  var code = [\"'use strict'\", \"var CACHED={}\"]\n  var vars = []\n  var thunkName = proc.funcName + \"_cwise_thunk\"\n  \n  //Build thunk\n  code.push([\"return function \", thunkName, \"(\", proc.shimArgs.join(\",\"), \"){\"].join(\"\"))\n  var typesig = []\n  var string_typesig = []\n  var proc_args = [[\"array\",proc.arrayArgs[0],\".shape.slice(\", // Slice shape so that we only retain the shape over which we iterate (which gets passed to the cwise operator as SS).\n                    Math.max(0,proc.arrayBlockIndices[0]),proc.arrayBlockIndices[0]<0?(\",\"+proc.arrayBlockIndices[0]+\")\"):\")\"].join(\"\")]\n  var shapeLengthConditions = [], shapeConditions = []\n  // Process array arguments\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    var j = proc.arrayArgs[i]\n    vars.push([\"t\", j, \"=array\", j, \".dtype,\",\n               \"r\", j, \"=array\", j, \".order\"].join(\"\"))\n    typesig.push(\"t\" + j)\n    typesig.push(\"r\" + j)\n    string_typesig.push(\"t\"+j)\n    string_typesig.push(\"r\"+j+\".join()\")\n    proc_args.push(\"array\" + j + \".data\")\n    proc_args.push(\"array\" + j + \".stride\")\n    proc_args.push(\"array\" + j + \".offset|0\")\n    if (i>0) { // Gather conditions to check for shape equality (ignoring block indices)\n      shapeLengthConditions.push(\"array\" + proc.arrayArgs[0] + \".shape.length===array\" + j + \".shape.length+\" + (Math.abs(proc.arrayBlockIndices[0])-Math.abs(proc.arrayBlockIndices[i])))\n      shapeConditions.push(\"array\" + proc.arrayArgs[0] + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[0]) + \"]===array\" + j + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[i]) + \"]\")\n    }\n  }\n  // Check for shape equality\n  if (proc.arrayArgs.length > 1) {\n    code.push(\"if (!(\" + shapeLengthConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same dimensionality!')\")\n    code.push(\"for(var shapeIndex=array\" + proc.arrayArgs[0] + \".shape.length-\" + Math.abs(proc.arrayBlockIndices[0]) + \"; shapeIndex-->0;) {\")\n    code.push(\"if (!(\" + shapeConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same shape!')\")\n    code.push(\"}\")\n  }\n  // Process scalar arguments\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\n    proc_args.push(\"scalar\" + proc.scalarArgs[i])\n  }\n  // Check for cached function (and if not present, generate it)\n  vars.push([\"type=[\", string_typesig.join(\",\"), \"].join()\"].join(\"\"))\n  vars.push(\"proc=CACHED[type]\")\n  code.push(\"var \" + vars.join(\",\"))\n  \n  code.push([\"if(!proc){\",\n             \"CACHED[type]=proc=compile([\", typesig.join(\",\"), \"])}\",\n             \"return proc(\", proc_args.join(\",\"), \")}\"].join(\"\"))\n\n  if(proc.debug) {\n    console.log(\"-----Generated thunk:\\n\" + code.join(\"\\n\") + \"\\n----------\")\n  }\n  \n  //Compile thunk\n  var thunk = new Function(\"compile\", code.join(\"\\n\"))\n  return thunk(compile.bind(undefined, proc))\n}\n\nmodule.exports = createThunk\n","\"use strict\"\n\nvar uniq = require(\"uniq\")\n\n// This function generates very simple loops analogous to how you typically traverse arrays (the outermost loop corresponds to the slowest changing index, the innermost loop to the fastest changing index)\n// TODO: If two arrays have the same strides (and offsets) there is potential for decreasing the number of \"pointers\" and related variables. The drawback is that the type signature would become more specific and that there would thus be less potential for caching, but it might still be worth it, especially when dealing with large numbers of arguments.\nfunction innerFill(order, proc, body) {\n  var dimension = order.length\n    , nargs = proc.arrayArgs.length\n    , has_index = proc.indexArgs.length>0\n    , code = []\n    , vars = []\n    , idx=0, pidx=0, i, j\n  for(i=0; i<dimension; ++i) { // Iteration variables\n    vars.push([\"i\",i,\"=0\"].join(\"\"))\n  }\n  //Compute scan deltas\n  for(j=0; j<nargs; ++j) {\n    for(i=0; i<dimension; ++i) {\n      pidx = idx\n      idx = order[i]\n      if(i === 0) { // The innermost/fastest dimension's delta is simply its stride\n        vars.push([\"d\",j,\"s\",i,\"=t\",j,\"p\",idx].join(\"\"))\n      } else { // For other dimensions the delta is basically the stride minus something which essentially \"rewinds\" the previous (more inner) dimension\n        vars.push([\"d\",j,\"s\",i,\"=(t\",j,\"p\",idx,\"-s\",pidx,\"*t\",j,\"p\",pidx,\")\"].join(\"\"))\n      }\n    }\n  }\n  if (vars.length > 0) {\n    code.push(\"var \" + vars.join(\",\"))\n  }  \n  //Scan loop\n  for(i=dimension-1; i>=0; --i) { // Start at largest stride and work your way inwards\n    idx = order[i]\n    code.push([\"for(i\",i,\"=0;i\",i,\"<s\",idx,\";++i\",i,\"){\"].join(\"\"))\n  }\n  //Push body of inner loop\n  code.push(body)\n  //Advance scan pointers\n  for(i=0; i<dimension; ++i) {\n    pidx = idx\n    idx = order[i]\n    for(j=0; j<nargs; ++j) {\n      code.push([\"p\",j,\"+=d\",j,\"s\",i].join(\"\"))\n    }\n    if(has_index) {\n      if(i > 0) {\n        code.push([\"index[\",pidx,\"]-=s\",pidx].join(\"\"))\n      }\n      code.push([\"++index[\",idx,\"]\"].join(\"\"))\n    }\n    code.push(\"}\")\n  }\n  return code.join(\"\\n\")\n}\n\n// Generate \"outer\" loops that loop over blocks of data, applying \"inner\" loops to the blocks by manipulating the local variables in such a way that the inner loop only \"sees\" the current block.\n// TODO: If this is used, then the previous declaration (done by generateCwiseOp) of s* is essentially unnecessary.\n//       I believe the s* are not used elsewhere (in particular, I don't think they're used in the pre/post parts and \"shape\" is defined independently), so it would be possible to make defining the s* dependent on what loop method is being used.\nfunction outerFill(matched, order, proc, body) {\n  var dimension = order.length\n    , nargs = proc.arrayArgs.length\n    , blockSize = proc.blockSize\n    , has_index = proc.indexArgs.length > 0\n    , code = []\n  for(var i=0; i<nargs; ++i) {\n    code.push([\"var offset\",i,\"=p\",i].join(\"\"))\n  }\n  //Generate loops for unmatched dimensions\n  // The order in which these dimensions are traversed is fairly arbitrary (from small stride to large stride, for the first argument)\n  // TODO: It would be nice if the order in which these loops are placed would also be somehow \"optimal\" (at the very least we should check that it really doesn't hurt us if they're not).\n  for(var i=matched; i<dimension; ++i) {\n    code.push([\"for(var j\"+i+\"=SS[\", order[i], \"]|0;j\", i, \">0;){\"].join(\"\")) // Iterate back to front\n    code.push([\"if(j\",i,\"<\",blockSize,\"){\"].join(\"\")) // Either decrease j by blockSize (s = blockSize), or set it to zero (after setting s = j).\n    code.push([\"s\",order[i],\"=j\",i].join(\"\"))\n    code.push([\"j\",i,\"=0\"].join(\"\"))\n    code.push([\"}else{s\",order[i],\"=\",blockSize].join(\"\"))\n    code.push([\"j\",i,\"-=\",blockSize,\"}\"].join(\"\"))\n    if(has_index) {\n      code.push([\"index[\",order[i],\"]=j\",i].join(\"\"))\n    }\n  }\n  for(var i=0; i<nargs; ++i) {\n    var indexStr = [\"offset\"+i]\n    for(var j=matched; j<dimension; ++j) {\n      indexStr.push([\"j\",j,\"*t\",i,\"p\",order[j]].join(\"\"))\n    }\n    code.push([\"p\",i,\"=(\",indexStr.join(\"+\"),\")\"].join(\"\"))\n  }\n  code.push(innerFill(order, proc, body))\n  for(var i=matched; i<dimension; ++i) {\n    code.push(\"}\")\n  }\n  return code.join(\"\\n\")\n}\n\n//Count the number of compatible inner orders\n// This is the length of the longest common prefix of the arrays in orders.\n// Each array in orders lists the dimensions of the correspond ndarray in order of increasing stride.\n// This is thus the maximum number of dimensions that can be efficiently traversed by simple nested loops for all arrays.\nfunction countMatches(orders) {\n  var matched = 0, dimension = orders[0].length\n  while(matched < dimension) {\n    for(var j=1; j<orders.length; ++j) {\n      if(orders[j][matched] !== orders[0][matched]) {\n        return matched\n      }\n    }\n    ++matched\n  }\n  return matched\n}\n\n//Processes a block according to the given data types\n// Replaces variable names by different ones, either \"local\" ones (that are then ferried in and out of the given array) or ones matching the arguments that the function performing the ultimate loop will accept.\nfunction processBlock(block, proc, dtypes) {\n  var code = block.body\n  var pre = []\n  var post = []\n  for(var i=0; i<block.args.length; ++i) {\n    var carg = block.args[i]\n    if(carg.count <= 0) {\n      continue\n    }\n    var re = new RegExp(carg.name, \"g\")\n    var ptrStr = \"\"\n    var arrNum = proc.arrayArgs.indexOf(i)\n    switch(proc.argTypes[i]) {\n      case \"offset\":\n        var offArgIndex = proc.offsetArgIndex.indexOf(i)\n        var offArg = proc.offsetArgs[offArgIndex]\n        arrNum = offArg.array\n        ptrStr = \"+q\" + offArgIndex // Adds offset to the \"pointer\" in the array\n      case \"array\":\n        ptrStr = \"p\" + arrNum + ptrStr\n        var localStr = \"l\" + i\n        var arrStr = \"a\" + arrNum\n        if (proc.arrayBlockIndices[arrNum] === 0) { // Argument to body is just a single value from this array\n          if(carg.count === 1) { // Argument/array used only once(?)\n            if(dtypes[arrNum] === \"generic\") {\n              if(carg.lvalue) {\n                pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\n                code = code.replace(re, localStr)\n                post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n              } else {\n                code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\n              }\n            } else {\n              code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\n            }\n          } else if(dtypes[arrNum] === \"generic\") {\n            pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\n            code = code.replace(re, localStr)\n            if(carg.lvalue) {\n              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n            }\n          } else {\n            pre.push([\"var \", localStr, \"=\", arrStr, \"[\", ptrStr, \"]\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\n            code = code.replace(re, localStr)\n            if(carg.lvalue) {\n              post.push([arrStr, \"[\", ptrStr, \"]=\", localStr].join(\"\"))\n            }\n          }\n        } else { // Argument to body is a \"block\"\n          var reStrArr = [carg.name], ptrStrArr = [ptrStr]\n          for(var j=0; j<Math.abs(proc.arrayBlockIndices[arrNum]); j++) {\n            reStrArr.push(\"\\\\s*\\\\[([^\\\\]]+)\\\\]\")\n            ptrStrArr.push(\"$\" + (j+1) + \"*t\" + arrNum + \"b\" + j) // Matched index times stride\n          }\n          re = new RegExp(reStrArr.join(\"\"), \"g\")\n          ptrStr = ptrStrArr.join(\"+\")\n          if(dtypes[arrNum] === \"generic\") {\n            /*if(carg.lvalue) {\n              pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\n              code = code.replace(re, localStr)\n              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n            } else {\n              code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\n            }*/\n            throw new Error(\"cwise: Generic arrays not supported in combination with blocks!\")\n          } else {\n            // This does not produce any local variables, even if variables are used multiple times. It would be possible to do so, but it would complicate things quite a bit.\n            code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\n          }\n        }\n      break\n      case \"scalar\":\n        code = code.replace(re, \"Y\" + proc.scalarArgs.indexOf(i))\n      break\n      case \"index\":\n        code = code.replace(re, \"index\")\n      break\n      case \"shape\":\n        code = code.replace(re, \"shape\")\n      break\n    }\n  }\n  return [pre.join(\"\\n\"), code, post.join(\"\\n\")].join(\"\\n\").trim()\n}\n\nfunction typeSummary(dtypes) {\n  var summary = new Array(dtypes.length)\n  var allEqual = true\n  for(var i=0; i<dtypes.length; ++i) {\n    var t = dtypes[i]\n    var digits = t.match(/\\d+/)\n    if(!digits) {\n      digits = \"\"\n    } else {\n      digits = digits[0]\n    }\n    if(t.charAt(0) === 0) {\n      summary[i] = \"u\" + t.charAt(1) + digits\n    } else {\n      summary[i] = t.charAt(0) + digits\n    }\n    if(i > 0) {\n      allEqual = allEqual && summary[i] === summary[i-1]\n    }\n  }\n  if(allEqual) {\n    return summary[0]\n  }\n  return summary.join(\"\")\n}\n\n//Generates a cwise operator\nfunction generateCWiseOp(proc, typesig) {\n\n  //Compute dimension\n  // Arrays get put first in typesig, and there are two entries per array (dtype and order), so this gets the number of dimensions in the first array arg.\n  var dimension = (typesig[1].length - Math.abs(proc.arrayBlockIndices[0]))|0\n  var orders = new Array(proc.arrayArgs.length)\n  var dtypes = new Array(proc.arrayArgs.length)\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    dtypes[i] = typesig[2*i]\n    orders[i] = typesig[2*i+1]\n  }\n  \n  //Determine where block and loop indices start and end\n  var blockBegin = [], blockEnd = [] // These indices are exposed as blocks\n  var loopBegin = [], loopEnd = [] // These indices are iterated over\n  var loopOrders = [] // orders restricted to the loop indices\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    if (proc.arrayBlockIndices[i]<0) {\n      loopBegin.push(0)\n      loopEnd.push(dimension)\n      blockBegin.push(dimension)\n      blockEnd.push(dimension+proc.arrayBlockIndices[i])\n    } else {\n      loopBegin.push(proc.arrayBlockIndices[i]) // Non-negative\n      loopEnd.push(proc.arrayBlockIndices[i]+dimension)\n      blockBegin.push(0)\n      blockEnd.push(proc.arrayBlockIndices[i])\n    }\n    var newOrder = []\n    for(var j=0; j<orders[i].length; j++) {\n      if (loopBegin[i]<=orders[i][j] && orders[i][j]<loopEnd[i]) {\n        newOrder.push(orders[i][j]-loopBegin[i]) // If this is a loop index, put it in newOrder, subtracting loopBegin, to make sure that all loopOrders are using a common set of indices.\n      }\n    }\n    loopOrders.push(newOrder)\n  }\n\n  //First create arguments for procedure\n  var arglist = [\"SS\"] // SS is the overall shape over which we iterate\n  var code = [\"'use strict'\"]\n  var vars = []\n  \n  for(var j=0; j<dimension; ++j) {\n    vars.push([\"s\", j, \"=SS[\", j, \"]\"].join(\"\")) // The limits for each dimension.\n  }\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    arglist.push(\"a\"+i) // Actual data array\n    arglist.push(\"t\"+i) // Strides\n    arglist.push(\"p\"+i) // Offset in the array at which the data starts (also used for iterating over the data)\n    \n    for(var j=0; j<dimension; ++j) { // Unpack the strides into vars for looping\n      vars.push([\"t\",i,\"p\",j,\"=t\",i,\"[\",loopBegin[i]+j,\"]\"].join(\"\"))\n    }\n    \n    for(var j=0; j<Math.abs(proc.arrayBlockIndices[i]); ++j) { // Unpack the strides into vars for block iteration\n      vars.push([\"t\",i,\"b\",j,\"=t\",i,\"[\",blockBegin[i]+j,\"]\"].join(\"\"))\n    }\n  }\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\n    arglist.push(\"Y\" + i)\n  }\n  if(proc.shapeArgs.length > 0) {\n    vars.push(\"shape=SS.slice(0)\") // Makes the shape over which we iterate available to the user defined functions (so you can use width/height for example)\n  }\n  if(proc.indexArgs.length > 0) {\n    // Prepare an array to keep track of the (logical) indices, initialized to dimension zeroes.\n    var zeros = new Array(dimension)\n    for(var i=0; i<dimension; ++i) {\n      zeros[i] = \"0\"\n    }\n    vars.push([\"index=[\", zeros.join(\",\"), \"]\"].join(\"\"))\n  }\n  for(var i=0; i<proc.offsetArgs.length; ++i) { // Offset arguments used for stencil operations\n    var off_arg = proc.offsetArgs[i]\n    var init_string = []\n    for(var j=0; j<off_arg.offset.length; ++j) {\n      if(off_arg.offset[j] === 0) {\n        continue\n      } else if(off_arg.offset[j] === 1) {\n        init_string.push([\"t\", off_arg.array, \"p\", j].join(\"\"))      \n      } else {\n        init_string.push([off_arg.offset[j], \"*t\", off_arg.array, \"p\", j].join(\"\"))\n      }\n    }\n    if(init_string.length === 0) {\n      vars.push(\"q\" + i + \"=0\")\n    } else {\n      vars.push([\"q\", i, \"=\", init_string.join(\"+\")].join(\"\"))\n    }\n  }\n\n  //Prepare this variables\n  var thisVars = uniq([].concat(proc.pre.thisVars)\n                      .concat(proc.body.thisVars)\n                      .concat(proc.post.thisVars))\n  vars = vars.concat(thisVars)\n  if (vars.length > 0) {\n    code.push(\"var \" + vars.join(\",\"))\n  }\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    code.push(\"p\"+i+\"|=0\")\n  }\n  \n  //Inline prelude\n  if(proc.pre.body.length > 3) {\n    code.push(processBlock(proc.pre, proc, dtypes))\n  }\n\n  //Process body\n  var body = processBlock(proc.body, proc, dtypes)\n  var matched = countMatches(loopOrders)\n  if(matched < dimension) {\n    code.push(outerFill(matched, loopOrders[0], proc, body)) // TODO: Rather than passing loopOrders[0], it might be interesting to look at passing an order that represents the majority of the arguments for example.\n  } else {\n    code.push(innerFill(loopOrders[0], proc, body))\n  }\n\n  //Inline epilog\n  if(proc.post.body.length > 3) {\n    code.push(processBlock(proc.post, proc, dtypes))\n  }\n  \n  if(proc.debug) {\n    console.log(\"-----Generated cwise routine for \", typesig, \":\\n\" + code.join(\"\\n\") + \"\\n----------\")\n  }\n  \n  var loopName = [(proc.funcName||\"unnamed\"), \"_cwise_loop_\", orders[0].join(\"s\"),\"m\",matched,typeSummary(dtypes)].join(\"\")\n  var f = new Function([\"function \",loopName,\"(\", arglist.join(\",\"),\"){\", code.join(\"\\n\"),\"} return \", loopName].join(\"\"))\n  return f()\n}\nmodule.exports = generateCWiseOp\n","\"use strict\"\n\nfunction unique_pred(list, compare) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b=list[0]\n  for(var i=1; i<len; ++i) {\n    b = a\n    a = list[i]\n    if(compare(a, b)) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique_eq(list) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b = list[0]\n  for(var i=1; i<len; ++i, b=a) {\n    b = a\n    a = list[i]\n    if(a !== b) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique(list, compare, sorted) {\n  if(list.length === 0) {\n    return list\n  }\n  if(compare) {\n    if(!sorted) {\n      list.sort(compare)\n    }\n    return unique_pred(list, compare)\n  }\n  if(!sorted) {\n    list.sort()\n  }\n  return unique_eq(list)\n}\n\nmodule.exports = unique\n","precision mediump float;\n\nuniform float u_time;\nuniform vec2 u_resolution;\nattribute vec4 position;\n\nvarying vec2 texcoord;\n\nmat4 translate(float x, float y, float z) //[demo_hide]\n{\n    return mat4(\n        vec4(1.0, 0.0, 0.0, 0.0),\n        vec4(0.0, 1.0, 0.0, 0.0),\n        vec4(0.0, 0.0, 1.0, 0.0),\n        vec4(x,   y,   z,   1.0)\n    );\n} //[demo_hide_end]\n\nmat4 rotate_x(float theta) //[demo_hide]\n{\n    return mat4(\n        vec4(1.0,         0.0,         0.0, 0.0),\n        vec4(0.0,  cos(theta),  sin(theta), 0.0),\n        vec4(0.0, -sin(theta),  cos(theta), 0.0),\n        vec4(0.0,         0.0,         0.0, 1.0)\n    );\n} //[demo_hide_end]\n\nmat4 view_frustum(\n    float angle,\n    float aspect,\n    float near,\n    float far\n) //[demo_hide]\n{\n    return mat4(\n        vec4(1.0/tan(angle), 0.0, 0.0, 0.0),\n        vec4(0.0, aspect/tan(angle), 0.0, 0.0),\n        vec4(0.0, 0.0, (far+near)/(far-near), 1.0),\n        vec4(0.0, 0.0, -2.0*far*near/(far-near), 0.0)\n    );\n} //[demo_hide_end]\n\nvoid main() {\n    float aspect = u_resolution.x / u_resolution.y;\n    gl_Position = view_frustum(radians(45.0), aspect, 0.5, 5.0)\n        * translate(0.0, 0.0, 1.0)\n        * rotate_x(sin(u_time) * 0.5)\n        * position;\n    texcoord = position.xy * vec2(0.5, -0.5) + vec2(0.5);\n}\n","precision mediump float;\n\nuniform sampler2D textures[1];\n\nvarying vec2 texcoord;\n\nvoid main() {\n    gl_FragColor = texture2D(textures[0], texcoord);\n}\n","import { readFileSync } from \"fs\";\nimport { mat4 } from \"gl-matrix\";\nimport bunny from \"bunny\";\n\nimport { Procedure } from \"~src/common/shaderView/shaderView.component\";\nimport { ShaderDemo } from \"../shadersList\";\nimport { Mesh } from \"../mesh\";\n\nimport vertexShader from \"~src/assets/shaders/lighting1.vert\";\nimport fragmentShader from \"~src/assets/shaders/lighting1.frag\";\nconst markdown = readFileSync(\"src/assets/shaders/lighting1.md\", \"utf-8\");\n\nconst procedure: Procedure = (regl) => {\n  const drawBunny = new Mesh(bunny.positions, bunny.cells).drawable(regl);\n  const drawMain = regl({\n    vert: vertexShader,\n    frag: fragmentShader,\n    uniforms: {\n      view: mat4.lookAt(mat4.create(), [0, 5, 20], [0, 5, 0], [0, 1, 0]),\n    },\n  });\n\n  regl.frame(({ tick }) => {\n    regl.clear({ depth: 1, color: [0, 0, 0, 1] });\n    drawMain(() =>\n      drawBunny({\n        rotation: [0.0, (tick * Math.PI) / 800.0, 0.0],\n      })\n    );\n  });\n};\n\nconst demo: ShaderDemo = {\n  procedure,\n  code: [\n    { language: \"markdown\", code: markdown },\n    { language: \"glsl\", code: vertexShader },\n    { language: \"glsl\", code: fragmentShader },\n  ],\n};\n\nexport default demo;\n","exports.positions=[[1.301895,0.122622,2.550061],[1.045326,0.139058,2.835156],[0.569251,0.155925,2.805125],[0.251886,0.144145,2.82928],[0.063033,0.131726,3.01408],[-0.277753,0.135892,3.10716],[-0.441048,0.277064,2.594331],[-1.010956,0.095285,2.668983],[-1.317639,0.069897,2.325448],[-0.751691,0.264681,2.381496],[0.684137,0.31134,2.364574],[1.347931,0.302882,2.201434],[-1.736903,0.029894,1.724111],[-1.319986,0.11998,0.912925],[1.538077,0.157372,0.481711],[1.951975,0.081742,1.1641],[1.834768,0.095832,1.602682],[2.446122,0.091817,1.37558],[2.617615,0.078644,0.742801],[-1.609748,0.04973,-0.238721],[-1.281973,0.230984,-0.180916],[-1.074501,0.248204,0.034007],[-1.201734,0.058499,0.402234],[-1.444454,0.054783,0.149579],[-4.694605,5.075882,1.043427],[-3.95963,7.767394,0.758447],[-4.753339,5.339817,0.665061],[-1.150325,9.133327,-0.368552],[-4.316107,2.893611,0.44399],[-0.809202,9.312575,-0.466061],[0.085626,5.963693,1.685666],[-1.314853,9.00142,-0.1339],[-4.364182,3.072556,1.436712],[-2.022074,7.323396,0.678657],[1.990887,6.13023,0.479643],[-3.295525,7.878917,1.409353],[0.571308,6.197569,0.670657],[0.89661,6.20018,0.337056],[0.331851,6.162372,1.186371],[-4.840066,5.599874,2.296069],[2.138989,6.031291,0.228335],[0.678923,6.026173,1.894052],[-0.781682,5.601573,1.836738],[1.181315,6.239007,0.393293],[-3.606308,7.376476,2.661452],[-0.579059,4.042511,-1.540883],[-3.064069,8.630253,-2.597539],[-2.157271,6.837012,0.300191],[-2.966013,7.821581,-1.13697],[-2.34426,8.122965,0.409043],[-0.951684,5.874251,1.415119],[-2.834853,7.748319,0.182406],[-3.242493,7.820096,0.373674],[-0.208532,5.992846,1.252084],[-3.048085,8.431527,-2.129795],[1.413245,5.806324,2.243906],[-0.051222,6.064901,0.696093],[-4.204306,2.700062,0.713875],[-4.610997,6.343405,0.344272],[-3.291336,9.30531,-3.340445],[-3.27211,7.559239,-2.324016],[-4.23882,6.498344,3.18452],[-3.945317,6.377804,3.38625],[-4.906378,5.472265,1.315193],[-3.580131,7.846717,0.709666],[-1.995504,6.645459,0.688487],[-2.595651,7.86054,0.793351],[-0.008849,0.305871,0.184484],[-0.029011,0.314116,-0.257312],[-2.522424,7.565392,1.804212],[-1.022993,8.650826,-0.855609],[-3.831265,6.595426,3.266783],[-4.042525,6.855724,3.060663],[-4.17126,7.404742,2.391387],[3.904526,3.767693,0.092179],[0.268076,6.086802,1.469223],[-3.320456,8.753222,-2.08969],[1.203048,6.26925,0.612407],[-4.406479,2.985974,0.853691],[-3.226889,6.615215,-0.404243],[0.346326,1.60211,3.509858],[-3.955476,7.253323,2.722392],[-1.23204,0.068935,1.68794],[0.625436,6.196455,1.333156],[4.469132,2.165298,1.70525],[0.950053,6.262899,0.922441],[-2.980404,5.25474,-0.663155],[-4.859043,6.28741,1.537081],[-3.077453,4.641475,-0.892167],[-0.44002,8.222503,-0.771454],[-4.034112,7.639786,0.389935],[-3.696045,6.242042,3.394679],[-1.221806,7.783617,0.196451],[0.71461,6.149895,1.656636],[-4.713539,6.163154,0.495369],[-1.509869,0.913044,-0.832413],[-1.547249,2.066753,-0.852669],[-3.757734,5.793742,3.455794],[-0.831911,0.199296,1.718536],[-3.062763,7.52718,-1.550559],[0.938688,6.103354,1.820958],[-4.037033,2.412311,0.988026],[-4.130746,2.571806,1.101689],[-0.693664,9.174283,-0.952323],[-1.286742,1.079679,-0.751219],[1.543185,1.408925,3.483132],[1.535973,2.047979,3.655029],[0.93844,5.84101,2.195219],[-0.684401,5.918492,1.20109],[1.28844,2.008676,3.710781],[-3.586722,7.435506,-1.454737],[-0.129975,4.384192,2.930593],[-1.030531,0.281374,3.214273],[-3.058751,8.137238,-3.227714],[3.649524,4.592226,1.340021],[-3.354828,7.322425,-1.412086],[0.936449,6.209237,1.512693],[-1.001832,3.590411,-1.545892],[-3.770486,4.593242,2.477056],[-0.971925,0.067797,0.921384],[-4.639832,6.865407,2.311791],[-0.441014,8.093595,-0.595999],[-2.004852,6.37142,1.635383],[4.759591,1.92818,0.328328],[3.748064,1.224074,2.140484],[-0.703601,5.285476,2.251988],[0.59532,6.21893,0.981004],[0.980799,6.257026,1.24223],[1.574697,6.204981,0.381628],[1.149594,6.173608,1.660763],[-3.501963,5.895989,3.456576],[1.071122,5.424198,2.588717],[-0.774693,8.473335,-0.276957],[3.849959,4.15542,0.396742],[-0.801715,4.973149,-1.068582],[-2.927676,0.625112,2.326393],[2.669682,4.045542,2.971184],[-4.391324,4.74086,0.343463],[1.520129,6.270031,0.775471],[1.837586,6.084731,0.109188],[1.271475,5.975024,2.032355],[-3.487968,4.513249,2.605871],[-1.32234,1.517264,-0.691879],[-1.080301,1.648226,-0.805526],[-3.365703,6.910166,-0.454902],[1.36034,0.432238,3.075004],[-3.305013,5.774685,3.39142],[3.88432,0.654141,0.12574],[3.57254,0.377934,0.302501],[4.196136,0.807999,0.212229],[3.932997,0.543123,0.380579],[4.023704,3.286125,0.537597],[1.864455,4.916544,2.691677],[-4.775427,6.499498,1.440153],[-3.464928,3.68234,2.766356],[3.648972,1.751262,2.157485],[1.179111,3.238846,3.774796],[-0.171164,0.299126,-0.592669],[-4.502912,3.316656,0.875188],[-0.948454,9.214025,-0.679508],[1.237665,6.288593,1.046],[1.523423,6.268963,1.139544],[1.436519,6.140608,1.739316],[3.723607,1.504355,2.136762],[2.009495,4.045514,3.22053],[-1.921944,7.249905,0.213973],[1.254068,1.205518,3.474709],[-0.317087,5.996269,0.525872],[-2.996914,3.934607,2.900178],[-3.316873,4.028154,2.785696],[-3.400267,4.280157,2.689268],[-3.134842,4.564875,2.697192],[1.480563,4.692567,2.834068],[0.873682,1.315452,3.541585],[1.599355,0.91622,3.246769],[-3.292102,7.125914,2.768515],[3.74296,4.511299,0.616539],[4.698935,1.55336,0.26921],[-3.274387,3.299421,2.823946],[-2.88809,3.410699,2.955248],[1.171407,1.76905,3.688472],[1.430276,3.92483,3.473666],[3.916941,2.553308,0.018941],[0.701632,2.442372,3.778639],[1.562657,2.302778,3.660957],[4.476622,1.152407,0.182131],[-0.61136,5.761367,1.598838],[-3.102154,3.691687,2.903738],[1.816012,5.546167,2.380308],[3.853928,4.25066,0.750017],[1.234681,3.581665,3.673723],[1.862271,1.361863,3.355209],[1.346844,4.146995,3.327877],[1.70672,4.080043,3.274307],[0.897242,1.908983,3.6969],[-0.587022,9.191132,-0.565301],[-0.217426,5.674606,2.019968],[0.278925,6.120777,0.485403],[1.463328,3.578742,-2.001464],[-3.072985,4.264581,2.789502],[3.62353,4.673843,0.383452],[-3.053491,8.752377,-2.908434],[-2.628687,4.505072,2.755601],[0.891047,5.113781,2.748272],[-2.923732,3.06515,2.866368],[0.848008,4.754252,2.896972],[-3.319184,8.811641,-2.327412],[0.12864,8.814781,-1.334456],[1.549501,4.549331,-1.28243],[1.647161,3.738973,3.507719],[1.250888,0.945599,3.348739],[3.809662,4.038822,0.053142],[1.483166,0.673327,3.09156],[0.829726,3.635921,3.713103],[1.352914,5.226651,2.668113],[2.237352,4.37414,3.016386],[4.507929,0.889447,0.744249],[4.57304,1.010981,0.496588],[3.931422,1.720989,2.088175],[-0.463177,5.989835,0.834346],[-2.811236,3.745023,2.969587],[-2.805135,4.219721,2.841108],[-2.836842,4.802543,2.60826],[1.776716,2.084611,3.568638],[4.046881,1.463478,2.106273],[0.316265,5.944313,1.892785],[-2.86347,2.776049,2.77242],[-2.673644,3.116508,2.907104],[-2.621149,4.018502,2.903409],[-2.573447,5.198013,2.477481],[1.104039,2.278985,3.722469],[-4.602743,4.306413,0.902296],[-2.684878,1.510731,0.535039],[0.092036,8.473269,-0.99413],[-1.280472,5.602393,1.928105],[-1.0279,4.121582,-1.403103],[-2.461081,3.304477,2.957317],[-2.375929,3.659383,2.953233],[1.417579,2.715389,3.718767],[0.819727,2.948823,3.810639],[1.329962,0.761779,3.203724],[1.73952,5.295229,2.537725],[0.952523,3.945016,3.548229],[-2.569498,0.633669,2.84818],[-2.276676,0.757013,2.780717],[-2.013147,7.354429,-0.003202],[0.93143,1.565913,3.600325],[1.249014,1.550556,3.585842],[2.287252,4.072353,3.124544],[-4.7349,7.006244,1.690653],[-3.500602,8.80386,-2.009196],[-0.582629,5.549138,2.000923],[-1.865297,6.356066,1.313593],[-3.212154,2.376143,-0.565593],[2.092889,3.493536,-1.727931],[-2.528501,2.784531,2.833758],[-2.565697,4.893154,2.559605],[-2.153366,5.04584,2.465215],[1.631311,2.568241,3.681445],[2.150193,4.699227,2.807505],[0.507599,5.01813,2.775892],[4.129862,1.863698,2.015101],[3.578279,4.50766,-0.009598],[3.491023,4.806749,1.549265],[0.619485,1.625336,3.605125],[1.107499,2.932557,3.790061],[-2.082292,6.99321,0.742601],[4.839909,1.379279,0.945274],[3.591328,4.322645,-0.259497],[1.055245,0.710686,3.16553],[-3.026494,7.842227,1.624553],[0.146569,6.119214,0.981673],[-2.043687,2.614509,2.785526],[-2.302242,3.047775,2.936355],[-2.245686,4.100424,2.87794],[2.116148,5.063507,2.572204],[-1.448406,7.64559,0.251692],[2.550717,4.9268,2.517526],[-2.955456,7.80293,-1.782407],[1.882995,4.637167,2.895436],[-2.014924,3.398262,2.954896],[-2.273654,4.771227,2.611418],[-2.162723,7.876761,0.702473],[-0.198659,5.823062,1.739272],[-1.280908,2.133189,-0.921241],[2.039932,4.251568,3.136579],[1.477815,4.354333,3.108325],[0.560504,3.744128,3.6913],[-2.234018,1.054373,2.352782],[-3.189156,7.686661,-2.514955],[-3.744736,7.69963,2.116973],[-2.283366,2.878365,2.87882],[-2.153786,4.457481,2.743529],[4.933978,1.677287,0.713773],[3.502146,0.535336,1.752511],[1.825169,4.419253,3.081198],[3.072331,0.280979,0.106534],[-0.508381,1.220392,2.878049],[-3.138824,8.445394,-1.659711],[-2.056425,2.954815,2.897241],[-2.035343,5.398477,2.215842],[-3.239915,7.126798,-0.712547],[-1.867923,7.989805,0.526518],[1.23405,6.248973,1.387189],[-0.216492,8.320933,-0.862495],[-2.079659,3.755709,2.928563],[-1.78595,4.300374,2.805295],[-1.856589,5.10678,2.386572],[-1.714362,5.544778,2.004623],[1.722403,4.200291,-1.408161],[0.195386,0.086928,-1.318006],[1.393693,3.013404,3.710686],[-0.415307,8.508471,-0.996883],[-1.853777,0.755635,2.757275],[-1.724057,3.64533,2.884251],[-1.884511,4.927802,2.530885],[-1.017174,7.783908,-0.227078],[-1.7798,2.342513,2.741749],[-1.841329,3.943996,2.88436],[1.430388,5.468067,2.503467],[-2.030296,0.940028,2.611088],[-1.677028,1.215666,2.607771],[-1.74092,2.832564,2.827295],[4.144673,0.631374,0.503358],[4.238811,0.653992,0.762436],[-1.847016,2.082815,2.642674],[4.045764,3.194073,0.852117],[-1.563989,8.112739,0.303102],[-1.781627,1.794836,2.602338],[-1.493749,2.533799,2.797251],[-1.934496,4.690689,2.658999],[-1.499174,5.777946,1.747498],[-2.387409,0.851291,1.500524],[-1.872211,8.269987,0.392533],[-4.647726,6.765771,0.833653],[-3.157482,0.341958,-0.20671],[-1.725766,3.24703,2.883579],[-1.458199,4.079031,2.836325],[-1.621548,4.515869,2.719266],[-1.607292,4.918914,2.505881],[-1.494661,5.556239,1.991599],[-1.727269,7.423769,0.012337],[-1.382497,1.161322,2.640222],[-1.52129,4.681714,2.615467],[-4.247127,2.792812,1.250843],[-1.576338,0.742947,2.769799],[-1.499257,2.172763,2.743142],[-1.480392,3.103261,2.862262],[1.049137,2.625836,3.775384],[-1.368063,1.791587,2.695516],[-1.307839,2.344534,2.767575],[-1.336758,5.092221,2.355225],[-1.5617,5.301749,2.21625],[-1.483362,8.537704,0.196752],[-1.517348,8.773614,0.074053],[-1.474302,1.492731,2.641433],[2.48718,0.644247,-0.920226],[0.818091,0.422682,3.171218],[-3.623398,6.930094,3.033045],[1.676333,3.531039,3.591591],[1.199939,5.683873,2.365623],[-1.223851,8.841201,0.025414],[-1.286307,3.847643,2.918044],[-1.25857,4.810831,2.543605],[2.603662,5.572146,1.991854],[0.138984,5.779724,2.077834],[-1.267039,3.175169,2.890889],[-1.293616,3.454612,2.911774],[-2.60112,1.277184,0.07724],[2.552779,3.649877,3.163643],[-1.038983,1.248011,2.605933],[-1.288709,4.390967,2.761214],[-1.034218,5.485963,2.011467],[-1.185576,1.464842,2.624335],[-1.045682,2.54896,2.761102],[4.259176,1.660627,2.018096],[-0.961707,1.717183,2.598342],[-1.044603,3.147464,2.855335],[-0.891998,4.685429,2.669696],[-1.027561,5.081672,2.377939],[4.386506,0.832434,0.510074],[-1.014225,9.064991,-0.175352],[-1.218752,2.895443,2.823785],[-0.972075,4.432669,2.788005],[-2.714986,0.52425,1.509798],[-0.699248,1.517219,2.645738],[-1.161581,2.078852,2.722795],[-0.845249,3.286247,2.996471],[1.068329,4.443444,2.993863],[3.98132,3.715557,1.027775],[1.658097,3.982428,-1.651688],[-4.053701,2.449888,0.734746],[-0.910935,2.214149,2.702393],[0.087824,3.96165,3.439344],[-0.779714,3.724134,2.993429],[-1.051093,3.810797,2.941957],[-0.644941,4.3859,2.870863],[-2.98403,8.666895,-3.691888],[-0.754304,2.508325,2.812999],[-4.635524,3.662891,0.913005],[-0.983299,4.125978,2.915378],[4.916497,1.905209,0.621315],[4.874983,1.728429,0.468521],[2.33127,5.181957,2.441697],[-0.653711,2.253387,2.7949],[-3.623744,8.978795,-2.46192],[-4.555927,6.160279,0.215755],[-4.940628,5.806712,1.18383],[3.308506,2.40326,-0.910776],[0.58835,5.251928,-0.992886],[2.152215,5.449733,2.331679],[-0.712755,0.766765,3.280375],[-0.741771,1.9716,2.657235],[-4.828957,5.566946,2.635623],[-3.474788,8.696771,-1.776121],[1.770417,6.205561,1.331627],[-0.620626,4.064721,2.968972],[-1.499187,2.307735,-0.978901],[4.098793,2.330245,1.667951],[1.940444,6.167057,0.935904],[-2.314436,1.104995,1.681277],[-2.733629,7.742793,1.7705],[-0.452248,4.719868,2.740834],[-0.649143,4.951713,2.541296],[-0.479417,9.43959,-0.676324],[-2.251853,6.559275,0.046819],[0.033531,8.316907,-0.789939],[-0.513125,0.995673,3.125462],[-2.637602,1.039747,0.602434],[1.527513,6.230089,1.430903],[4.036124,2.609846,1.506498],[-3.559828,7.877892,1.228076],[-4.570736,4.960193,0.838201],[-0.432121,5.157731,2.467518],[-1.206735,4.562511,-1.237054],[-0.823768,3.788746,-1.567481],[-3.095544,7.353613,-1.024577],[-4.056088,7.631119,2.062001],[-0.289385,5.382261,2.329421],[1.69752,6.136483,1.667037],[-0.168758,5.061138,2.617453],[2.853576,1.605528,-1.229958],[-4.514319,6.586675,0.352756],[-2.558081,7.741151,1.29295],[1.61116,5.92358,2.071534],[3.936921,3.354857,0.091755],[-0.1633,1.119272,3.147975],[0.067551,1.593475,3.38212],[-1.303239,2.328184,-1.011672],[-0.438093,0.73423,3.398384],[-4.62767,3.898187,0.849573],[0.286853,4.165281,3.284834],[-2.968052,8.492812,-3.493693],[-0.111896,3.696111,3.53791],[-3.808245,8.451731,-1.574742],[0.053416,5.558764,2.31107],[3.956269,3.012071,0.11121],[-0.710956,8.106561,-0.665154],[0.234725,2.717326,3.722379],[-0.031594,2.76411,3.657347],[-0.017371,4.700633,2.81911],[0.215064,5.034859,2.721426],[-0.111151,8.480333,-0.649399],[3.97942,3.575478,0.362219],[0.392962,4.735392,2.874321],[4.17015,2.085087,1.865999],[0.169054,1.244786,3.337709],[0.020049,3.165818,3.721736],[0.248212,3.595518,3.698376],[0.130706,5.295541,2.540034],[-4.541357,4.798332,1.026866],[-1.277485,1.289518,-0.667272],[3.892133,3.54263,-0.078056],[4.057379,3.03669,0.997913],[0.287719,0.884758,3.251787],[0.535771,1.144701,3.400096],[0.585303,1.399362,3.505353],[0.191551,2.076246,3.549355],[0.328656,2.394576,3.649623],[0.413124,3.240728,3.771515],[0.630361,4.501549,2.963623],[0.529441,5.854392,2.120225],[3.805796,3.769958,-0.162079],[3.447279,4.344846,-0.467276],[0.377618,5.551116,2.426017],[0.409355,1.821269,3.606333],[0.719959,2.194726,3.703851],[0.495922,3.501519,3.755661],[0.603408,5.354097,2.603088],[-4.605056,7.531978,1.19579],[0.907972,0.973128,3.356513],[0.750134,3.356137,3.765847],[0.4496,3.993244,3.504544],[-3.030738,7.48947,-1.259169],[0.707505,5.602005,2.43476],[0.668944,0.654891,3.213797],[0.593244,2.700978,3.791427],[1.467759,3.30327,3.71035],[3.316249,2.436388,2.581175],[3.26138,1.724425,2.539028],[-1.231292,7.968263,0.281414],[-0.108773,8.712307,-0.790607],[4.445684,1.819442,1.896988],[1.998959,2.281499,3.49447],[2.162269,2.113817,3.365449],[4.363397,1.406731,1.922714],[4.808,2.225842,0.611127],[2.735919,0.771812,-0.701142],[1.897735,2.878428,3.583482],[-3.31616,5.331985,3.212394],[-3.3314,6.018137,3.313018],[-3.503183,6.480103,3.222216],[-1.904453,5.750392,1.913324],[-1.339735,3.559592,-1.421817],[-1.044242,8.22539,0.037414],[1.643492,3.110676,3.647424],[3.992832,3.686244,0.710946],[1.774207,1.71842,3.475768],[-3.438842,5.5713,3.427818],[4.602447,1.2583,1.619528],[-0.925516,7.930042,0.072336],[-1.252093,3.846565,-1.420761],[-3.426857,5.072419,2.97806],[-3.160408,6.152629,3.061869],[3.739931,3.367082,2.041273],[1.027419,4.235891,3.251253],[4.777703,1.887452,1.560409],[-3.318528,6.733796,2.982968],[2.929265,4.962579,2.271079],[3.449761,2.838629,2.474576],[-3.280159,5.029875,2.787514],[4.068939,2.993629,0.741567],[0.303312,8.70927,-1.121972],[0.229852,8.981322,-1.186075],[-0.011045,9.148156,-1.047057],[-2.942683,5.579613,2.929297],[-3.145409,5.698727,3.205778],[-3.019089,6.30887,2.794323],[-3.217135,6.468191,2.970032],[-3.048298,6.993641,2.623378],[-3.07429,6.660982,2.702434],[3.612011,2.5574,2.25349],[2.54516,4.553967,2.75884],[-1.683759,7.400787,0.250868],[-1.756066,7.463557,0.448031],[-3.023761,5.149697,2.673539],[3.112376,2.677218,2.782378],[2.835327,4.581196,2.567146],[-2.973799,7.225458,2.506988],[-0.591645,8.740662,-0.505845],[3.782861,2.04337,2.03066],[3.331604,3.36343,2.605047],[2.966866,1.205497,2.537432],[0.002669,9.654748,-1.355559],[2.632801,0.58497,2.540311],[-2.819398,5.087372,2.521098],[2.616193,5.332961,2.194288],[-3.193973,4.925634,2.607924],[-3.12618,5.27524,2.944544],[-0.426003,8.516354,-0.501528],[2.802717,1.387643,2.751649],[-3.120597,7.889111,-2.75431],[2.636648,1.71702,2.991302],[-2.853151,6.711792,2.430276],[-2.843836,6.962865,2.400842],[1.9696,3.199023,3.504514],[-2.461751,0.386352,3.008994],[1.64127,0.495758,3.02958],[-4.330472,5.409831,0.025287],[-2.912387,5.980416,2.844261],[-2.490069,0.211078,2.985391],[3.581816,4.809118,0.733728],[2.693199,2.647213,3.126709],[-0.182964,8.184108,-0.638459],[-2.226855,0.444711,2.946552],[-0.720175,8.115055,0.017689],[2.645302,4.316212,2.850139],[-0.232764,9.329503,-0.918639],[4.852365,1.471901,0.65275],[2.76229,2.014994,2.957755],[-2.808374,5.354301,2.644695],[-2.790967,6.406963,2.547985],[-1.342684,0.418488,-1.669183],[2.690675,5.593587,-0.041236],[4.660146,1.6318,1.713314],[2.775667,3.007229,3.111332],[-0.396696,8.963432,-0.706202],[2.446707,2.740617,3.321433],[-4.803209,5.884634,2.603672],[-2.652003,1.6541,1.5078],[3.932327,3.972874,0.831924],[2.135906,0.955587,2.986608],[2.486131,2.053802,3.124115],[-0.386706,8.115753,-0.37565],[-2.720727,7.325044,2.224878],[-1.396946,7.638016,-0.16486],[-0.62083,7.989771,-0.144413],[-2.653272,5.729684,2.667679],[3.038188,4.65835,2.364142],[2.381721,0.739472,2.788992],[-2.345829,5.474929,2.380633],[-2.518983,6.080562,2.479383],[-2.615793,6.839622,2.186116],[-2.286566,0.143752,2.766848],[-4.771219,6.508766,1.070797],[3.717308,2.905019,2.097994],[2.50521,3.016743,3.295898],[2.208448,1.56029,3.216806],[3.346783,1.01254,2.119951],[2.653503,3.26122,3.175738],[-2.359636,5.827519,2.402297],[-1.952693,0.558102,2.853307],[-0.321562,9.414885,-1.187501],[3.138923,1.405072,2.520765],[1.493728,1.780051,3.621969],[3.01817,0.907291,2.336909],[3.183548,1.185297,2.352175],[1.608619,5.006753,2.695131],[-4.723919,6.836107,1.095288],[-1.017586,8.865429,-0.149328],[4.730762,1.214014,0.64008],[-2.135182,6.647907,1.495471],[-2.420382,6.546114,2.108209],[-2.458053,7.186346,1.896623],[3.437124,0.275798,1.138203],[0.095925,8.725832,-0.926481],[2.417376,2.429869,3.287659],[2.279951,1.200317,3.049994],[2.674753,2.326926,3.044059],[-2.328123,6.849164,1.75751],[-3.418616,7.853407,0.126248],[-3.151587,7.77543,-0.110889],[2.349144,5.653242,2.05869],[-2.273236,6.085631,2.242888],[-4.560601,4.525342,1.261241],[2.866334,3.796067,2.934717],[-2.17493,6.505518,1.791367],[3.12059,3.283157,2.818869],[3.037703,3.562356,2.866653],[0.066233,9.488418,-1.248237],[2.749941,0.975018,2.573371],[-2.155749,5.801033,2.204009],[-2.162778,6.261889,2.028596],[1.936874,0.459142,2.956718],[3.176249,4.335541,2.440447],[4.356599,1.029423,1.700589],[3.873502,3.082678,1.80431],[2.895489,4.243034,2.735259],[-0.095774,9.468195,-1.07451],[-1.124982,7.886808,-0.480851],[3.032304,3.065454,2.897927],[3.692687,4.5961,0.957858],[-3.013045,3.807235,-1.098381],[-0.790012,8.92912,-0.367572],[1.905793,0.73179,2.996728],[3.530396,3.426233,2.356583],[2.12299,0.624933,2.929167],[-2.069196,6.039284,2.01251],[-3.565623,7.182525,2.850039],[2.959264,2.376337,2.829242],[2.949071,1.822483,2.793933],[4.036142,0.763803,1.703744],[-1.993527,6.180318,1.804936],[-0.030987,0.766389,3.344766],[-0.549683,8.225193,-0.189341],[-0.765469,8.272246,-0.127174],[-2.947047,7.541648,-0.414113],[-3.050327,9.10114,-3.435619],[3.488566,2.231807,2.399836],[3.352283,4.727851,1.946438],[4.741011,2.162773,1.499574],[-1.815093,6.072079,1.580722],[-3.720969,8.267927,-0.984713],[1.932826,3.714052,3.427488],[3.323617,4.438961,2.20732],[0.254111,9.26364,-1.373244],[-1.493384,7.868585,-0.450051],[-0.841901,0.776135,-1.619467],[0.243537,6.027668,0.091687],[0.303057,0.313022,-0.531105],[-0.435273,0.474098,3.481552],[2.121507,2.622389,3.486293],[1.96194,1.101753,3.159584],[3.937991,3.407551,1.551392],[0.070906,0.295753,1.377185],[-1.93588,7.631764,0.651674],[-2.523531,0.744818,-0.30985],[2.891496,3.319875,2.983079],[4.781765,1.547061,1.523129],[-2.256064,7.571251,0.973716],[3.244861,3.058249,2.724392],[-0.145855,0.437775,3.433662],[1.586296,5.658538,2.358487],[3.658336,3.774921,2.071837],[2.840463,4.817098,2.46376],[-1.219464,8.122542,-0.672808],[-2.520906,2.664486,-1.034346],[-1.315417,8.471365,-0.709557],[3.429165,3.74686,2.446169],[3.074579,3.840758,2.767409],[3.569443,3.166337,2.333647],[2.294337,3.280051,3.359346],[2.21816,3.66578,3.269222],[2.158662,4.151444,-1.357919],[1.13862,4.380986,-1.404565],[3.388382,2.749931,-0.840949],[3.059892,5.084848,2.026066],[3.204739,2.075145,2.640706],[3.387065,1.42617,2.305275],[3.910398,2.670742,1.750179],[3.471512,1.945821,2.395881],[4.08082,1.070654,1.960171],[-1.057861,0.133036,2.146707],[-0.151749,5.53551,-0.624323],[3.233099,4.003778,2.571172],[2.611726,5.319199,-0.499388],[2.682909,1.094499,-1.206247],[-1.22823,7.656887,0.041409],[-2.293247,7.259189,0.013844],[0.081315,0.202174,3.286381],[-1.002038,5.794454,-0.187194],[3.448856,4.08091,2.258325],[0.287883,9.006888,-1.550641],[-3.851019,4.059839,-0.646922],[3.610966,4.205438,1.913129],[2.239042,2.950872,3.449959],[0.216305,0.442843,3.328052],[1.87141,2.470745,3.574559],[3.811378,2.768718,-0.228364],[2.511081,1.362724,2.969349],[-1.59813,7.866506,0.440184],[-3.307975,2.851072,-0.894978],[-0.107011,8.90573,-0.884399],[-3.855315,2.842597,-0.434541],[2.517853,1.090768,2.799687],[3.791709,2.36685,2.002703],[4.06294,2.773922,0.452723],[-2.973289,7.61703,-0.623653],[-2.95509,8.924462,-3.446319],[2.861402,0.562592,2.184397],[-1.109725,8.594206,-0.076812],[-0.725722,7.924485,-0.381133],[-1.485587,1.329994,-0.654405],[-4.342113,3.233735,1.752922],[-2.968049,7.955519,-2.09405],[-3.130948,0.446196,0.85287],[-4.958475,5.757329,1.447055],[-3.086547,7.615193,-1.953168],[-3.751923,5.412821,3.373373],[-4.599645,7.480953,1.677134],[1.133992,0.274871,0.032249],[-2.956512,8.126905,-1.785461],[-0.960645,4.73065,-1.191786],[-2.871064,0.875559,0.424881],[-4.932114,5.99614,1.483845],[-2.981761,8.124612,-1.387276],[0.362298,8.978545,-1.368024],[-4.408375,3.046271,0.602373],[2.865841,2.322263,-1.344625],[-4.7848,5.620895,0.594432],[-2.88322,0.338931,1.67231],[-4.688101,6.772931,1.872318],[-4.903948,6.164698,1.27135],[2.85663,1.005647,-0.906843],[2.691286,0.209811,0.050512],[-4.693636,6.477556,0.665796],[-4.472331,6.861067,0.477318],[0.883065,0.204907,3.073933],[-0.995867,8.048729,-0.653897],[-0.794663,5.670397,-0.390119],[3.313153,1.638006,-0.722289],[-4.856459,5.394758,1.032591],[-3.005448,7.783023,-0.819641],[3.11891,2.036974,-1.08689],[-2.364319,2.408419,2.63419],[-2.927132,8.75435,-3.537159],[-3.296222,7.964629,-3.134625],[-1.642041,4.13417,-1.301665],[2.030759,0.176372,-1.030923],[-4.559069,3.751053,0.548453],[3.438385,4.59454,-0.243215],[-2.561769,7.93935,0.177696],[2.990593,1.335314,-0.943177],[1.2808,0.276396,-0.49072],[-0.318889,0.290684,0.211143],[3.54614,3.342635,-0.767878],[-3.073372,7.780018,-2.357807],[-4.455388,4.387245,0.361038],[-4.659393,6.276064,2.767014],[0.636799,4.482223,-1.426284],[-2.987681,8.072969,-2.45245],[-2.610445,0.763554,1.792054],[3.358241,2.006707,-0.802973],[-0.498347,0.251594,0.962885],[3.1322,0.683312,2.038777],[-4.389801,7.493776,0.690247],[0.431467,4.22119,-1.614215],[-4.376181,3.213141,0.273255],[-4.872319,5.715645,0.829714],[-4.826893,6.195334,0.849912],[3.516562,2.23732,-0.677597],[3.131656,1.698841,-0.975761],[-4.754925,5.411666,1.989303],[-2.987299,7.320765,-0.629479],[-3.757635,3.274862,-0.744022],[3.487044,2.541999,-0.699933],[-4.53274,4.649505,0.77093],[-1.424192,0.099423,2.633327],[3.090867,2.476975,-1.146957],[-2.713256,0.815622,2.17311],[3.348121,3.254167,-0.984896],[-3.031379,0.16453,-0.309937],[-0.949757,4.518137,-1.309172],[-0.889509,0.095256,1.288803],[3.539594,1.966105,-0.553965],[-4.60612,7.127749,0.811958],[-2.332953,1.444713,1.624548],[3.136293,2.95805,-1.138272],[3.540808,3.069058,-0.735285],[3.678852,2.362375,-0.452543],[-4.648898,7.37438,0.954791],[-0.646871,0.19037,3.344746],[2.2825,0.29343,-0.826273],[-4.422291,7.183959,0.557517],[-4.694668,5.246103,2.541768],[-4.583691,4.145486,0.600207],[-2.934854,7.912513,-1.539269],[-3.067861,7.817472,-0.546501],[3.825095,3.229512,-0.237547],[2.532494,0.323059,2.387105],[-2.514583,0.692857,1.23597],[-4.736805,7.214384,1.259421],[-2.98071,8.409903,-2.468199],[2.621468,1.385844,-1.406355],[3.811447,3.560855,1.847828],[3.432925,1.497205,-0.489784],[3.746609,3.631538,-0.39067],[3.594909,2.832257,-0.576012],[-0.404192,5.300188,-0.856561],[-4.762996,6.483774,1.702648],[-4.756612,6.786223,1.43682],[-2.965309,8.437217,-2.785495],[2.863867,0.74087,-0.429684],[4.02503,2.968753,1.392419],[3.669036,1.833858,-0.304971],[-2.888864,0.720537,0.778057],[-2.36982,0.979443,1.054447],[-2.959259,8.222303,-2.659724],[-3.467825,7.545739,-2.333445],[2.153426,0.446256,-1.20523],[-3.229807,9.189699,-3.596609],[-3.72486,8.773707,-2.046671],[3.687218,3.297751,-0.523746],[1.381025,0.08815,-1.185668],[-2.796828,7.205622,-0.208783],[3.647194,4.066232,-0.291507],[-4.578376,3.885556,1.52546],[-2.840262,0.63094,1.89499],[-2.429514,0.922118,1.820781],[-4.675079,6.573925,2.423363],[2.806207,4.320188,-1.027372],[-1.289608,0.097241,1.321661],[-3.010731,8.141334,-2.866148],[3.202291,1.235617,-0.549025],[4.094792,2.477519,0.304581],[2.948403,0.966873,-0.664857],[-4.83297,5.920587,2.095461],[-2.169693,7.257277,0.946184],[-1.335807,3.057597,-1.303166],[-1.037877,0.64151,-1.685271],[2.627919,0.089814,0.439074],[3.815794,3.808102,1.730493],[-2.973455,8.433141,-3.08872],[-2.391558,7.331428,1.658264],[-4.333107,4.529978,1.850516],[-4.640293,3.767107,1.168841],[3.600716,4.46931,1.734024],[3.880803,1.730158,-0.172736],[3.814183,4.262372,1.167042],[4.37325,0.829542,1.413729],[2.490447,5.75111,0.011492],[3.460003,4.962436,1.188971],[3.918419,3.814234,1.358271],[-0.807595,8.840504,-0.953711],[3.752855,4.20577,1.57177],[-2.991085,8.816501,-3.244595],[-2.333196,7.128889,1.551985],[3.977718,3.570941,1.25937],[4.360071,0.755579,1.079916],[4.637579,1.027973,1.032567],[-2.317,7.421066,1.329589],[-1.013404,8.293662,-0.7823],[4.548023,1.020644,1.420462],[4.763258,1.266798,1.296203],[4.896,2.073084,1.255213],[4.015005,3.325226,1.093879],[4.94885,1.860936,0.894463],[-2.189645,6.954634,1.270077],[4.887442,1.720992,1.288526],[-3.184068,7.871802,0.956189],[-1.274318,0.839887,-1.224389],[-2.919521,7.84432,0.541629],[-2.994586,7.766102,1.96867],[-3.417504,9.241714,-3.093201],[-3.174563,7.466456,2.473617],[-3.263067,9.069412,-3.003459],[-2.841592,0.529833,2.693434],[-3.611069,9.158804,-2.829871],[-4.642828,5.927526,0.320549],[-3.809308,9.051035,-2.692749],[-2.837582,7.487987,-0.106206],[4.773025,2.330442,1.213899],[4.897435,2.209906,0.966657],[-3.067637,8.164062,-1.12661],[-3.122129,8.08074,-0.899194],[4.571019,2.358113,1.462054],[4.584884,2.454418,0.709466],[-3.661093,7.146581,-0.475948],[4.735131,2.415859,0.933939],[4.207556,2.540018,1.218293],[-3.607595,7.89161,-0.121172],[-1.527952,0.775564,-1.061903],[4.53874,2.503273,1.099583],[-3.938837,7.587988,0.082449],[-4.853582,6.152409,1.787943],[-4.752214,6.247234,2.296873],[4.602935,2.363955,0.488901],[-1.81638,6.365879,0.868272],[0.595467,4.744074,-1.32483],[1.87635,3.511986,-1.842924],[4.330947,2.534326,0.720503],[4.108736,2.750805,0.904552],[-1.890939,8.492628,-0.290768],[-3.504309,6.173058,-0.422804],[-1.611992,6.196732,0.648736],[-3.899149,7.826123,1.088845],[-3.078303,3.008813,-1.035784],[-2.798999,7.844899,1.340061],[-1.248839,5.959105,0.041761],[0.767779,4.337318,3.090817],[-3.831177,7.515605,2.432261],[-1.667528,6.156208,0.365267],[-1.726078,6.237384,1.100059],[-3.972037,4.520832,-0.370756],[-4.40449,7.636357,1.520425],[-1.34506,6.004054,1.293159],[-1.233556,6.049933,0.500651],[-3.696869,7.79732,0.37979],[-3.307798,8.949964,-2.698113],[-1.997295,6.615056,1.103691],[-3.219222,8.336394,-1.150614],[-3.452623,8.31866,-0.9417],[-3.94641,2.990494,2.212592],[-3.250025,8.030414,-0.596097],[-2.02375,1.571333,2.397939],[-3.190358,7.665013,2.268183],[-2.811918,7.618526,2.145587],[-1.005265,5.892303,0.072158],[-0.93721,5.974148,0.906669],[-4.646072,7.492193,1.45312],[-0.252931,1.797654,3.140638],[-1.076064,5.738433,1.695953],[-3.980534,7.744391,1.735791],[-0.721187,5.939396,0.526032],[-0.42818,5.919755,0.229001],[-1.43429,6.11622,0.93863],[-0.985638,5.939683,0.290636],[-4.433836,7.461372,1.966437],[-3.696398,7.844859,1.547325],[-3.390772,7.820186,1.812204],[-2.916787,7.864019,0.804341],[-3.715952,8.037269,-0.591341],[-4.204634,7.72919,1.119866],[-4.592233,5.592883,0.246264],[3.307299,5.061701,1.622917],[-3.515159,7.601467,2.368914],[-3.435742,8.533457,-1.37916],[-0.269421,4.545635,-1.366445],[-2.542124,3.768736,-1.258512],[-3.034003,7.873773,1.256854],[-2.801399,7.856028,1.080137],[3.29354,5.220894,1.081767],[-2.35109,1.299486,1.01206],[-3.232213,7.768136,2.047563],[3.290415,5.217525,0.68019],[-3.415109,7.731034,2.144326],[3.440357,4.962463,0.373387],[3.147346,5.352121,1.386923],[2.847252,5.469051,1.831981],[3.137682,5.410222,1.050188],[3.102694,5.310456,1.676434],[-3.044601,0.39515,1.994084],[2.903647,5.561338,1.518598],[-3.810148,8.093598,-0.889131],[4.234835,0.803054,1.593271],[3.240165,5.228747,0.325955],[3.037452,5.509825,0.817137],[2.635031,5.795187,1.439724],[3.071607,5.318303,0.080142],[2.909167,5.611751,1.155874],[3.044889,5.465928,0.486566],[2.502256,5.770673,1.740054],[-0.067497,0.086416,-1.190239],[2.33326,5.906051,0.138295],[0.65096,4.205423,3.308767],[-2.671137,7.936535,0.432731],[2.14463,5.879214,1.866047],[-4.776469,5.890689,0.561986],[2.72432,5.655145,0.211951],[2.730488,5.751455,0.695894],[2.572682,5.869295,1.152663],[1.906776,5.739123,2.196551],[2.344414,5.999961,0.772922],[-3.377905,7.448708,-1.863251],[2.285149,5.968156,1.459258],[2.385989,5.928974,0.3689],[2.192111,6.087516,0.959901],[2.36372,6.001101,1.074346],[1.972022,6.079603,1.591175],[1.87615,5.976698,1.91554],[-3.824761,9.05372,-2.928615],[2.044704,6.129704,1.263111],[-2.583046,0.849537,2.497344],[-0.078825,2.342205,3.520322],[-0.704686,0.537165,3.397194],[-0.257449,3.235334,3.647545],[-0.332064,1.448284,3.022583],[-2.200146,0.898284,-0.447212],[-2.497508,1.745446,1.829167],[0.30702,4.416315,2.978956],[-3.205197,3.479307,-1.040582],[0.110069,9.347725,-1.563686],[-0.82754,0.883886,3.065838],[-2.017103,1.244785,2.42512],[-0.421091,2.309929,3.153898],[-0.491604,3.796072,3.16245],[2.786955,3.501241,-1.340214],[-3.229055,4.380713,-0.899241],[3.730768,0.76845,1.90312],[-0.561079,2.652382,3.152463],[-3.461471,3.086496,2.662505],[-0.661405,3.446009,3.179939],[-0.915351,0.636755,3.243708],[-2.992964,8.915628,-3.729833],[-0.439627,3.502104,3.42665],[-1.154217,0.883181,2.800835],[-1.736193,1.465474,2.595489],[-0.423928,3.24435,3.548277],[-0.511153,2.871046,3.379749],[-0.675722,2.991756,3.143262],[-1.092602,0.599103,3.090639],[-0.89821,2.836952,2.840023],[-2.658412,0.781376,0.960575],[-2.271455,1.222857,1.330478],[-0.877861,1.111222,2.72263],[-0.306959,2.876987,3.556044],[-3.839274,7.84138,-0.918404],[-0.172094,4.083799,3.141708],[-1.548332,0.2529,2.864655],[-0.217353,4.873911,-1.223104],[-3.384242,3.181056,-0.95579],[-2.731704,0.382421,2.895502],[-1.285037,0.551267,2.947675],[0.077224,4.246579,3.066738],[-0.479979,1.77955,2.860011],[-0.716375,1.224694,2.666751],[-0.54622,3.138255,3.393457],[-2.33413,1.821222,2.124883],[-0.50653,2.037147,2.897465],[2.451291,1.211389,-1.466589],[-3.160047,2.894081,2.724286],[-4.137258,5.433431,3.21201],[0.462896,0.320456,-0.174837],[-0.37458,2.609447,3.379253],[-3.095244,0.256205,2.196446],[-4.197985,5.732991,3.262924],[-0.729747,0.246036,0.497036],[-2.356189,5.062,-0.965619],[-1.609036,0.25962,-1.487367],[-4.074381,6.074061,3.409459],[-3.619304,4.0022,2.65705],[-0.543393,8.742896,-1.056622],[-4.30356,6.858934,2.879642],[-0.716688,2.901831,-2.11202],[1.547362,0.083189,1.138764],[-0.250916,0.275268,1.201344],[-3.778035,3.13624,2.466177],[-4.594316,5.771342,3.01694],[-3.717706,3.442887,2.603344],[-4.311163,5.224669,3.019373],[-0.610389,2.095161,-1.923515],[-3.040086,6.196918,-0.429149],[-3.802695,3.768247,2.545523],[-0.159541,2.043362,3.328549],[-3.744329,4.31785,2.491889],[-3.047939,0.214155,1.873639],[-4.41685,6.113058,3.166774],[-1.165133,0.460692,-1.742134],[-1.371289,4.249996,-1.317935],[-3.447883,0.3521,0.466205],[-4.495555,6.465548,2.944147],[-3.455335,0.171653,0.390816],[-3.964028,4.017196,2.376009],[-1.323595,1.763126,-0.750772],[-3.971142,5.277524,-0.19496],[-3.222052,0.237723,0.872229],[-4.403784,3.89107,1.872077],[-3.333311,0.342997,0.661016],[-4.495871,4.29606,1.63608],[-3.636081,2.760711,2.361949],[-4.487235,3.559608,1.66737],[-4.719787,7.26888,1.658722],[-1.086143,9.035741,-0.707144],[-2.339693,1.600485,-0.404817],[-4.642011,7.123829,1.990987],[-1.498077,3.854035,-1.369787],[-4.188372,4.729363,2.02983],[-3.116344,5.882284,-0.468884],[-4.305236,4.246417,1.976991],[-3.022509,0.22819,1.065688],[-2.799916,0.52022,1.128319],[-4.262823,3.534409,2.020383],[-4.221533,3.947676,2.11735],[-3.744353,4.391712,-0.6193],[-1.272905,0.156694,-1.741753],[-3.62491,2.669825,-0.549664],[-4.180756,3.096179,1.987215],[-4.059276,4.305313,2.232924],[-2.812753,0.183226,1.370267],[-4.032437,3.512234,2.309985],[-0.03787,0.28188,0.530391],[-4.711562,5.468653,2.822838],[-4.500636,6.953314,2.564445],[-4.479433,7.216991,2.270682],[3.990562,0.50522,0.716309],[-2.512229,6.863447,-0.100658],[-2.968058,6.956639,-0.37061],[2.550375,3.142683,-1.54068],[-2.320059,3.521605,-1.279397],[-4.556319,6.64662,2.745363],[-4.281091,7.108116,2.667598],[-2.050095,8.411689,0.121353],[-2.44854,1.135487,0.851875],[3.121815,0.699943,-0.277167],[-4.69877,6.00376,2.843035],[-1.360599,8.824742,-0.595597],[1.128437,0.171611,0.301691],[-4.360146,6.289423,0.042233],[1.400795,4.088829,-1.620409],[-3.193462,8.460137,-3.559446],[-3.168771,8.878431,-3.635795],[-3.434275,9.304302,-3.460878],[-3.349993,8.808093,-3.38179],[-3.304823,8.323865,-3.325905],[-3.572607,9.308843,-3.207672],[-3.166393,8.201215,-3.43014],[-3.451638,9.05331,-3.351345],[-3.309591,8.549758,-3.375055],[-3.527992,8.793926,-3.100376],[-3.6287,8.981677,-3.076319],[-3.445505,8.001887,-2.8273],[-3.408011,8.221014,-3.039237],[-3.65928,8.740382,-2.808856],[-3.878019,8.797295,-2.462866],[-3.515132,8.232341,-2.747739],[-3.460331,8.51524,-3.06818],[-3.403703,7.658628,-2.648789],[-3.507113,8.00159,-2.582275],[-3.607373,8.174737,-2.401723],[-3.749043,8.378084,-2.226959],[-3.648514,8.502213,-2.6138],[-2.534199,0.904753,2.021148],[1.4083,5.744252,-0.571402],[-3.852536,8.571009,-2.352358],[2.868255,5.373126,-0.163705],[2.224363,4.669891,-1.061586],[-4.528281,4.885838,1.340274],[1.30817,4.609629,-1.28762],[-4.519698,3.422501,1.354826],[-3.549955,7.783228,-2.332859],[1.12313,6.120856,0.045115],[-3.620324,7.57716,-2.033423],[-0.798833,2.624133,-1.992682],[-3.617587,7.783148,-2.051383],[-3.669293,8.103776,-2.10227],[-3.892417,8.667436,-2.167288],[-0.537435,0.285345,-0.176267],[-0.841522,3.299866,-1.887861],[-0.761547,3.647082,-1.798953],[-3.661544,7.85708,-1.867924],[-3.886763,8.551783,-1.889171],[-0.591244,1.549749,-1.714784],[-0.775276,1.908218,-1.597609],[-0.961458,2.573273,-1.695549],[-2.215672,1.335009,2.143031],[-4.622674,4.130242,1.220683],[1.07344,0.290099,1.584734],[-0.976906,2.92171,-1.76667],[-1.13696,3.194401,-1.513455],[-3.743262,7.99949,-1.629286],[-2.876359,4.900986,-0.879556],[0.550835,3.905557,-2.031372],[0.777647,4.992314,-1.215703],[1.445881,4.266201,-1.414663],[1.274222,5.510543,-0.824495],[-0.864685,2.318581,-1.702389],[-0.627458,3.820722,-1.743153],[-3.867699,8.30866,-1.850066],[1.635287,5.45587,-0.83844],[-1.037876,2.538589,-1.513504],[-4.38993,4.73926,1.699639],[0.048709,4.765232,-1.279506],[-0.626548,1.339887,-1.595114],[-3.682827,7.643453,-1.723398],[-3.868783,8.180191,-1.511743],[-0.76988,1.508373,-1.419599],[-1.138374,2.766765,-1.448163],[1.699883,5.780752,-0.475361],[1.214305,0.308517,1.866405],[-1.713642,0.373461,-1.265204],[-1.582388,0.58294,-1.267977],[-0.879549,1.821581,-1.313787],[0.519057,5.858757,-0.381397],[-3.770989,2.449208,-0.132655],[0.087576,0.156713,-1.53616],[-0.942622,2.146534,-1.421494],[-1.026192,1.022164,-1.145423],[-0.964079,1.645473,-1.067631],[-1.109128,2.458789,-1.29106],[-1.037478,0.209489,-1.805424],[-3.724391,7.599686,-1.273458],[-3.787898,7.951792,-1.304794],[3.821677,2.165581,-0.181535],[-2.39467,0.304606,-0.570375],[-2.352928,1.0439,2.079369],[-0.288899,9.640684,-1.006079],[-3.472118,7.263001,-1.080326],[-1.240769,0.972352,-0.976446],[-1.845253,0.356801,-0.995574],[-2.32279,7.915361,-0.057477],[-1.08092,2.179315,-1.168821],[4.598833,2.156768,0.280264],[-4.725417,6.442373,2.056809],[-0.490347,9.46429,-0.981092],[-1.99652,0.09737,-0.765828],[-1.137793,1.888846,-0.894165],[-0.37247,4.29661,-1.465199],[-0.184631,5.692946,-0.421398],[-3.751694,7.742231,-1.086908],[-1.001416,1.298225,-0.904674],[-3.536884,7.190777,-0.788609],[-3.737597,7.511281,-0.940052],[-1.766651,0.669388,-0.873054],[3.112245,3.474345,-1.129672],[-0.175504,3.81298,-2.0479],[-3.766762,7.412514,-0.681569],[-0.63375,9.439424,-0.785128],[-0.518199,4.768982,-1.258625],[0.790619,4.212759,-1.610218],[-3.761951,3.742528,-0.756283],[0.897483,5.679808,-0.612423],[2.221126,4.427468,-1.252155],[-0.728577,5.846457,0.062702],[0.194451,9.503908,-1.482461],[-0.099243,9.385459,-1.39564],[0.643185,3.636855,-2.180247],[0.894522,5.900601,-0.356935],[2.595516,4.75731,-0.893245],[1.108497,3.936893,-1.905098],[1.989894,5.789726,-0.343268],[-3.802345,7.655508,-0.613817],[2.339353,4.96257,-0.90308],[0.12564,4.013324,-1.879236],[-4.078965,3.683254,-0.445439],[2.092899,5.256128,-0.831607],[0.427571,0.291769,1.272964],[2.335549,3.480056,-1.581949],[-0.15687,0.324827,-1.648922],[-0.536522,5.760786,-0.203535],[1.507082,0.078251,-0.923109],[-1.854742,0.134826,2.698774],[-3.939827,3.168498,-0.526144],[-3.98461,3.39869,-0.533212],[-3.961738,4.217132,-0.489147],[4.273789,2.181164,0.153786],[-0.470498,5.645664,-0.439079],[-0.414539,5.488017,-0.673379],[-0.097462,5.062739,-1.114863],[1.198092,5.882232,-0.391699],[2.855834,5.085022,-0.498678],[1.037998,4.129757,-1.701811],[1.728091,5.068444,-1.063761],[-3.832258,2.625141,-0.311384],[-4.078526,3.070256,-0.284362],[-4.080365,3.954243,-0.440471],[-0.152578,5.276267,-0.929815],[-1.489635,8.928082,-0.295891],[0.759294,5.15585,-1.087374],[-4.000338,2.801647,-0.235135],[-4.290801,3.823209,-0.19374],[-4.221493,4.25618,-0.189894],[-4.066195,4.71916,-0.201724],[-0.155386,4.076396,-1.662865],[3.054571,4.414305,-0.825985],[-1.652919,8.726499,-0.388504],[-3.042753,0.560068,-0.126425],[-2.434456,1.118088,-0.213563],[-2.623502,1.845062,-0.283697],[-4.233371,3.43941,-0.202918],[2.726702,3.82071,-1.280097],[0.184199,4.14639,-1.673653],[-1.289203,0.624562,-1.560929],[-3.823676,7.382458,-0.407223],[0.476667,5.064419,-1.143742],[-3.873651,4.955112,-0.269389],[1.349666,5.312227,-1.000274],[-2.043776,8.434488,-0.108891],[-2.763964,0.733395,-0.129294],[-4.380505,3.664409,-0.024546],[-0.71211,5.341811,-0.803281],[-3.960858,7.183112,-0.118407],[-3.822277,7.712853,-0.263221],[-2.346808,8.108588,0.063244],[-1.841731,8.642999,-0.142496],[-2.600055,0.985604,-0.043595],[-3.513057,2.213243,-0.044151],[-3.963492,2.603055,-0.080898],[-4.258066,3.14537,-0.027046],[-4.261572,5.00334,0.13004],[0.795464,3.99873,-1.905688],[-3.300873,0.384761,0.013271],[-2.770244,0.881942,0.077313],[-3.456227,1.993871,0.301054],[-4.441987,3.914144,0.177867],[-4.367075,6.611414,0.165312],[-3.201767,0.576292,0.105769],[-3.174354,0.645009,0.440373],[-2.996576,0.74262,0.161325],[-2.724979,1.656497,0.092983],[-3.261757,2.017742,-0.070763],[-4.280173,4.518235,-0.002999],[-4.471073,5.945358,0.05202],[-3.877137,2.40743,0.274928],[-4.371219,4.252758,0.078039],[-3.400914,0.40983,0.238599],[-4.44293,3.523242,0.146339],[-4.574528,5.279761,0.353923],[-4.226643,7.191282,0.269256],[-4.16361,2.843204,0.097727],[-4.528506,5.011661,0.536625],[0.35514,5.664802,-0.572814],[2.508711,5.580976,-0.266636],[2.556226,3.633779,-1.426362],[1.878456,4.533714,-1.223744],[2.460709,4.440241,-1.1395],[2.218589,5.514603,-0.560066],[2.263712,5.737023,-0.250694],[2.964981,3.814858,-1.139927],[0.991384,5.304131,-0.999867],[2.81187,4.547292,-0.916025],[2.918089,4.768382,-0.702808],[3.262403,4.414286,-0.657935],[0.652136,6.089113,0.069089],[3.361389,3.5052,-0.946123],[2.613042,5.037192,-0.697153],[0.094339,4.36858,-1.451238],[3.290862,4.155716,-0.732318],[2.658063,4.073614,-1.217455],[3.260349,3.753257,-0.946819],[1.124268,4.862463,-1.207855],[3.35158,4.899247,-0.027586],[3.194057,4.691257,-0.524566],[3.090119,5.116085,-0.23255],[2.418965,3.811753,-1.419399],[2.191789,3.877038,-1.47023],[4.043166,2.034188,0.015477],[-1.026966,0.86766,-1.410912],[1.937563,3.860005,-1.617465],[2.98904,4.101806,-0.998132],[-0.142611,5.865305,-0.100872],[3.972673,2.292069,0.089463],[3.23349,3.959925,-0.849829],[0.16304,5.857276,-0.216704],[4.122964,1.770061,-0.114906],[2.099057,4.978374,-0.98449],[3.502411,3.76181,-0.667502],[2.079484,5.939614,-0.036205],[-0.084568,3.525193,-2.253506],[0.423859,4.06095,-1.845327],[1.6013,6.006466,-0.153429],[0.271701,3.844964,-2.078748],[0.273577,5.218904,-0.994711],[-0.410578,3.92165,-1.773635],[1.941954,5.60041,-0.621569],[0.100825,5.462131,-0.774256],[-0.53016,3.619892,-2.027451],[-0.822371,5.517453,-0.605747],[-2.474925,7.670892,-0.020174],[4.01571,0.830194,-0.013793],[-0.400092,5.094112,-1.041992],[-2.887284,5.581246,-0.525324],[-1.559841,6.050972,0.079301],[-0.469317,3.291673,-2.235211],[0.337397,3.467926,-2.295458],[-2.632074,5.573701,-0.582717],[-0.030318,6.011395,0.276616],[-0.934373,0.388987,-1.780523],[-2.661263,5.844838,-0.425966],[0.549353,5.489646,-0.807268],[-2.194355,6.197491,-0.109322],[-2.289618,5.664813,-0.581098],[1.583583,3.796366,-1.844498],[0.855295,0.215979,-1.425557],[-2.627569,5.300236,-0.767174],[4.333347,2.384332,0.399129],[-1.880401,5.583843,-0.696561],[-2.172346,5.324859,-0.846246],[-2.27058,5.906265,-0.388373],[-1.960049,5.889346,-0.397593],[0.965756,3.67547,-2.105671],[-2.014066,6.431125,0.287254],[-1.776173,5.287097,-0.89091],[-2.025852,5.089562,-0.980218],[-1.886418,6.108358,-0.000667],[-1.600803,5.785347,-0.491069],[-1.66188,4.968053,-1.042535],[-1.600621,5.962818,-0.188044],[-1.588831,5.615418,-0.665456],[4.46901,1.880138,0.057248],[-1.978845,0.927399,-0.554856],[-1.408074,5.325266,-0.83967],[1.923123,4.843955,-1.101389],[-2.87378,0.117106,-0.412735],[-1.222193,5.62638,-0.539981],[-2.632537,0.166349,-0.489218],[-1.370865,5.838832,-0.341026],[-1.067742,5.448874,-0.692701],[-1.073798,5.220878,-0.908779],[-1.147562,4.950417,-1.079727],[-2.789115,4.531047,-1.042713],[-3.550826,4.170487,-0.806058],[-3.331694,4.798177,-0.69568],[-3.689404,4.688543,-0.534317],[-3.511509,5.106246,-0.483632],[1.796344,0.076137,0.080455],[-3.306354,5.473605,-0.478764],[-2.692503,3.346604,-1.20959],[-3.963056,5.187462,3.113156],[-3.901231,6.391477,-0.246984],[4.484234,1.518638,-0.001617],[4.308829,1.657716,-0.119275],[4.290045,1.339528,-0.110626],[-3.514938,3.524974,-0.909109],[-2.1943,2.12163,-0.71966],[4.108206,1.091087,-0.11416],[3.785312,1.392435,-0.28588],[4.092886,1.480476,-0.210655],[-2.965937,6.469006,-0.379085],[-3.708581,2.962974,-0.63979],[-3.297971,2.218917,-0.299872],[3.806949,0.804703,-0.11438],[3.747957,1.059258,-0.273069],[-3.101827,4.111444,-1.006255],[-1.536445,4.658913,-1.195049],[-3.549826,2.450555,-0.375694],[-3.676495,2.108366,0.534323],[-3.674738,5.925075,-0.400011],[-2.250115,2.848335,-1.121174],[-3.698062,5.667567,-0.381396],[3.468966,0.734643,-0.190624],[-3.97972,5.670078,-0.26874],[-3.002087,4.337837,-1.033421],[-3.356392,2.608308,-0.713323],[-1.833016,3.359983,-1.28775],[-1.989069,3.632416,-1.305607],[3.591254,0.542371,0.026146],[3.364927,1.082572,-0.342613],[-3.393759,3.866801,-0.937266],[-4.124865,5.549529,-0.161729],[-4.423423,5.687223,0.000103],[-1.496881,2.601785,-1.114328],[-2.642297,6.496932,-0.264175],[-3.684236,6.819423,-0.320233],[-2.286996,3.167067,-1.246651],[-1.624896,8.44848,-0.530014],[-3.666787,2.159266,0.268149],[-2.402625,2.011243,-0.56446],[-2.736166,2.259839,-0.6943],[-2.168611,3.89078,-1.292206],[-2.065956,3.345708,-1.281346],[-2.778147,2.675605,-0.995706],[-3.507431,4.513272,-0.71829],[-2.301184,4.293911,-1.238182],[3.205808,0.211078,0.394349],[-2.129936,4.870577,-1.080781],[-2.287977,2.496593,-0.934069],[-2.701833,2.931814,-1.114509],[3.294795,0.50631,-0.081062],[-2.552829,7.468771,-0.021541],[3.06721,0.944066,-0.43074],[-2.86086,1.973622,-0.303132],[-3.598818,5.419613,-0.401645],[-1.524381,0.080156,-1.61662],[-1.907291,2.646274,-1.039438],[2.950783,0.407562,-0.105407],[-1.663048,1.655038,-0.689787],[-1.728102,1.110064,-0.635963],[-2.085823,7.686296,-0.159745],[2.883518,3.157009,-1.30858],[-2.724116,0.417169,-0.389719],[-1.788636,7.862672,-0.346413],[-2.186418,1.249609,-0.434583],[-3.092434,2.606657,-0.860002],[-1.737314,3.874201,-1.330986],[2.564522,0.422967,-0.390903],[1.670782,3.538432,-1.924753],[-2.338131,4.02578,-1.286673],[-1.916516,4.054121,-1.301788],[2.87159,2.034949,-1.267139],[-1.931518,3.062883,-1.197227],[-0.816602,0.135682,3.104104],[0.469392,0.213916,-1.489608],[2.574055,1.950091,-1.514427],[2.733595,2.682546,-1.461213],[-1.915407,4.693647,-1.151721],[-3.412883,5.867094,-0.450528],[2.28822,0.120432,-0.04102],[2.244477,0.14424,-0.376933],[-1.676198,3.570698,-1.328031],[-1.821193,4.366982,-1.266271],[-1.552208,8.099221,-0.53262],[-1.727419,2.39097,-0.989456],[-2.468226,4.711663,-1.069766],[-2.451669,6.113319,-0.273788],[2.635447,2.295842,-1.518361],[-2.020809,8.150253,-0.246714],[2.292455,0.805596,-1.3042],[2.641556,1.65665,-1.466962],[2.409062,2.842538,-1.635025],[2.456682,1.459484,-1.57543],[-1.691047,3.173582,-1.247082],[-1.865642,1.957608,-0.768683],[-3.401579,0.20407,0.100932],[2.301981,1.7102,-1.650461],[2.342929,2.611944,-1.690713],[-1.676111,2.923894,-1.17835],[-2.992039,3.547631,-1.118945],[-3.571677,6.504634,-0.375455],[2.141764,1.460869,-1.702464],[-3.221958,5.146049,-0.615632],[2.19238,2.949367,-1.747242],[2.320791,2.232971,-1.706842],[2.088678,2.585235,-1.813159],[-2.196404,0.592218,-0.569709],[-2.120811,1.836483,-0.62338],[-1.949935,2.271249,-0.874128],[2.235901,1.110183,-1.510719],[2.020157,3.241128,-1.803917],[2.054336,1.949394,-1.792332],[-3.094117,4.996595,-0.740238],[2.038063,0.635949,-1.402041],[1.980644,1.684408,-1.76778],[1.587432,3.306542,-1.991131],[1.935322,0.976267,-1.602208],[1.922621,1.235522,-1.698813],[1.712495,1.911874,-1.903234],[1.912802,2.259273,-1.888698],[1.884367,0.355453,-1.312633],[1.676427,0.76283,-1.539455],[1.78453,2.83662,-1.943035],[1.697312,0.120281,-1.150324],[1.648318,2.484973,-1.999505],[-4.051804,5.958472,-0.231731],[-1.964823,1.464607,-0.58115],[1.55996,2.183486,-1.971378],[1.628125,1.045912,-1.707832],[1.701684,1.540428,-1.827156],[1.567475,4.869481,-1.184665],[1.432492,0.843779,-1.648083],[1.173837,2.978983,-2.156687],[1.235287,3.37975,-2.09515],[1.252589,1.525293,-1.949205],[1.159334,2.336379,-2.105361],[1.49061,2.695263,-2.083216],[-4.122486,6.782604,-0.02545],[1.173388,0.279193,-1.423418],[1.505684,0.380815,-1.414395],[1.391423,1.343031,-1.843557],[1.263449,2.73225,-2.144961],[1.295858,0.597122,-1.515628],[1.245851,3.729126,-1.993015],[-2.761439,6.23717,-0.365856],[0.978887,1.664888,-2.046633],[1.219542,0.982729,-1.785486],[1.315915,1.91748,-2.02788],[-3.052746,2.127222,-0.369082],[0.977656,1.36223,-1.944119],[0.936122,3.39447,-2.203007],[-2.740036,4.184702,-1.122849],[0.853581,2.864694,-2.260847],[0.719569,0.818762,-1.763618],[0.839115,1.159359,-1.907943],[0.932069,1.94559,-2.117962],[0.579321,3.326747,-2.299369],[0.86324,0.597822,-1.565106],[0.574567,1.158452,-1.943123],[0.525138,2.137252,-2.213867],[0.779941,2.342019,-2.206157],[0.915255,2.618102,-2.209041],[0.526426,3.02241,-2.321826],[0.495431,2.521396,-2.295905],[0.80799,3.156817,-2.286432],[0.273556,1.304936,-2.012509],[0.664326,1.530024,-2.048722],[0.219173,2.32907,-2.323212],[0.405324,0.695359,-1.704884],[0.398827,0.946649,-1.843899],[0.345109,1.608829,-2.100174],[-2.356743,0.062032,-0.4947],[-3.001084,0.27146,2.560034],[-2.064663,0.303055,-0.697324],[0.221271,3.174023,-2.374399],[0.195842,0.437865,-1.621473],[-0.385613,0.297763,1.960096],[1.999609,0.108928,-0.79125],[0.351698,9.227494,-1.57565],[0.021477,2.191913,-2.309353],[0.246381,2.836575,-2.356365],[1.543281,0.237539,1.901906],[0.031881,9.147022,-1.454203],[-0.001881,1.648503,-2.108044],[0.333423,1.907088,-2.204533],[0.044063,2.634032,-2.368412],[-0.028148,3.053684,-2.390082],[0.02413,3.34297,-2.36544],[-0.272645,9.02879,-1.238685],[-0.006348,0.832044,-1.758222],[-0.321105,1.458754,-1.886313],[-0.153948,8.618809,-1.105353],[-0.409303,1.137783,-1.720556],[-0.410054,1.742789,-1.957989],[-0.287905,2.380404,-2.294509],[-0.261375,2.646629,-2.356322],[-0.221986,3.215303,-2.345844],[-0.31608,0.687581,-1.71901],[-0.537705,0.855802,-1.648585],[-0.142834,1.193053,-1.87371],[-0.24371,2.044435,-2.176958],[-0.437999,2.959748,-2.299698],[-0.78895,0.176226,-1.729046],[-0.608509,0.546932,-1.734032],[-0.693698,4.478782,-1.369372],[-0.669153,8.469645,-0.911149],[-0.741857,1.082705,-1.458474],[-0.554059,2.440325,-2.141785],[2.09261,0.153182,2.57581],[1.792547,0.111794,2.563777],[1.855787,0.189541,2.835089],[1.492601,0.232246,2.987681],[-0.284918,0.236687,3.429738],[2.604841,0.11997,1.01506],[0.331271,0.168113,3.124031],[0.280606,0.308368,2.495937],[0.544591,0.325711,2.081274],[0.193145,0.19154,-0.977556],[3.810099,0.42324,1.032202],[3.54622,0.379245,1.392814],[0.61402,0.276328,0.849356],[-1.198628,0.144953,2.911457],[4.17199,0.68037,1.391526],[0.88279,0.321339,2.059129],[1.93035,0.109992,2.054154],[1.620331,0.121986,2.37203],[2.374812,0.10921,1.734876],[-0.031227,0.294412,2.593687],[4.075018,0.561914,1.038065],[-0.570366,0.126583,2.975558],[0.950052,0.318463,1.804012],[1.130034,0.117125,0.98385],[2.123049,0.08946,1.665911],[2.087572,0.068621,0.335013],[2.927337,0.167117,0.289611],[0.528876,0.313434,3.205969],[1.174911,0.162744,1.328262],[-4.88844,5.59535,1.661134],[-4.709607,5.165338,1.324082],[0.871199,0.277021,1.263831],[-3.910877,2.349318,1.272269],[1.56824,0.118605,2.768112],[1.179176,0.152617,-0.858003],[1.634629,0.247872,2.128625],[-4.627425,5.126935,1.617836],[3.845542,0.54907,1.45601],[2.654006,0.165508,1.637169],[-0.678324,0.26488,1.974741],[2.451139,0.100377,0.213768],[0.633199,0.286719,0.403357],[-0.533042,0.2524,1.373267],[0.99317,0.171106,0.624966],[-0.100063,0.306466,2.170225],[1.245943,0.092351,0.661031],[1.390414,0.198996,-0.0864],[-4.457265,5.030531,2.138242],[2.89776,0.146575,1.297468],[1.802703,0.088824,-0.490405],[1.055447,0.309261,2.392437],[2.300436,0.142429,2.104254],[2.33399,0.187756,2.416935],[2.325183,0.134349,0.574063],[2.410924,0.370971,2.637115],[1.132924,0.290511,3.061],[1.764028,0.070212,-0.80535],[2.156994,0.397657,2.844061],[0.920711,0.225527,-0.882456],[-4.552135,5.24096,2.85514],[0.210016,0.309396,2.064296],[0.612067,0.136815,-1.086002],[3.150236,0.426757,1.802703],[-0.24824,0.282258,1.470997],[0.974269,0.301311,-0.640898],[-4.401413,5.03966,2.535553],[0.644319,0.274006,-0.817806],[0.332922,0.309077,0.108474],[3.610001,0.317447,0.689353],[3.335681,0.358195,0.118477],[0.623544,0.318983,-0.4193],[-0.11012,0.307747,1.831331],[-0.407528,0.291044,2.282935],[0.069783,0.285095,0.950289],[0.970135,0.310392,-0.283742],[0.840564,0.306898,0.098854],[-0.541827,0.267753,1.683795],[-3.956082,4.55713,2.297164],[-4.161036,2.834481,1.64183],[-4.093952,4.977551,2.747747],[2.661819,0.261867,1.926145],[-3.749926,2.161875,0.895238],[-2.497776,1.3629,0.791855],[0.691482,0.304968,1.582939],[-4.013193,4.830963,2.4769],[-3.639585,2.091265,1.304415],[-3.9767,2.563053,1.6284],[-3.979915,2.788616,1.977977],[0.388782,0.312656,1.709168],[-3.40873,1.877324,0.851652],[-3.671637,5.136974,3.170734],[-3.12964,1.852012,0.157682],[-3.629687,4.852698,2.686837],[-3.196164,1.793459,0.452804],[-3.746338,2.31357,1.648551],[2.992192,0.125251,0.575976],[-3.254051,0.054431,0.314152],[-3.474644,1.925288,1.134116],[-3.418372,2.022882,1.578901],[-2.920955,1.705403,0.29842],[-3.57229,2.152022,1.607572],[-3.251259,0.09013,-0.106174],[-3.299952,1.877781,1.348623],[-3.666819,2.441459,2.004838],[-2.912646,1.824748,-0.045348],[-3.399511,2.479484,2.340393],[-3.009754,0.015286,0.075567],[-3.381443,2.316937,2.156923],[-3.352801,2.133341,1.857366],[-3.01788,1.687685,0.645867],[-2.931857,1.678712,1.158472],[-3.301008,0.08836,0.591001],[1.358025,0.19795,1.599144],[-2.999565,1.845016,1.618396],[-2.767957,0.028397,-0.196436],[-2.93962,2.078779,2.140593],[-3.346648,2.674056,2.518097],[3.324322,0.20822,0.628605],[3.091677,0.137202,0.9345],[-2.881807,0.009952,0.318439],[-2.764946,1.786619,1.693439],[-2.905542,1.932343,1.900002],[-3.140854,2.271384,2.274946],[-2.88995,2.487856,2.574759],[-2.367194,-0.000943,-0.15576],[-3.050738,0.068703,0.742988],[-2.759525,1.55679,0.877782],[-3.151775,2.48054,2.482749],[-2.578618,-0.002885,0.165716],[-2.651618,1.877246,1.981189],[-2.933973,0.133731,1.631023],[1.047628,0.100284,-1.085248],[-1.585123,0.062083,-1.394896],[-2.287917,-0.002671,0.214434],[-2.524899,0.007481,0.471788],[-2.815492,2.188198,2.343294],[-2.095142,-0.003149,-0.094574],[-2.172686,-0.000133,0.47963],[-2.732704,0.074306,1.742079],[-2.49653,2.145668,2.42691],[-1.343683,0.047721,-1.506391],[-2.581185,0.048703,0.975528],[-2.905101,0.083158,2.010052],[-2.601514,2.007801,2.223089],[-2.339464,0.02634,1.484304],[-2.907873,0.10367,2.378149],[-1.368796,0.062516,-1.049125],[-1.93244,0.02443,-0.427603],[-2.705081,0.060513,2.303802],[3.372155,0.206274,0.892293],[-1.761827,0.093202,-1.037404],[-1.700667,0.0397,-0.614221],[-1.872291,0.011979,-0.135753],[-1.929257,0.074005,0.728999],[-2.520128,0.049665,1.99054],[-2.699411,0.10092,2.603116],[3.211701,0.27302,1.423357],[-1.445362,0.1371,-0.626491],[2.921332,0.259112,1.645525],[-0.993242,0.058686,-1.408916],[-0.944986,0.157541,-1.097665],[-2.154301,0.032749,1.882001],[-2.108789,1.988557,2.442673],[-1.015659,0.25497,-0.416665],[-1.898411,0.015872,0.16715],[-1.585517,0.027121,0.453445],[-2.311105,0.061264,2.327061],[-2.637042,0.152224,2.832201],[-2.087515,2.292972,2.617585],[-0.750611,0.056697,-1.504516],[-0.472029,0.075654,-1.360203],[-0.710798,0.139244,-1.183863],[-0.97755,0.26052,-0.831167],[-0.655814,0.260843,-0.880068],[-0.897513,0.275537,-0.133042],[-2.049194,0.084947,2.455422],[-0.177837,0.076362,-1.449009],[-0.553393,0.279083,-0.59573],[-1.788636,0.06163,2.231198],[-0.34761,0.255578,-0.999614],[-1.398589,0.036482,0.65871],[-1.133918,0.05617,0.69473],[-1.43369,0.058226,1.977865],[-2.505459,1.492266,1.19295]]\nexports.cells=[[2,1661,3],[1676,7,6],[712,1694,9],[3,1674,1662],[11,1672,0],[1705,0,1],[5,6,1674],[4,5,1674],[7,8,712],[2,1662,10],[1,10,1705],[11,1690,1672],[1705,11,0],[5,1676,6],[7,9,6],[7,712,9],[2,3,1662],[3,4,1674],[1,2,10],[12,82,1837],[1808,12,1799],[1808,1799,1796],[12,861,82],[861,1808,13],[1808,861,12],[1799,12,1816],[1680,14,1444],[15,17,16],[14,1678,1700],[16,17,1679],[15,1660,17],[14,1084,1678],[15,1708,18],[15,18,1660],[1680,1084,14],[1680,15,1084],[15,1680,1708],[793,813,119],[1076,793,119],[1076,1836,22],[23,19,20],[21,1076,22],[21,22,23],[23,20,21],[1076,119,1836],[806,634,470],[432,1349,806],[251,42,125],[809,1171,791],[953,631,827],[634,1210,1176],[157,1832,1834],[56,219,53],[126,38,83],[37,85,43],[59,1151,1154],[83,75,41],[77,85,138],[201,948,46],[1362,36,37],[452,775,885],[1237,95,104],[966,963,1262],[85,77,43],[36,85,37],[1018,439,1019],[41,225,481],[85,83,127],[93,83,41],[935,972,962],[116,93,100],[98,82,813],[41,75,225],[298,751,54],[1021,415,1018],[77,138,128],[766,823,1347],[593,121,573],[905,885,667],[786,744,747],[100,41,107],[604,334,765],[779,450,825],[968,962,969],[225,365,481],[365,283,196],[161,160,303],[875,399,158],[328,1817,954],[62,61,1079],[358,81,72],[74,211,133],[160,161,138],[91,62,1079],[167,56,1405],[56,167,219],[913,914,48],[344,57,102],[43,77,128],[1075,97,1079],[389,882,887],[219,108,53],[1242,859,120],[604,840,618],[754,87,762],[197,36,1362],[1439,88,1200],[1652,304,89],[81,44,940],[445,463,151],[717,520,92],[129,116,100],[1666,1811,624],[1079,97,91],[62,91,71],[688,898,526],[463,74,133],[278,826,99],[961,372,42],[799,94,1007],[100,93,41],[1314,943,1301],[184,230,109],[875,1195,231],[133,176,189],[751,755,826],[101,102,57],[1198,513,117],[748,518,97],[1145,1484,1304],[358,658,81],[971,672,993],[445,151,456],[252,621,122],[36,271,126],[85,36,126],[116,83,93],[141,171,1747],[1081,883,103],[1398,1454,149],[457,121,593],[127,116,303],[697,70,891],[457,891,1652],[1058,1668,112],[518,130,97],[214,319,131],[185,1451,1449],[463,133,516],[1428,123,177],[113,862,561],[215,248,136],[186,42,251],[127,83,116],[160,85,127],[162,129,140],[154,169,1080],[169,170,1080],[210,174,166],[1529,1492,1524],[450,875,231],[399,875,450],[171,141,170],[113,1155,452],[131,319,360],[44,175,904],[452,872,113],[746,754,407],[147,149,150],[309,390,1148],[53,186,283],[757,158,797],[303,129,162],[429,303,162],[154,168,169],[673,164,193],[38,271,75],[320,288,1022],[246,476,173],[175,548,904],[182,728,456],[199,170,169],[168,199,169],[199,171,170],[184,238,230],[246,247,180],[1496,1483,1467],[147,150,148],[828,472,445],[53,108,186],[56,53,271],[186,961,42],[1342,391,57],[1664,157,1834],[1070,204,178],[178,204,179],[285,215,295],[692,55,360],[192,193,286],[359,673,209],[586,195,653],[121,89,573],[202,171,199],[238,515,311],[174,210,240],[174,105,166],[717,276,595],[1155,1149,452],[1405,56,197],[53,283,30],[75,53,30],[45,235,1651],[210,166,490],[181,193,192],[185,620,217],[26,798,759],[1070,226,204],[220,187,179],[220,168,187],[202,222,171],[359,209,181],[182,456,736],[964,167,1405],[76,250,414],[807,1280,1833],[70,883,1652],[227,179,204],[221,199,168],[221,202,199],[360,494,131],[214,241,319],[105,247,166],[205,203,260],[388,480,939],[482,855,211],[8,807,1833],[226,255,204],[228,221,168],[166,173,490],[701,369,702],[211,855,262],[631,920,630],[1448,1147,1584],[255,227,204],[237,220,179],[228,168,220],[222,256,555],[215,259,279],[126,271,38],[108,50,186],[227,236,179],[236,237,179],[220,237,228],[228,202,221],[256,222,202],[555,256,229],[259,152,279],[27,1296,31],[186,50,961],[961,234,372],[1651,235,812],[1572,1147,1448],[255,226,1778],[255,236,227],[256,257,229],[106,184,109],[241,410,188],[177,578,620],[209,673,181],[1136,1457,79],[1507,245,718],[255,273,236],[275,410,241],[206,851,250],[1459,253,1595],[1406,677,1650],[228,274,202],[202,281,256],[348,239,496],[205,172,203],[369,248,702],[261,550,218],[261,465,550],[574,243,566],[921,900,1220],[291,273,255],[348,238,265],[109,230,194],[149,380,323],[443,270,421],[272,291,255],[274,228,237],[274,292,202],[281,257,256],[276,543,341],[152,259,275],[1111,831,249],[632,556,364],[299,273,291],[299,236,273],[280,237,236],[202,292,281],[247,246,173],[282,49,66],[1620,1233,1553],[299,280,236],[280,305,237],[237,305,274],[306,292,274],[330,257,281],[246,194,264],[166,247,173],[912,894,896],[611,320,244],[1154,1020,907],[969,962,290],[272,299,291],[305,318,274],[145,212,240],[164,248,285],[259,277,275],[193,164,295],[269,240,210],[1033,288,320],[46,948,206],[336,280,299],[330,281,292],[257,307,300],[369,136,248],[145,240,269],[502,84,465],[193,295,286],[164,285,295],[282,302,49],[161,303,429],[318,306,274],[306,330,292],[315,257,330],[315,307,257],[307,352,300],[300,352,308],[275,277,403],[353,1141,333],[1420,425,47],[611,313,320],[85,126,83],[128,1180,43],[303,116,129],[280,314,305],[314,318,305],[190,181,242],[203,214,131],[820,795,815],[322,299,272],[322,336,299],[315,339,307],[172,152,617],[172,214,203],[321,1033,320],[1401,941,946],[85,160,138],[976,454,951],[747,60,786],[317,322,272],[339,352,307],[266,33,867],[163,224,218],[247,614,180],[648,639,553],[388,172,205],[611,345,313],[313,345,320],[160,127,303],[454,672,951],[317,329,322],[314,280,336],[306,338,330],[330,339,315],[1236,115,436],[342,321,320],[1046,355,328],[328,346,325],[325,346,317],[367,314,336],[314,337,318],[337,306,318],[338,343,330],[342,320,345],[355,349,328],[346,329,317],[347,336,322],[314,362,337],[330,343,339],[340,308,352],[135,906,1022],[239,156,491],[194,230,486],[40,1015,1003],[321,355,1046],[329,382,322],[382,347,322],[347,367,336],[337,371,306],[306,371,338],[1681,296,1493],[286,172,388],[230,348,486],[348,183,486],[384,332,830],[328,349,346],[367,362,314],[371,343,338],[339,351,352],[57,344,78],[342,355,321],[386,346,349],[386,350,346],[346,350,329],[347,366,367],[343,363,339],[323,380,324],[152,275,241],[345,1045,342],[350,374,329],[339,363,351],[234,340,352],[353,361,354],[40,34,1015],[373,355,342],[373,349,355],[374,382,329],[366,347,382],[371,363,343],[351,379,352],[379,372,352],[372,234,352],[156,190,491],[319,241,692],[354,361,31],[366,377,367],[363,379,351],[133,590,516],[197,56,271],[1045,370,342],[370,373,342],[374,350,386],[377,366,382],[367,395,362],[400,337,362],[400,371,337],[378,363,371],[106,109,614],[181,673,193],[953,920,631],[376,349,373],[376,386,349],[378,379,363],[224,375,218],[279,152,172],[361,619,381],[1347,823,795],[760,857,384],[392,374,386],[394,395,367],[383,371,400],[383,378,371],[218,375,261],[197,271,36],[414,454,976],[385,376,373],[1051,382,374],[387,394,367],[377,387,367],[395,400,362],[279,172,295],[30,365,225],[450,231,825],[385,373,370],[398,374,392],[1051,377,382],[396,378,383],[348,496,183],[295,172,286],[357,269,495],[1148,390,1411],[75,30,225],[206,76,54],[412,386,376],[412,392,386],[396,383,400],[651,114,878],[123,1241,506],[238,311,265],[381,653,29],[618,815,334],[427,1032,411],[298,414,976],[791,332,384],[129,100,140],[412,404,392],[392,404,398],[140,107,360],[395,394,400],[423,379,378],[385,412,376],[406,94,58],[419,415,1021],[422,423,378],[423,125,379],[258,508,238],[311,156,265],[213,287,491],[449,411,1024],[412,1068,404],[55,140,360],[76,414,54],[394,416,400],[400,416,396],[422,378,396],[1258,796,789],[427,411,449],[427,297,1032],[1385,1366,483],[417,448,284],[1507,341,245],[162,140,444],[658,44,81],[433,125,423],[438,251,125],[429,162,439],[1342,57,1348],[765,766,442],[697,891,695],[1057,396,416],[440,423,422],[440,433,423],[433,438,125],[438,196,251],[74,482,211],[1136,79,144],[29,195,424],[242,1004,492],[57,757,28],[414,298,54],[238,348,230],[224,163,124],[295,215,279],[495,269,490],[449,446,427],[446,297,427],[1020,1163,909],[128,138,419],[66,980,443],[415,439,1018],[111,396,1057],[111,422,396],[840,249,831],[593,664,596],[218,550,155],[109,194,180],[483,268,855],[161,415,419],[1737,232,428],[360,107,494],[1006,1011,410],[444,140,55],[919,843,430],[190,242,213],[275,403,410],[131,494,488],[449,663,446],[138,161,419],[128,419,34],[439,162,444],[460,440,422],[440,438,433],[472,74,445],[491,190,213],[238,508,515],[46,206,54],[972,944,962],[1241,1428,1284],[111,460,422],[470,432,806],[248,164,702],[1025,467,453],[553,1235,648],[263,114,881],[267,293,896],[469,438,440],[455,196,438],[287,242,492],[239,265,156],[213,242,287],[1684,746,63],[663,474,446],[415,161,429],[140,100,107],[1055,459,467],[469,455,438],[259,542,277],[446,474,466],[446,466,447],[439,444,1019],[614,109,180],[190,359,181],[156,497,190],[726,474,663],[1023,458,459],[461,440,460],[269,210,490],[246,180,194],[590,133,189],[163,218,155],[467,468,453],[1063,1029,111],[111,1029,460],[1029,464,460],[461,469,440],[150,149,323],[828,445,456],[375,502,261],[474,475,466],[573,426,462],[478,1023,477],[478,458,1023],[458,479,467],[459,458,467],[468,393,453],[464,461,460],[484,365,455],[1232,182,1380],[172,617,214],[547,694,277],[542,547,277],[184,258,238],[261,502,465],[467,479,468],[484,455,469],[1380,182,864],[475,476,466],[80,447,476],[466,476,447],[415,429,439],[479,487,468],[487,287,468],[492,393,468],[260,469,461],[481,365,484],[531,473,931],[692,360,319],[726,495,474],[468,287,492],[480,464,1029],[260,461,464],[494,481,484],[74,472,482],[174,240,212],[223,106,614],[486,477,485],[478,496,458],[491,487,479],[123,402,177],[488,469,260],[488,484,469],[265,239,348],[248,215,285],[474,490,475],[477,486,478],[458,496,479],[239,491,479],[1584,1147,1334],[488,494,484],[401,123,506],[495,490,474],[490,173,475],[80,476,264],[491,287,487],[480,1029,1004],[480,205,464],[173,476,475],[485,194,486],[486,183,478],[478,183,496],[496,239,479],[848,1166,60],[268,262,855],[205,260,464],[260,203,488],[203,131,488],[246,264,476],[194,485,264],[1002,310,1664],[311,515,497],[515,359,497],[565,359,515],[1250,1236,301],[736,456,151],[654,174,567],[577,534,648],[519,505,645],[725,565,508],[150,1723,148],[584,502,505],[584,526,502],[502,526,84],[607,191,682],[560,499,660],[607,517,191],[1038,711,124],[951,672,971],[716,507,356],[868,513,1198],[615,794,608],[682,191,174],[1313,928,1211],[617,241,214],[511,71,91],[408,800,792],[192,286,525],[80,485,447],[91,97,130],[1675,324,888],[207,756,532],[582,1097,1124],[311,497,156],[510,130,146],[523,511,510],[608,708,616],[546,690,650],[511,527,358],[536,146,518],[465,418,550],[418,709,735],[520,514,500],[584,505,519],[536,518,509],[146,536,510],[538,527,511],[876,263,669],[646,524,605],[510,536,523],[527,175,358],[724,876,669],[721,724,674],[524,683,834],[558,509,522],[558,536,509],[523,538,511],[611,243,574],[528,706,556],[668,541,498],[523,537,538],[527,540,175],[532,756,533],[1013,60,747],[551,698,699],[92,520,500],[535,536,558],[536,569,523],[538,540,527],[539,548,175],[567,212,145],[401,896,293],[534,675,639],[1510,595,1507],[557,545,530],[569,536,535],[537,540,538],[540,539,175],[569,537,523],[1135,718,47],[587,681,626],[580,535,558],[99,747,278],[701,565,725],[665,132,514],[665,514,575],[132,549,653],[176,651,189],[65,47,266],[597,569,535],[569,581,537],[537,581,540],[563,539,540],[539,564,548],[1509,1233,1434],[132,653,740],[550,710,155],[714,721,644],[410,1011,188],[732,534,586],[560,562,729],[555,557,222],[580,558,545],[597,535,580],[581,563,540],[5,821,1676],[576,215,136],[649,457,741],[564,539,563],[124,711,224],[550,668,710],[550,541,668],[565,701,673],[560,613,499],[233,532,625],[545,555,580],[601,581,569],[594,904,548],[1463,1425,434],[185,149,1454],[721,674,644],[185,380,149],[577,424,586],[462,586,559],[597,601,569],[594,548,564],[566,603,574],[165,543,544],[457,89,121],[586,424,195],[725,587,606],[1078,582,1124],[588,925,866],[462,559,593],[189,878,590],[555,229,580],[602,563,581],[904,594,956],[434,1425,1438],[1024,112,821],[572,587,626],[600,597,580],[599,591,656],[600,580,229],[601,622,581],[581,622,602],[602,564,563],[602,594,564],[603,611,574],[498,529,546],[697,1145,70],[592,628,626],[610,597,600],[597,610,601],[222,557,171],[604,765,799],[573,462,593],[133,200,176],[729,607,627],[1011,692,188],[518,146,130],[585,687,609],[682,627,607],[1712,599,656],[562,592,607],[643,656,654],[257,600,229],[601,633,622],[623,594,602],[174,212,567],[725,606,701],[609,701,606],[610,633,601],[633,642,622],[380,216,324],[142,143,1249],[501,732,586],[534,577,586],[648,1235,577],[610,641,633],[310,1002,1831],[618,334,604],[1710,145,269],[707,498,659],[501,586,462],[625,501,462],[726,663,691],[300,600,257],[641,610,600],[622,629,602],[602,629,623],[55,692,444],[518,748,509],[929,1515,1411],[620,578,267],[71,511,358],[707,668,498],[650,687,585],[600,300,641],[641,657,633],[1675,888,1669],[622,636,629],[505,502,375],[541,529,498],[332,420,1053],[637,551,638],[534,639,648],[69,623,873],[300,512,641],[633,657,642],[562,660,579],[687,637,638],[709,646,605],[775,738,885],[559,549,132],[646,683,524],[641,512,657],[266,897,949],[1712,643,1657],[184,727,258],[674,724,669],[699,714,647],[628,659,572],[657,662,642],[571,881,651],[517,607,504],[598,706,528],[598,694,547],[640,552,560],[655,693,698],[698,693,721],[91,510,511],[144,301,1136],[324,216,888],[870,764,1681],[575,514,520],[276,544,543],[658,175,44],[645,505,711],[659,546,572],[700,524,655],[605,700,529],[266,867,897],[1695,1526,764],[579,659,628],[654,591,682],[586,549,559],[698,721,714],[896,401,506],[640,734,599],[664,665,575],[621,629,636],[1712,656,643],[547,644,598],[710,668,707],[640,560,734],[655,698,551],[694,528,277],[512,662,657],[504,592,626],[688,584,519],[152,241,617],[587,725,681],[598,669,706],[526,670,84],[598,528,694],[710,707,499],[579,592,562],[660,659,579],[323,324,1134],[326,895,473],[195,29,653],[84,670,915],[560,660,562],[504,626,681],[711,505,224],[651,881,114],[216,620,889],[1362,678,197],[493,99,48],[1659,691,680],[529,690,546],[430,843,709],[655,524,693],[174,191,105],[674,669,598],[98,712,82],[572,546,585],[72,61,71],[912,911,894],[106,223,184],[664,132,665],[843,646,709],[635,699,136],[699,698,714],[593,132,664],[688,526,584],[185,177,620],[533,675,534],[687,638,635],[1652,89,457],[896,506,912],[132,740,514],[689,685,282],[691,449,680],[48,436,493],[136,699,647],[739,640,554],[549,586,653],[532,533,625],[1530,695,649],[653,381,619],[736,151,531],[188,692,241],[177,402,578],[33,689,867],[689,33,685],[593,559,132],[949,65,266],[711,1038,661],[939,480,1004],[609,369,701],[616,552,615],[619,361,740],[151,463,516],[513,521,117],[691,663,449],[186,251,196],[333,302,327],[613,560,552],[616,613,552],[690,551,637],[660,707,659],[704,208,1203],[418,735,550],[163,708,124],[524,834,693],[554,640,599],[245,341,165],[565,673,359],[155,710,708],[105,191,517],[1515,198,1411],[1709,554,599],[60,289,786],[838,1295,1399],[533,534,625],[710,499,708],[556,632,410],[217,620,216],[591,627,682],[504,503,223],[643,654,567],[690,637,650],[545,557,555],[174,654,682],[719,691,1659],[727,681,508],[645,711,661],[794,615,739],[565,515,508],[282,685,302],[1150,397,1149],[638,699,635],[544,685,33],[719,726,691],[1742,1126,1733],[1724,1475,148],[556,410,403],[185,217,380],[503,504,681],[277,556,403],[32,1178,158],[1712,1709,599],[605,529,541],[635,136,369],[687,635,369],[529,700,690],[700,551,690],[89,304,573],[625,534,732],[730,302,685],[503,681,727],[702,673,701],[730,327,302],[327,353,333],[596,664,575],[660,499,707],[585,546,650],[560,729,734],[700,655,551],[176,571,651],[517,504,223],[730,685,544],[1661,1682,726],[1682,495,726],[1250,301,917],[605,524,700],[609,687,369],[516,389,895],[1553,686,1027],[673,702,164],[656,591,654],[520,596,575],[402,123,401],[828,456,728],[1645,677,1653],[528,556,277],[638,551,699],[190,497,359],[276,730,544],[1117,1525,933],[1027,686,1306],[155,708,163],[709,605,541],[647,644,547],[650,637,687],[599,734,591],[578,293,267],[1682,357,495],[510,91,130],[734,729,627],[576,542,215],[709,541,735],[735,541,550],[276,500,730],[500,327,730],[653,619,740],[414,851,454],[734,627,591],[729,562,607],[615,552,640],[525,181,192],[308,512,300],[223,503,727],[266,165,33],[92,500,276],[321,1046,1033],[585,609,606],[1200,1559,86],[628,572,626],[301,436,803],[714,644,647],[708,499,613],[721,693,724],[514,353,327],[353,740,361],[344,158,78],[708,613,616],[615,640,739],[500,514,327],[514,740,353],[1449,177,185],[462,233,625],[851,405,1163],[608,616,615],[647,542,576],[625,732,501],[1097,582,1311],[1235,424,577],[579,628,592],[607,592,504],[24,432,470],[105,614,247],[104,742,471],[542,259,215],[365,196,455],[1420,47,65],[223,727,184],[547,542,647],[572,585,606],[587,572,606],[262,780,1370],[647,576,136],[644,674,598],[271,53,75],[727,508,258],[471,742,142],[505,375,224],[357,1710,269],[725,508,681],[659,498,546],[743,1178,32],[1195,634,231],[1176,24,470],[743,1110,1178],[135,809,857],[63,746,407],[634,1176,470],[159,1112,27],[1176,1685,24],[399,450,779],[1178,856,875],[751,744,54],[436,48,772],[634,1108,1210],[769,1285,1286],[751,298,755],[746,1684,754],[754,924,87],[722,1625,756],[87,839,153],[489,795,820],[758,808,1518],[839,840,153],[831,1111,959],[1111,749,959],[810,1253,1363],[1247,1394,713],[1388,1329,1201],[1242,120,761],[857,791,384],[758,1523,808],[296,764,1504],[70,1652,891],[207,233,1638],[1348,57,28],[858,420,332],[964,1379,1278],[420,1194,816],[784,1076,1186],[1076,21,1186],[1710,767,1],[849,822,778],[806,137,787],[786,790,744],[790,54,744],[771,63,407],[785,852,818],[774,1823,272],[895,151,516],[135,1022,809],[99,826,48],[48,826,755],[808,705,408],[833,441,716],[1733,743,32],[1385,836,852],[772,827,737],[1005,49,781],[793,1697,813],[1518,441,1537],[1139,1132,859],[782,801,770],[1510,1530,676],[770,814,835],[231,787,825],[207,722,756],[26,771,798],[782,863,865],[832,54,790],[865,842,507],[799,765,94],[1175,1261,1353],[800,408,805],[262,986,200],[792,800,814],[801,792,770],[704,1203,1148],[356,1514,822],[165,544,33],[561,776,113],[1043,738,775],[815,831,820],[773,792,801],[772,48,914],[772,737,803],[436,772,803],[808,817,705],[1624,822,1527],[588,1144,788],[799,762,604],[821,1520,1676],[854,803,666],[828,482,472],[445,74,463],[831,489,820],[828,836,482],[716,782,763],[334,815,766],[815,823,766],[334,766,765],[819,805,837],[1716,1521,1412],[1684,924,754],[800,805,819],[1709,829,554],[806,1349,137],[99,1013,747],[341,595,276],[817,810,818],[1176,1691,1685],[763,782,865],[830,846,1052],[865,1499,842],[982,846,1053],[847,832,790],[1178,875,158],[817,818,705],[1302,1392,45],[96,417,284],[223,614,517],[356,507,1514],[1166,848,1179],[1349,432,26],[717,92,276],[770,835,863],[522,509,1745],[847,841,832],[832,841,46],[829,739,554],[802,824,39],[397,1043,775],[1567,849,778],[1385,483,855],[1349,26,1346],[441,801,782],[402,401,293],[1043,667,738],[759,798,1007],[819,837,728],[728,837,828],[837,852,828],[1537,441,833],[148,1475,147],[805,705,837],[716,441,782],[483,1371,780],[814,819,844],[845,753,1336],[1661,719,4],[862,847,790],[737,827,666],[201,46,841],[810,785,818],[408,705,805],[1560,1536,849],[1585,853,1786],[7,1668,807],[7,807,8],[822,1514,1527],[800,819,814],[847,862,841],[991,857,760],[705,818,837],[808,408,773],[402,293,578],[791,858,332],[1480,1228,1240],[814,844,835],[785,1385,852],[1132,120,859],[1743,1726,684],[1704,783,1279],[1623,1694,1731],[959,489,831],[1518,808,773],[862,872,841],[441,773,801],[331,512,308],[380,217,216],[841,872,201],[818,852,837],[448,1480,1240],[856,1108,1195],[1527,1514,1526],[819,182,1232],[871,724,693],[852,836,828],[770,792,814],[803,737,666],[751,826,278],[1674,1727,1699],[849,356,822],[871,693,834],[507,842,1514],[1406,1097,869],[1328,1349,1346],[823,815,795],[744,751,278],[1110,856,1178],[520,717,316],[871,834,683],[884,876,724],[165,266,47],[716,763,507],[216,889,888],[853,1585,1570],[1536,716,356],[886,873,623],[782,770,863],[432,24,26],[683,882,871],[884,724,871],[114,876,884],[516,590,389],[11,1218,1628],[862,113,872],[886,623,629],[830,1052,1120],[762,153,604],[773,408,792],[763,865,507],[153,840,604],[882,884,871],[531,151,326],[886,890,873],[133,262,200],[819,1232,844],[621,636,122],[645,892,519],[1130,1076,784],[114,263,876],[1670,10,1663],[911,670,894],[452,885,872],[872,885,201],[887,882,683],[878,884,882],[590,878,882],[890,867,689],[897,629,621],[897,886,629],[819,728,182],[519,893,688],[894,670,526],[898,894,526],[1536,356,849],[810,1363,785],[878,114,884],[879,888,892],[892,889,893],[893,898,688],[895,683,843],[895,887,683],[889,620,267],[590,882,389],[418,465,84],[949,897,621],[897,890,886],[889,267,893],[898,267,896],[531,326,473],[189,651,878],[843,683,646],[897,867,890],[888,889,892],[893,267,898],[896,894,898],[473,895,843],[895,389,887],[974,706,669],[513,1115,521],[326,151,895],[809,791,857],[211,262,133],[920,923,947],[923,90,947],[90,25,947],[25,972,935],[64,431,899],[52,899,901],[903,905,59],[437,967,73],[839,1242,761],[904,975,44],[917,301,144],[915,670,911],[905,201,885],[1684,63,1685],[1033,1194,288],[950,913,755],[912,918,911],[950,914,913],[506,918,912],[922,919,915],[911,922,915],[1004,451,492],[1263,553,639],[922,911,918],[630,920,947],[916,506,926],[916,918,506],[521,1115,1098],[916,922,918],[919,418,915],[83,38,75],[24,1685,771],[110,1230,1213],[712,8,1837],[922,930,919],[919,430,418],[1395,1402,1187],[930,922,916],[594,623,69],[35,431,968],[35,968,969],[866,924,1684],[1625,1263,675],[631,630,52],[930,931,919],[430,709,418],[302,333,49],[1446,978,1138],[799,1007,798],[931,843,919],[947,25,64],[885,738,667],[1262,963,964],[899,970,901],[1401,946,938],[1117,933,1091],[1685,63,771],[905,948,201],[979,937,980],[951,953,950],[937,270,443],[1154,903,59],[1194,954,1067],[909,405,907],[850,1151,59],[1769,811,1432],[76,206,250],[938,946,966],[965,927,942],[938,966,957],[955,975,904],[927,965,934],[52,51,631],[59,905,667],[431,935,968],[786,289,561],[252,122,671],[481,494,107],[954,1817,1067],[795,25,90],[958,965,945],[795,972,25],[902,983,955],[972,489,944],[1256,29,424],[671,331,945],[946,958,963],[956,955,904],[902,955,956],[671,512,331],[945,331,961],[662,671,122],[671,662,512],[934,65,927],[630,947,52],[666,631,910],[850,59,667],[961,331,234],[1024,411,1042],[890,69,873],[252,671,945],[975,290,940],[283,186,196],[30,283,365],[950,755,298],[946,965,958],[985,290,975],[969,290,985],[405,851,206],[935,431,64],[941,1423,1420],[964,963,167],[942,252,945],[78,757,57],[49,1005,66],[937,979,270],[631,666,827],[980,937,443],[66,689,282],[421,902,956],[947,64,52],[35,979,899],[951,971,953],[762,87,153],[27,31,381],[924,839,87],[946,963,966],[331,308,340],[957,966,1262],[473,843,931],[953,971,920],[270,969,902],[935,962,968],[51,1005,781],[969,983,902],[437,73,940],[69,421,956],[761,249,840],[263,974,669],[962,944,967],[962,437,290],[985,975,955],[907,405,948],[720,957,1262],[25,935,64],[176,200,571],[108,945,50],[250,851,414],[200,986,571],[881,974,263],[827,772,953],[970,899,980],[29,159,27],[234,331,340],[948,405,206],[980,899,979],[986,984,571],[571,984,881],[990,706,974],[946,934,965],[970,980,66],[1113,1486,1554],[984,981,881],[881,987,974],[689,66,443],[1005,901,66],[983,985,955],[165,47,718],[987,990,974],[1370,986,262],[901,970,66],[51,901,1005],[981,987,881],[988,706,990],[942,945,965],[290,437,940],[64,899,52],[988,556,706],[941,934,946],[431,35,899],[996,989,984],[984,989,981],[981,989,987],[35,969,270],[1370,995,986],[986,995,984],[989,999,987],[987,992,990],[992,988,990],[962,967,437],[951,950,976],[979,35,270],[421,270,902],[998,995,1370],[987,999,992],[988,364,556],[969,985,983],[689,443,890],[995,1000,984],[219,958,108],[998,1000,995],[999,997,992],[914,953,772],[845,1336,745],[806,787,231],[1000,996,984],[989,996,999],[50,945,961],[443,421,69],[797,158,779],[1098,1463,434],[996,1009,999],[1001,988,992],[1001,364,988],[903,907,905],[26,759,973],[997,1001,992],[632,364,1001],[1346,26,973],[998,1008,1000],[1000,1009,996],[531,931,736],[252,949,621],[286,388,525],[1174,1008,998],[1009,1010,999],[999,1010,997],[1014,1001,997],[614,105,517],[958,945,108],[525,1004,242],[963,958,219],[233,426,304],[1000,1008,1009],[1010,1014,997],[1001,1006,632],[824,413,39],[642,636,622],[480,388,205],[28,757,797],[1014,1006,1001],[1006,410,632],[975,940,44],[1234,420,858],[54,832,46],[1009,1012,1010],[167,963,219],[41,481,107],[1017,1010,1012],[122,636,662],[939,525,388],[525,939,1004],[950,953,914],[829,1735,739],[1008,880,1015],[1008,1015,1009],[1263,639,675],[956,594,69],[795,90,1347],[1179,848,1013],[759,1007,973],[1009,1015,1012],[1012,1016,1017],[1017,1014,1010],[1019,1011,1006],[927,65,949],[649,316,595],[913,48,755],[976,950,298],[1003,1015,880],[1018,1006,1014],[1021,1018,1014],[444,692,1011],[451,1029,1063],[1185,851,1163],[29,27,381],[181,525,242],[1021,1014,1017],[1016,1021,1017],[1018,1019,1006],[1019,444,1011],[927,949,942],[451,393,492],[903,1154,907],[391,101,57],[94,765,58],[419,1016,1012],[949,252,942],[907,1020,909],[765,442,58],[94,406,908],[1007,94,908],[34,1012,1015],[34,419,1012],[419,1021,1016],[451,1057,393],[907,948,905],[1034,1073,1039],[1061,906,1619],[1068,960,1034],[471,1249,104],[112,1024,1042],[372,379,125],[341,543,165],[141,1094,170],[566,243,1061],[398,1034,1039],[325,317,1823],[1493,296,1724],[850,667,1043],[1054,297,1065],[1619,135,1074],[1061,243,906],[680,1024,821],[1103,96,1245],[1440,1123,1491],[1047,1025,1044],[672,454,1231],[1484,697,1530],[993,672,1231],[178,154,1088],[1044,1041,1066],[112,1062,1058],[1530,649,676],[178,1088,1040],[1046,328,954],[243,244,1022],[954,1194,1033],[1042,411,1032],[971,993,1056],[960,1093,1034],[1754,1338,232],[385,1064,412],[1057,1063,111],[748,1071,1447],[1530,697,695],[971,1056,1270],[977,1059,1211],[649,741,316],[1060,1452,1030],[353,354,1323],[695,768,649],[398,404,1034],[596,316,741],[1836,119,13],[1513,1115,1528],[883,1081,1652],[1039,1073,1048],[462,426,233],[31,1296,354],[1055,1047,1066],[1032,1054,1045],[1521,310,1224],[119,861,13],[1194,1234,288],[1109,1771,1070],[1166,1160,776],[1044,1035,1041],[1026,960,1064],[1050,1032,1045],[1049,1041,387],[115,1013,99],[1046,954,1033],[1321,920,971],[611,1058,345],[1048,1066,1049],[1023,1055,1073],[1029,451,1004],[118,1094,141],[1094,1080,170],[1042,1032,1050],[1026,1064,385],[15,16,1084],[1096,1079,61],[1075,1071,748],[325,1817,328],[909,1163,405],[1022,1234,809],[374,398,1051],[1082,72,81],[1023,1034,1093],[1817,1794,1067],[86,1445,1400],[1507,1535,1510],[1079,1096,1075],[568,1478,1104],[1070,178,1040],[1034,1023,1073],[776,1155,113],[1103,143,142],[1140,81,73],[1082,81,1140],[1060,1030,936],[1040,1086,1109],[370,1065,385],[61,72,1082],[1087,1096,1144],[1040,1088,1086],[1651,812,752],[1062,1050,1045],[187,154,178],[179,187,178],[1099,1344,1101],[1668,1058,807],[1073,1055,1048],[1099,1336,1344],[1283,943,1123],[1049,387,1051],[1024,680,449],[61,1082,1100],[967,749,1111],[1439,1037,88],[742,1505,142],[398,1039,1051],[1107,1336,1099],[1344,1542,1101],[142,1505,1103],[477,1093,447],[477,1023,1093],[471,142,1249],[1041,1035,394],[1328,568,1104],[61,1100,1096],[154,1092,1088],[112,1042,1050],[154,187,168],[435,235,45],[1075,1096,1087],[97,1075,748],[1049,1066,1041],[816,1067,1028],[846,982,1142],[1245,96,284],[1092,154,1080],[1057,451,1063],[387,377,1051],[1055,1025,1047],[1075,1087,1089],[1106,1108,856],[1068,1034,404],[1480,1545,868],[906,135,1619],[1074,991,1095],[570,566,1061],[1025,453,1044],[745,1336,1107],[1035,1057,416],[1092,1102,1129],[1074,135,991],[1105,745,1107],[447,1026,446],[394,387,1041],[73,81,940],[1118,1108,1106],[1210,1108,874],[243,1022,906],[412,1064,1068],[1280,611,603],[960,447,1093],[1051,1039,1049],[1040,1109,1070],[1471,1037,1439],[69,890,443],[1377,703,1374],[1092,1080,1102],[1096,1100,788],[1096,788,1144],[1114,967,1111],[446,1026,297],[70,1112,883],[453,393,1057],[1118,874,1108],[1054,370,1045],[1080,1094,1102],[1039,1048,1049],[428,753,845],[1047,1044,1066],[1044,453,1035],[1472,731,1512],[1126,1121,743],[743,1121,1110],[1032,297,1054],[1480,868,1216],[71,358,72],[1133,967,1114],[1105,1119,745],[1035,453,1057],[1026,447,960],[454,851,1190],[1030,1477,652],[589,816,1028],[1110,1121,1106],[1122,1118,1106],[1116,874,1118],[1048,1055,1066],[1194,1067,816],[744,278,747],[745,1120,845],[845,1052,428],[1105,1780,1119],[1065,297,385],[1098,1529,1463],[731,1060,936],[235,434,812],[1445,1525,1117],[1106,1121,1122],[1122,1127,1118],[1127,1116,1118],[1094,118,1732],[1119,1120,745],[1406,1124,1097],[435,117,235],[1462,1440,1037],[1126,1129,1121],[1088,1092,1129],[1133,73,967],[1120,1052,845],[812,434,752],[1441,1559,1200],[1131,588,413],[1054,1065,370],[235,1098,434],[1052,1142,428],[1737,428,1142],[1496,1446,1483],[1182,1083,1654],[1121,1129,1122],[1732,1116,1127],[768,457,649],[761,1114,249],[1064,960,1068],[1135,1481,1136],[1126,952,1129],[1087,588,1131],[1087,1144,588],[859,788,1139],[1140,1133,1132],[1133,1140,73],[1822,570,1061],[394,1035,416],[1055,1023,459],[80,264,485],[1119,1128,1120],[145,1658,567],[695,891,768],[1129,1102,1122],[1122,1102,1127],[1416,1077,1413],[297,1026,385],[1052,846,1142],[1445,1117,1400],[952,1086,1129],[1714,1089,1131],[1131,1089,1087],[1100,1139,788],[112,1050,1062],[1323,354,1296],[49,333,1141],[1142,982,1737],[79,1457,1091],[1088,1129,1086],[1102,1094,1127],[1127,1094,1732],[1100,1082,1139],[1082,1132,1139],[1082,1140,1132],[1150,1043,397],[60,1166,289],[1696,1146,1698],[1297,1202,1313],[409,1297,1313],[1234,1194,420],[1408,1391,1394],[424,1235,1243],[1203,309,1148],[485,477,447],[1152,1156,850],[1153,1149,1155],[1153,1157,1149],[1149,1152,1150],[1156,1154,1151],[776,1153,1155],[1157,1152,1149],[1217,1393,1208],[1156,1159,1154],[1153,1165,1157],[1165,1152,1157],[1159,1020,1154],[1161,1153,776],[1161,1165,1153],[1165,1158,1152],[1152,1158,1156],[1158,1159,1156],[1166,776,561],[1160,1161,776],[1161,1164,1165],[1161,1160,1164],[1158,1162,1159],[1159,1162,1020],[1270,1321,971],[1164,1170,1165],[1165,1162,1158],[1162,1163,1020],[588,788,925],[1166,1167,1160],[1165,1170,1162],[1160,1167,1164],[1162,1170,1163],[1179,1167,1166],[1167,1168,1164],[1164,1168,1170],[1168,1169,1170],[1234,1022,288],[802,39,866],[1179,1168,1167],[1169,1173,1170],[1170,1173,1163],[1173,1185,1163],[1360,1267,1364],[1169,1185,1173],[611,244,243],[900,1226,1376],[1260,1408,1350],[618,840,831],[1181,1183,1179],[1179,1184,1168],[1208,1274,1291],[1183,1184,1179],[1168,1184,1169],[1387,1395,1254],[1208,1204,1172],[1182,1197,1083],[1187,1083,1197],[1213,1183,1181],[1169,1207,1185],[135,857,991],[1013,1213,1181],[1189,1183,1213],[1183,1189,1184],[1169,1184,1207],[1207,1190,1185],[1180,1389,1288],[1191,1192,1640],[1640,1192,1090],[1090,1205,1654],[1654,1205,1182],[1188,1395,1187],[1126,743,1733],[788,859,925],[809,1234,1171],[1193,1197,1182],[1189,1199,1184],[1639,1191,1637],[1639,1212,1191],[1205,1193,1182],[1198,1187,1197],[1199,1207,1184],[332,1053,846],[1090,1192,1205],[117,1188,1187],[435,1188,117],[435,1206,1188],[1199,1189,1213],[420,816,1053],[1212,1215,1191],[117,1187,1198],[45,1206,435],[120,1132,1133],[874,1116,1210],[1191,1215,1192],[1193,1216,1197],[1216,1198,1197],[1199,1214,1207],[117,521,235],[1220,1311,1078],[1220,900,1311],[1653,1215,1212],[1192,1225,1205],[1205,1209,1193],[1209,1216,1193],[1389,1217,1172],[1207,1214,454],[171,557,1747],[1805,1078,1787],[1805,1219,1078],[1198,1216,868],[666,910,854],[1230,1231,1213],[1213,1231,1199],[1199,1231,1214],[1219,1220,1078],[1215,1221,1192],[1192,1221,1225],[1225,1228,1205],[1205,1228,1209],[1209,1228,1216],[1464,1325,1223],[1215,1227,1221],[1228,1480,1216],[1226,1653,1376],[1653,1249,1215],[1221,1240,1225],[1225,1240,1228],[839,761,840],[1238,1219,1805],[1238,1220,1219],[1232,1380,1375],[1226,1249,1653],[1221,1227,1240],[233,207,532],[110,1236,1230],[1248,1231,1230],[1231,454,1214],[1249,1227,1215],[1248,1056,1231],[489,959,944],[448,1240,284],[925,859,1242],[1805,1244,1238],[1252,1220,1238],[1252,921,1220],[1236,1251,1230],[1230,1251,1248],[1056,993,1231],[1031,1264,1263],[68,1186,157],[1227,1245,1240],[1103,1245,143],[1243,1235,612],[1252,95,921],[1249,1226,1237],[1390,1387,1254],[1120,384,830],[830,332,846],[1227,143,1245],[1315,1369,1358],[1356,1269,1386],[972,795,489],[1831,1224,310],[1250,1255,1251],[1251,1056,1248],[1256,1243,103],[658,358,175],[1620,1238,1244],[1620,1252,1238],[1506,95,1252],[104,1249,1237],[1249,143,1227],[1268,1419,1329],[634,806,231],[618,831,815],[924,1242,839],[1255,1270,1251],[1251,1270,1056],[866,925,1242],[103,29,1256],[424,1243,1256],[134,1651,752],[1250,917,1255],[1172,1204,1260],[1352,1036,1276],[1265,1201,1329],[804,1282,1259],[1259,1294,723],[335,1330,1305],[407,762,799],[875,856,1195],[32,158,344],[967,944,749],[372,125,42],[1175,1354,1261],[553,612,1235],[1259,1273,1294],[1294,1283,723],[757,78,158],[407,799,798],[901,51,52],[139,1386,1389],[1386,1269,1389],[1389,1269,1217],[1148,1590,1268],[1428,1449,1450],[804,1281,1282],[1273,1259,1282],[158,399,779],[771,407,798],[521,1098,235],[917,1312,1255],[1312,1270,1255],[1217,1269,1393],[1195,1108,634],[1110,1106,856],[1210,1691,1176],[27,1112,1145],[1296,27,1145],[1171,858,791],[704,1148,1290],[1430,1436,1437],[1282,1308,1273],[1300,943,1283],[1393,1355,1274],[720,1278,769],[1287,1059,1399],[1310,1388,1272],[1312,1321,1270],[851,1185,1190],[1296,1145,1304],[26,24,771],[51,910,631],[1329,1290,1268],[1290,1148,1268],[1298,1293,733],[1281,1293,1282],[1282,1293,1308],[1308,1299,1273],[1300,1283,1294],[1340,943,1300],[1340,1301,943],[407,754,762],[1287,1399,1295],[34,139,128],[1288,1172,1260],[120,1133,1114],[1306,1113,1511],[1464,1223,1292],[1299,1294,1273],[1299,1300,1294],[1286,1295,838],[1285,1247,1286],[1247,713,1286],[1201,1265,1390],[1378,1368,1357],[1482,1320,917],[917,1320,1312],[850,1156,1151],[588,39,413],[1324,1306,686],[789,1365,928],[1223,1326,1292],[1292,1326,1298],[869,1097,1311],[790,786,561],[1323,1304,932],[1323,1296,1304],[1317,1324,686],[1306,368,1113],[1325,1342,1223],[1326,1348,1298],[1293,1327,1308],[1308,1318,1299],[704,1290,1258],[1320,1321,1312],[761,120,1114],[1684,802,866],[1674,6,1727],[1316,1323,932],[1335,1337,1305],[1348,1327,1293],[1298,1348,1293],[1333,1300,1299],[1333,1343,1300],[1328,1301,1340],[1328,1314,1301],[838,1399,1319],[921,1237,900],[409,1391,1408],[1376,1653,677],[1281,804,1458],[1331,1324,1317],[1324,368,1306],[368,1338,1307],[1327,797,1308],[797,1345,1308],[1308,1345,1318],[1318,1333,1299],[1341,1147,1572],[923,1321,1320],[923,920,1321],[39,588,866],[1141,1323,1316],[1330,1335,1305],[1337,1335,1336],[1339,1332,1325],[1223,1342,1326],[1342,1348,1326],[1348,797,1327],[1345,1333,1318],[1343,1340,1300],[1419,1265,1329],[1347,1320,1584],[1535,1141,1316],[1078,1311,582],[1344,1335,1330],[753,1331,1337],[368,1324,1331],[753,368,1331],[1332,1485,1325],[1325,1485,1342],[787,1343,1333],[137,1328,1340],[973,1341,1479],[406,1147,1341],[1171,1234,858],[1141,1535,1322],[49,1141,1322],[1344,1336,1335],[973,908,1341],[766,1347,1584],[1347,923,1320],[781,49,1322],[368,232,1338],[787,1340,1343],[787,137,1340],[568,1346,973],[58,1147,406],[442,1334,1147],[58,442,1147],[442,766,1334],[90,923,1347],[428,368,753],[779,1333,1345],[825,787,1333],[137,1349,1328],[1328,1346,568],[908,406,1341],[924,866,1242],[1336,753,1337],[428,232,368],[1115,777,1098],[1348,28,797],[797,779,1345],[779,825,1333],[1007,908,973],[583,1351,880],[1365,1246,977],[1658,145,1710],[1310,796,1388],[718,245,165],[1302,1272,1254],[1174,1351,583],[1174,715,1351],[1358,1260,1204],[1374,1373,1276],[1377,1374,1276],[678,1362,1382],[1377,1276,254],[139,34,40],[1008,1174,583],[1396,1286,1319],[768,891,457],[1316,932,1535],[1289,1371,1360],[182,736,864],[1355,1364,1274],[860,1367,1354],[1362,1222,1382],[1376,869,1311],[1590,1411,198],[1232,1375,877],[1394,1295,1286],[880,1356,1386],[880,1351,1356],[1211,1059,1287],[197,678,1405],[880,1386,1003],[1368,1253,1357],[1357,1253,1036],[715,1289,1364],[1354,1367,703],[1383,877,1375],[1266,1288,1260],[1373,1374,703],[1372,1289,1174],[1303,1366,1378],[1351,715,1355],[1665,1666,624],[1309,1357,1036],[900,1237,1226],[1174,1289,715],[1337,1331,1317],[1360,1303,1359],[1267,1354,1175],[1241,1284,1414],[1377,254,929],[1385,855,836],[1396,1319,1436],[1361,1366,1303],[1381,1368,1378],[1313,1211,1391],[1368,1385,1363],[813,82,861],[1058,1280,807],[893,519,892],[1359,1303,860],[1382,1350,1247],[1371,1303,1360],[1267,1175,1271],[769,1286,1396],[712,1837,82],[1366,1385,1381],[1365,796,1310],[1003,1386,40],[780,1371,1370],[561,862,790],[1284,1380,864],[1449,1428,177],[611,1280,1058],[1284,1375,1380],[926,506,1241],[1305,1337,1317],[309,1203,208],[1388,1201,1390],[1309,1036,1352],[1377,929,1411],[1399,1059,1257],[1112,70,1145],[289,1166,561],[1288,1389,1172],[1362,37,1180],[713,1394,1286],[1355,1393,1269],[1401,1423,941],[1274,1271,1384],[860,1378,1367],[715,1364,1355],[677,1406,869],[1297,1358,1202],[1388,1258,1329],[1180,1288,1266],[1008,583,880],[1524,1425,1463],[1390,1403,1387],[1278,1379,1247],[1278,1247,1285],[964,1278,1262],[1358,1369,1202],[1715,1699,1726],[926,1241,1414],[1341,1572,1479],[926,930,916],[1397,51,781],[409,1358,1297],[1236,436,301],[1376,677,869],[1351,1355,1356],[758,1534,1523],[1378,1357,1367],[977,1211,1365],[1135,1136,854],[1394,1391,1295],[1266,1260,1222],[1365,1302,1246],[1232,877,844],[736,930,864],[1408,1358,409],[1508,817,1523],[1381,1385,1368],[718,854,910],[854,718,1135],[1382,1222,1350],[1391,1211,1287],[1391,1287,1295],[1257,1651,134],[1414,1284,864],[1291,1369,1315],[1202,928,1313],[86,1400,1413],[1413,1200,86],[1263,1625,1031],[1413,1400,1404],[1002,1664,1834],[930,926,1414],[1399,1257,134],[520,316,596],[1393,1274,1208],[1657,1655,1712],[1407,1404,1400],[1404,1410,1413],[1649,1229,1406],[1362,1266,1222],[1384,1271,1175],[900,1376,1311],[1274,1384,1291],[1291,1384,1431],[1433,1396,1436],[1267,1359,1354],[309,1353,703],[838,1319,1286],[1407,1410,1404],[441,1518,773],[1241,123,1428],[1622,1521,1224],[1217,1208,1172],[1130,793,1076],[425,1409,1481],[1481,1409,1533],[1303,1378,860],[1350,1408,1394],[1246,1651,977],[1289,1360,1364],[1727,1694,1623],[1417,1407,1533],[1417,1410,1407],[1406,1650,1649],[1319,134,1437],[1414,864,930],[1406,1229,1124],[1354,1359,860],[1433,769,1396],[1417,1533,1409],[1416,1413,1410],[1415,1416,1410],[95,1237,921],[1392,1254,1395],[1360,1359,1267],[1258,1290,1329],[1180,128,1389],[1420,1409,425],[1417,1418,1410],[1418,1415,1410],[1422,1077,1416],[1247,1350,1394],[37,43,1180],[1204,1315,1358],[1428,1383,1375],[1356,1355,1269],[1409,1418,1417],[1302,45,1246],[1421,1416,1415],[1421,1422,1416],[1422,1494,1077],[957,720,938],[1423,1409,1420],[1423,1418,1409],[752,434,1438],[1260,1358,1408],[1363,1385,785],[1423,1426,1418],[1426,1424,1418],[1229,1649,1124],[1222,1260,1350],[1508,1523,1137],[1278,1285,769],[1482,917,144],[1418,1424,1415],[1425,1422,1421],[1425,1524,1422],[1272,1388,1390],[1391,409,1313],[1378,1366,1381],[1371,483,1361],[720,1262,1278],[29,103,159],[1271,1364,1267],[1424,1427,1415],[1537,1522,1518],[134,752,1438],[1420,934,941],[1428,1375,1284],[1277,1224,1831],[1362,1180,1266],[1401,1426,1423],[1577,1369,1291],[268,483,262],[1383,1450,1456],[1384,1175,1431],[1430,1415,1427],[1430,1421,1415],[1430,1425,1421],[1379,1382,1247],[1252,1553,1429],[1206,1392,1395],[1433,1430,1427],[309,208,1353],[1272,1390,1254],[1361,483,1366],[1523,817,808],[1302,1254,1392],[1371,1361,1303],[1426,1435,1424],[1435,1433,1424],[1433,1427,1424],[720,769,1433],[796,1258,1388],[1590,1419,1268],[1289,1372,1371],[1305,1317,1509],[998,1372,1174],[40,1386,139],[1261,1354,703],[1364,1271,1274],[134,1438,1437],[1436,1319,1437],[1317,686,1509],[1484,932,1304],[1434,1432,1509],[1420,65,934],[931,930,736],[1367,1357,1309],[1372,1370,1371],[1204,1208,1315],[1426,938,1435],[1368,1363,1253],[1207,454,1190],[1302,1310,1272],[309,1377,390],[390,1377,1411],[1370,1372,998],[1411,1590,1148],[720,1433,1435],[1450,1383,1428],[1379,678,1382],[1405,678,1379],[1208,1291,1315],[1399,134,1319],[1367,1309,1373],[1373,1352,1276],[596,741,593],[553,1264,612],[1433,1436,1430],[1437,1438,1430],[964,1405,1379],[1373,1309,1352],[1265,1403,1390],[1233,1618,1434],[1365,1310,1302],[789,796,1365],[720,1435,938],[128,139,1389],[1466,933,1525],[1191,1640,1637],[1314,1442,943],[1141,353,1323],[1489,1138,1474],[1462,1477,1440],[1474,1138,1488],[1442,1314,1443],[1446,1030,1546],[1484,1145,697],[1549,1443,1445],[1470,1572,1468],[1397,1239,1507],[1649,1825,1824],[1259,1440,1477],[1451,1450,1449],[978,1446,652],[1454,1456,1451],[1451,1456,1450],[341,1507,595],[933,1547,79],[804,1452,1060],[1454,1455,1456],[1398,1460,1454],[1455,877,1456],[1277,1831,1825],[804,1060,1458],[1339,1459,1595],[1314,1104,1443],[933,1448,1547],[147,1460,1398],[1460,1461,1454],[1454,1461,1455],[1292,1125,1464],[417,1531,1480],[1459,1339,1325],[811,1756,335],[1512,936,1490],[777,1529,1098],[147,1475,1460],[1464,253,1459],[836,855,482],[1487,1486,1307],[1104,1501,1443],[1439,1200,1532],[1475,1469,1460],[1460,1469,1461],[1325,1464,1459],[1277,1825,1649],[1532,1200,1077],[844,877,1455],[1572,933,1466],[1479,568,973],[1509,335,1305],[1339,1595,1759],[1469,1476,1461],[1461,1476,1455],[1104,1470,1468],[1464,1472,253],[1117,1091,1407],[1756,1542,335],[1206,1395,1188],[335,1542,1330],[835,844,1455],[1471,1598,1462],[1491,1442,1441],[835,1455,1476],[1441,1442,1443],[1489,1474,1473],[1251,1236,1250],[1030,1452,1477],[1598,1439,1532],[978,1598,1492],[1426,1401,938],[1448,1584,1482],[1724,1497,1475],[1475,1497,1469],[1484,1535,932],[1307,1486,1113],[1487,696,1495],[1037,1491,1441],[1030,1446,936],[1453,1487,1495],[696,1467,1495],[1138,1489,1483],[1497,1143,1469],[1469,1143,1476],[652,1598,978],[850,1043,1150],[1482,1584,1320],[1731,98,1697],[1113,1554,1573],[1524,1532,1494],[1496,1467,696],[1452,1259,1477],[296,1504,1497],[1504,1143,1497],[1143,1499,1476],[718,910,1498],[868,1540,1528],[817,1253,810],[1490,696,1487],[1440,1491,1037],[1510,676,595],[1488,1492,1517],[781,1239,1397],[1467,1519,1503],[1500,1307,1759],[1149,397,452],[1504,1514,1143],[1514,842,1143],[1125,733,1458],[1503,1531,1555],[1276,1036,1137],[1440,723,1123],[1036,1508,1137],[817,1508,1253],[103,883,1112],[1458,731,1472],[1512,1490,1487],[1487,1453,1486],[1138,978,1488],[1036,1253,1508],[1398,149,147],[1474,1517,1513],[1125,1458,1472],[1486,1453,1554],[1518,1534,758],[345,1058,1062],[928,1202,1369],[1554,1541,1505],[1464,1125,1472],[1504,764,1514],[304,426,573],[1505,742,1506],[1479,1572,1478],[1519,1483,1489],[833,716,1069],[1522,1534,1518],[1115,1513,777],[811,335,1432],[1591,1533,1407],[777,1517,1529],[1513,1517,777],[1498,910,1397],[1069,1539,833],[833,1539,1537],[1522,1551,1534],[1534,1551,1523],[1538,1137,1523],[910,51,1397],[1367,1373,703],[1466,1525,1468],[157,1186,1832],[1429,1511,1506],[1573,1505,1506],[1259,1452,804],[1503,1495,1467],[262,483,780],[1572,1466,1468],[1536,1556,716],[716,1556,1069],[1544,1523,1551],[1544,1538,1523],[1511,1573,1506],[933,1572,1448],[1543,1537,1539],[1537,1543,1522],[1091,933,79],[1519,1540,1545],[1549,1445,86],[1069,1548,1539],[1548,1543,1539],[1543,1551,1522],[1500,1487,1307],[68,784,1186],[1552,1544,1551],[1550,1538,1544],[1538,1550,1137],[1519,1473,1540],[1547,1448,1482],[1560,1563,1536],[1536,1563,1556],[1556,1548,1069],[1543,1558,1551],[1137,1550,1276],[1453,1495,1555],[1561,1543,1548],[1543,1561,1558],[1558,1566,1551],[1552,1550,1544],[1569,1557,1550],[1557,1276,1550],[1276,1557,254],[1531,1503,1480],[1535,1530,1510],[1545,1503,1519],[1547,1482,79],[1566,1552,1551],[1552,1569,1550],[1503,1545,1480],[703,1377,309],[1625,675,756],[1037,1441,88],[929,254,1557],[849,1567,1560],[1556,1564,1548],[1492,1529,1517],[1252,1429,1506],[1553,1027,1429],[1453,1555,1541],[1554,1453,1541],[1233,686,1553],[1328,1104,1314],[1564,1576,1548],[1548,1576,1561],[1557,1562,929],[1520,112,1668],[1483,1446,1138],[778,1570,1567],[1563,1564,1556],[1561,1565,1558],[1565,1566,1558],[1569,1552,1566],[1562,1557,1569],[1530,1535,1484],[1387,1402,1395],[1621,1634,1387],[1567,1568,1560],[1560,1568,1563],[1571,1569,1566],[1344,1330,1542],[1577,1431,1353],[1638,233,304],[1524,1463,1529],[1353,1431,1175],[1077,1200,1413],[1478,1470,1104],[1568,1575,1563],[1563,1575,1564],[1575,1576,1564],[1561,1576,1565],[1565,1574,1566],[1562,1515,929],[1555,96,1541],[1531,417,96],[1555,1531,96],[1246,45,1651],[208,1577,1353],[1586,1568,1567],[1574,1571,1566],[1571,1583,1569],[1474,1513,1528],[1239,1322,1535],[1478,1572,1470],[1570,1586,1567],[1488,1517,1474],[8,1833,1837],[1123,1442,1491],[1589,1568,1586],[1576,1594,1565],[1565,1594,1574],[1562,198,1515],[1559,1441,1549],[1441,1443,1549],[1135,425,1481],[1239,1535,1507],[1595,1487,1500],[1570,1585,1586],[1589,1578,1568],[1568,1578,1575],[1579,1569,1583],[1177,1577,208],[115,1236,110],[1578,1593,1575],[1587,1576,1575],[1576,1581,1594],[1571,1582,1583],[1588,1579,1583],[1579,1580,1562],[1569,1579,1562],[1562,1580,198],[1027,1511,1429],[1589,1593,1578],[1587,1581,1576],[1582,1574,1594],[1574,1582,1571],[1575,1593,1587],[1583,1582,1588],[1580,1590,198],[1587,1593,1581],[1505,1541,96],[1369,1577,1177],[1573,1554,1505],[1479,1478,568],[1585,1589,1586],[1369,1177,704],[766,1584,1334],[977,1257,1059],[1091,1591,1407],[1591,1091,1457],[1585,1604,1589],[1581,1592,1594],[1602,1582,1594],[1582,1608,1588],[1608,1579,1588],[1579,1597,1580],[1419,1590,1580],[1597,1419,1580],[1431,1577,1291],[1589,1604,1593],[1601,1596,1593],[1593,1596,1581],[1306,1511,1027],[1511,1113,1573],[1786,1412,1585],[1412,1604,1585],[1581,1596,1592],[1592,1602,1594],[1608,1599,1579],[1599,1611,1579],[1579,1611,1597],[1512,1487,253],[1519,1489,1473],[1545,1540,868],[1083,1187,1402],[1117,1407,1400],[1292,733,1125],[284,1240,1245],[1604,1600,1593],[1600,1601,1593],[1582,1607,1608],[789,1369,704],[1467,1483,1519],[1601,1613,1596],[1596,1613,1592],[1602,1607,1582],[1620,1553,1252],[1601,1605,1613],[1592,1613,1602],[1602,1606,1607],[1608,1609,1599],[1599,1609,1611],[1603,1597,1611],[1265,1419,1597],[1603,1265,1597],[1392,1206,45],[928,1369,789],[1474,1528,1473],[1104,1468,1501],[1412,1521,1604],[1613,1631,1602],[1607,1610,1608],[1608,1610,1609],[1476,863,835],[1495,1503,1555],[1498,1397,718],[1520,1668,7],[1604,1615,1600],[1605,1601,1600],[1602,1631,1606],[1606,1610,1607],[1759,1595,1500],[1292,1298,733],[1615,1604,1521],[1609,1603,1611],[652,1462,1598],[1468,1525,1445],[1443,1501,1445],[1134,1723,150],[1521,1622,1615],[1615,1616,1600],[1616,1605,1600],[1605,1616,1612],[1605,1612,1613],[1612,1617,1613],[1613,1617,1631],[1606,1614,1610],[1265,1603,1403],[448,417,1480],[1595,253,1487],[1501,1468,1445],[1383,1456,877],[1490,1496,696],[1610,1627,1609],[1627,1621,1609],[1591,1481,1533],[1598,1471,1439],[1353,1261,703],[1606,1631,1614],[1609,1621,1403],[1532,1077,1494],[1528,1115,513],[1546,652,1446],[1211,928,1365],[1540,1473,1528],[1078,1502,1787],[1425,1430,1438],[1617,1630,1631],[959,749,944],[566,570,603],[1716,310,1521],[775,452,397],[1615,1636,1616],[1616,1636,1612],[1610,1632,1627],[789,704,1258],[1457,1481,1591],[1769,1756,811],[207,1629,722],[1629,1625,722],[1224,1277,1622],[1622,1636,1615],[1636,1646,1612],[1612,1630,1617],[1631,1626,1614],[1614,1632,1610],[1506,104,95],[1481,1457,1136],[1123,943,1442],[936,1446,1496],[1499,863,1476],[1629,1031,1625],[1233,1509,686],[1633,1634,1621],[1621,1387,1403],[1472,1512,253],[1177,208,704],[1277,1636,1622],[1626,1632,1614],[1627,1633,1621],[936,1496,1490],[185,1454,1451],[731,936,1512],[1638,1635,207],[553,1263,1264],[1653,1212,1639],[1633,1627,1632],[1633,1387,1634],[1458,1060,731],[368,1307,1113],[1264,1031,1629],[1152,850,1150],[1277,1644,1636],[1646,1637,1612],[1637,1630,1612],[1647,1631,1630],[1647,1626,1631],[1422,1524,1494],[1030,652,1546],[1635,1629,207],[1635,1264,1629],[1639,1646,1636],[1637,1640,1630],[1641,1632,1626],[1632,1642,1633],[1633,1643,1387],[842,1499,1143],[865,863,1499],[1516,978,1492],[67,1130,784],[1103,1505,96],[88,1441,1200],[1644,1639,1636],[1640,1647,1630],[1647,1641,1626],[1633,1648,1643],[1492,1532,1524],[1488,1516,1492],[1037,1471,1462],[612,1264,1635],[1502,1078,1124],[1641,1642,1632],[1648,1633,1642],[1528,513,868],[1492,1598,1532],[1095,991,760],[679,157,1664],[760,1128,1785],[1277,1650,1644],[320,1022,244],[1559,1549,86],[1676,1520,7],[1488,978,1516],[1095,760,1785],[1128,384,1120],[304,312,1638],[1081,1638,312],[1081,1635,1638],[103,612,1635],[652,1477,1462],[1650,1645,1644],[1645,1639,1644],[1639,1637,1646],[1640,1090,1647],[1654,1641,1647],[1654,1642,1641],[1654,1648,1642],[1643,1402,1387],[1432,335,1509],[384,1128,760],[1652,312,304],[103,1243,612],[1277,1649,1650],[1090,1654,1647],[1643,1648,1402],[1134,324,1675],[679,68,157],[1652,1081,312],[1136,301,803],[1653,1639,1645],[723,1440,1259],[803,854,1136],[104,1506,742],[1112,159,103],[1654,1083,1648],[977,1651,1257],[1397,1507,718],[1081,103,1635],[1650,677,1645],[1083,1402,1648],[1706,1655,1671],[1624,1704,1711],[767,2,1],[608,794,294],[1678,1683,1686],[767,1682,2],[1669,1692,1675],[296,1681,764],[1671,1656,1672],[17,1673,1679],[1706,1671,1673],[1662,1674,1699],[1655,1657,1656],[418,84,915],[1526,1514,764],[1658,1657,567],[870,1695,764],[813,1697,98],[1659,821,5],[60,1013,848],[1013,110,1213],[661,1038,1692],[1660,1703,17],[1693,1673,17],[1663,1715,1743],[1013,115,110],[344,1733,32],[1670,1663,1743],[1670,1743,1738],[1677,1670,1738],[1661,4,3],[1084,1683,1678],[1728,793,1130],[1683,1767,1196],[1677,1738,1196],[1279,1786,853],[294,1038,608],[1279,1689,1786],[870,18,1708],[870,1680,1695],[1705,10,1670],[1084,1767,1683],[1196,1738,1686],[1750,870,1681],[1750,18,870],[1773,1703,1660],[1135,47,425],[150,323,1134],[1707,1655,1706],[1741,344,1687],[1685,1691,1684],[1684,1691,802],[1672,1656,0],[1038,124,608],[1671,1672,1690],[1628,1218,1767],[1686,1275,1667],[1493,1750,1681],[1773,18,1750],[1773,1660,18],[1679,1671,16],[1735,1706,1673],[1667,1678,1686],[1688,1658,1],[1656,1688,0],[1293,1281,1458],[1698,1678,1667],[1696,1130,1722],[1698,1667,1696],[1715,1662,1699],[1692,1038,294],[1682,767,357],[1669,661,1692],[802,1702,824],[1028,1067,1784],[822,1624,778],[119,813,861],[1218,1670,1677],[1703,1693,17],[1658,1710,1],[750,1730,1729],[1701,750,1729],[1693,1735,1673],[1731,1694,98],[1691,1702,802],[783,1729,1719],[1680,870,1708],[1707,1709,1655],[533,756,675],[1691,1210,1702],[11,1705,1670],[1767,1218,1196],[1218,1677,1196],[1664,1716,1721],[1729,1725,1719],[1729,1072,1725],[1210,1116,1702],[1702,1720,824],[1682,1661,2],[1713,1719,1721],[1716,1786,1713],[1730,1722,1072],[294,1717,1811],[1692,294,1666],[1659,680,821],[824,1720,1714],[1726,1731,1718],[345,1062,1045],[1738,1743,1275],[1075,1089,1071],[783,1719,1689],[1275,684,1728],[1692,1666,1665],[1675,1692,1665],[294,1811,1666],[1716,1664,310],[1678,1698,1700],[6,9,1727],[676,649,595],[381,31,361],[1723,1804,1772],[1727,9,1694],[1720,1089,1714],[1786,1716,1412],[1683,1196,1686],[1718,1697,1085],[1116,1739,1702],[1739,1734,1720],[1702,1739,1720],[1089,1720,1734],[509,748,1745],[1743,1715,1726],[1717,294,794],[1116,1732,1739],[1718,1731,1697],[1696,1667,1130],[1134,1665,1723],[1694,712,98],[101,1687,102],[391,1736,101],[662,636,642],[1734,1447,1089],[1089,1447,1071],[436,99,493],[1689,1279,783],[1485,1465,1342],[1736,1687,101],[344,1741,1733],[1741,1742,1733],[1735,829,1706],[829,1707,1706],[1485,1332,1465],[952,1126,1742],[1747,1447,1734],[879,892,645],[1730,1146,1696],[829,1709,1707],[1709,1712,1655],[118,1739,1732],[1332,1744,1465],[1687,1749,1741],[1741,1758,1742],[679,1072,68],[1072,1722,68],[118,1747,1739],[1747,1734,1739],[1465,1744,1736],[1736,1740,1687],[1704,1701,783],[1665,624,1723],[1722,1130,67],[1025,1055,467],[1444,14,1701],[558,522,530],[1657,1658,1688],[1339,1746,1332],[1332,1748,1744],[1687,1740,1749],[1741,1749,1758],[1109,952,1742],[1747,118,141],[1671,1690,1628],[1671,1628,16],[1657,1688,1656],[1745,748,1447],[357,767,1710],[1746,1748,1332],[1146,1700,1698],[1759,1307,1338],[1239,781,1322],[1745,1447,1747],[522,1745,1747],[316,717,595],[148,1493,1724],[1758,1109,1742],[1725,1072,679],[726,719,1661],[1695,1680,1526],[1772,1750,1493],[148,1772,1493],[1542,1751,1101],[952,1109,1086],[1744,1752,1736],[1736,1752,1740],[1753,1755,1740],[391,1342,1736],[821,112,1520],[557,530,1747],[530,522,1747],[994,879,645],[1542,1756,1751],[1813,1693,1703],[1746,1754,1748],[1748,1764,1744],[1752,1757,1740],[1740,1757,1753],[1749,1740,1755],[1755,1763,1749],[1763,1758,1749],[1275,1743,684],[1813,1735,1693],[1107,1099,1101],[1723,624,1804],[1403,1603,1609],[1748,1754,1764],[1744,1757,1752],[1760,1109,1758],[1465,1736,1342],[436,115,99],[1686,1738,1275],[1751,1766,1101],[1759,1754,1746],[1755,1753,1763],[1570,1279,853],[1701,1146,750],[1655,1656,1671],[11,1670,1218],[1761,1751,1756],[1766,1107,1101],[1726,1623,1731],[1711,1704,1279],[67,784,68],[558,530,545],[1620,1618,1233],[1769,1761,1756],[102,1687,344],[1338,1754,1759],[1754,232,1764],[1744,1765,1757],[1757,1763,1753],[1762,1760,1758],[1760,1771,1109],[1339,1759,1746],[1675,1665,1134],[1730,1696,1722],[1774,1751,1761],[1766,1780,1107],[1780,1105,1107],[1764,1765,1744],[1763,1762,1758],[1772,1773,1750],[1811,1813,1703],[1434,1769,1432],[1780,1766,1751],[232,1781,1764],[1711,1279,1570],[1688,1,0],[1774,1780,1751],[1764,1781,1765],[1765,1768,1757],[1757,1768,1763],[1777,1782,1760],[1762,1777,1760],[1769,1774,1761],[1763,1777,1762],[1760,1782,1771],[232,1737,1781],[1768,1776,1763],[272,255,774],[1669,994,661],[1618,1769,1434],[1765,589,1768],[1770,1777,1763],[1701,1729,783],[1783,1774,1769],[1789,1780,1774],[589,1775,1768],[1776,1770,1763],[1782,1778,1771],[1771,1778,1070],[624,1703,1773],[624,1811,1703],[1620,1244,1618],[1779,1769,1618],[1779,1783,1769],[739,1735,1813],[1775,1776,1768],[1790,1777,1770],[1777,1778,1782],[1725,679,1721],[733,1293,1458],[1802,1618,1244],[1802,1779,1618],[1788,1783,1779],[1789,1774,1783],[1796,1780,1789],[1796,1119,1780],[1823,1817,325],[1699,1727,1623],[750,1146,1730],[1497,1724,296],[1128,1119,1796],[61,62,71],[1131,413,824],[1114,1111,249],[1784,1776,1775],[1123,723,1283],[1791,1788,1779],[1788,1789,1783],[1095,1797,1074],[1028,1784,1775],[1784,1770,1776],[1777,1790,1778],[1793,1797,1095],[1797,1800,1074],[1798,1790,1770],[1805,1802,1244],[1802,1791,1779],[1792,1789,1788],[1793,1785,1128],[1793,1095,1785],[1074,1800,1619],[741,457,593],[1798,1770,1784],[1798,1794,1790],[1786,1689,1713],[684,1726,1718],[1728,1085,793],[1795,1787,1502],[1806,1802,1805],[1819,1788,1791],[1067,1798,1784],[1790,1794,1778],[1795,1502,1124],[1801,1805,1787],[1807,1791,1802],[1807,1819,1791],[1819,1792,1788],[1799,1128,1796],[994,645,661],[684,1085,1728],[684,1718,1085],[1699,1623,1726],[1801,1787,1795],[1808,1789,1792],[1808,1796,1789],[1799,1793,1128],[1809,1797,1793],[1809,1803,1797],[1803,1800,1797],[1067,1794,1798],[774,255,1778],[1673,1671,1679],[879,1669,888],[19,1807,1802],[1810,1619,1800],[879,994,1669],[1794,774,1778],[1723,1772,148],[1804,1773,1772],[1814,1795,1124],[1649,1814,1124],[1814,1801,1795],[1812,1806,1805],[19,1802,1806],[19,1819,1807],[1810,1800,1803],[1804,624,1773],[1714,1131,824],[1801,1812,1805],[1812,19,1806],[1808,1792,1819],[1799,1809,1793],[1821,1810,1803],[1717,739,1813],[1061,1619,1822],[1794,1817,774],[79,1482,144],[1815,1801,1814],[23,1819,19],[589,1028,1775],[1817,1823,774],[1689,1719,1713],[1824,1814,1649],[1827,1818,1801],[1818,1812,1801],[1818,19,1812],[1818,20,19],[1816,1809,1799],[1821,1803,1809],[1822,1619,1810],[124,708,608],[1663,10,1715],[1815,1827,1801],[1820,1808,1819],[23,1820,1819],[603,1810,1821],[603,1822,1810],[1085,1697,793],[1628,1690,11],[1527,1704,1624],[1730,1072,1729],[1526,1444,1704],[1526,1680,1444],[1704,1444,1701],[1816,1821,1809],[1722,67,68],[317,272,1823],[1716,1713,1721],[16,1628,1767],[1527,1526,1704],[1824,1826,1814],[1814,1826,1815],[1818,21,20],[1835,1808,1820],[603,570,1822],[226,1070,1778],[1013,1181,1179],[1721,679,1664],[1717,1813,1811],[1828,1827,1815],[22,1820,23],[22,1835,1820],[1830,603,1821],[719,1659,5],[643,567,1657],[1717,794,739],[1825,1826,1824],[1828,1815,1826],[1829,21,1818],[1808,1835,13],[4,719,5],[10,1662,1715],[1828,1832,1827],[1832,1818,1827],[12,1833,1816],[1833,1821,1816],[1833,1830,1821],[14,1146,1701],[1186,1829,1818],[1280,603,1830],[14,1700,1146],[1667,1728,1130],[1825,1834,1826],[1834,1828,1826],[1832,1186,1818],[1836,13,1835],[1624,1711,1570],[778,1624,1570],[1719,1725,1721],[1002,1825,1831],[1002,1834,1825],[1834,1832,1828],[1186,21,1829],[1836,1835,22],[1837,1833,12],[1280,1830,1833],[1667,1275,1728],[16,1767,1084],[589,1765,1838],[1765,1781,1838],[1781,1737,1838],[1737,982,1838],[982,1053,1838],[1053,816,1838],[816,589,1838]]\n","import angleNormals from \"angle-normals\";\nimport { mat4, vec3 } from \"gl-matrix\";\nimport { Regl } from \"regl\";\nimport { standardProjection } from \"./shadersShared\";\n\ntype DrawableProps = {\n  translation?: vec3;\n  rotation?: vec3;\n  scale?: vec3;\n};\n\nexport class Mesh {\n  positions: number[][];\n  elements: number[][];\n  normals: number[][];\n\n  constructor(\n    positions: number[][],\n    elements: number[][],\n    normals?: number[][]\n  ) {\n    this.positions = positions;\n    this.elements = elements;\n    this.normals = normals || angleNormals(elements, positions);\n  }\n\n  drawable = (regl: Regl) =>\n    regl({\n      primitive: \"triangles\",\n      elements: this.elements,\n      uniforms: {\n        model: (_, { translation, rotation, scale }: DrawableProps) => {\n          const m = mat4.identity(mat4.create());\n          if (translation) {\n            mat4.translate(m, m, translation);\n          }\n          if (rotation) {\n            mat4.rotateX(m, m, rotation[0]);\n            mat4.rotateY(m, m, rotation[1]);\n            mat4.rotateZ(m, m, rotation[2]);\n          }\n          if (scale) {\n            mat4.scale(m, m, scale);\n          }\n          return m;\n        },\n        projection: standardProjection,\n      },\n      attributes: {\n        position: this.positions,\n        normal: this.normals,\n      },\n      cull: {\n        enable: true,\n      },\n    });\n}\n","'use strict'\n\nmodule.exports = angleNormals\n\nfunction hypot(x, y, z) {\n  return Math.sqrt(Math.pow(x,2) + Math.pow(y,2) + Math.pow(z,2))\n}\n\nfunction weight(s, r, a) {\n  return Math.atan2(r, (s - a))\n}\n\nfunction mulAdd(dest, s, x, y, z) {\n  dest[0] += s * x\n  dest[1] += s * y\n  dest[2] += s * z\n}\n\nfunction angleNormals(cells, positions) {\n  var numVerts = positions.length\n  var numCells = cells.length\n\n  //Allocate normal array\n  var normals = new Array(numVerts)\n  for(var i=0; i<numVerts; ++i) {\n    normals[i] = [0,0,0]\n  }\n\n  //Scan cells, and\n  for(var i=0; i<numCells; ++i) {\n    var cell = cells[i]\n    var a = positions[cell[0]]\n    var b = positions[cell[1]]\n    var c = positions[cell[2]]\n\n    var abx = a[0] - b[0]\n    var aby = a[1] - b[1]\n    var abz = a[2] - b[2]\n    var ab = hypot(abx, aby, abz)\n\n    var bcx = b[0] - c[0]\n    var bcy = b[1] - c[1]\n    var bcz = b[2] - c[2]\n    var bc = hypot(bcx, bcy, bcz)\n\n    var cax = c[0] - a[0]\n    var cay = c[1] - a[1]\n    var caz = c[2] - a[2]\n    var ca = hypot(cax, cay, caz)\n\n    if(Math.min(ab, bc, ca) < 1e-6) {\n      continue\n    }\n\n    var s = 0.5 * (ab + bc + ca)\n    var r = Math.sqrt((s - ab)*(s - bc)*(s - ca)/s)\n\n    var nx = aby * bcz - abz * bcy\n    var ny = abz * bcx - abx * bcz\n    var nz = abx * bcy - aby * bcx\n    var nl = hypot(nx, ny, nz)\n    nx /= nl\n    ny /= nl\n    nz /= nl\n\n    mulAdd(normals[cell[0]], weight(s, r, bc), nx, ny, nz)\n    mulAdd(normals[cell[1]], weight(s, r, ca), nx, ny, nz)\n    mulAdd(normals[cell[2]], weight(s, r, ab), nx, ny, nz)\n  }\n\n  //Normalize all the normals\n  for(var i=0; i<numVerts; ++i) {\n    var n = normals[i]\n    var l = Math.sqrt(\n      Math.pow(n[0], 2) +\n      Math.pow(n[1], 2) +\n      Math.pow(n[2], 2))\n    if(l < 1e-8) {\n      n[0] = 1\n      n[1] = 0\n      n[2] = 0\n      continue\n    }\n    n[0] /= l\n    n[1] /= l\n    n[2] /= l\n  }\n\n  return normals\n}\n","precision mediump float;\n\nattribute vec3 position;\nuniform mat4 model, view, projection;\n\nvoid main() {\n    gl_Position = projection * view * model * vec4(position, 1.0);\n}\n","precision mediump float;\n\nvoid main() {\n    gl_FragColor = 0.6 * vec4(\n        0.65,\n        0.45,\n        0.85,\n        1.0\n    );\n}\n","import { readFileSync } from \"fs\";\nimport { mat4 } from \"gl-matrix\";\nimport bunny from \"bunny\";\n\nimport { Procedure } from \"~src/common/shaderView/shaderView.component\";\nimport { ShaderDemo } from \"../shadersList\";\nimport { Mesh } from \"../mesh\";\n\nimport vertexShader from \"~src/assets/shaders/lighting2.vert\";\nimport fragmentShader from \"~src/assets/shaders/lighting2.frag\";\nconst markdown = readFileSync(\"src/assets/shaders/lighting2.md\", \"utf-8\");\n\nconst procedure: Procedure = (regl) => {\n  const drawBunny = new Mesh(bunny.positions, bunny.cells).drawable(regl);\n  const drawMain = regl({\n    vert: vertexShader,\n    frag: fragmentShader,\n    uniforms: {\n      view: mat4.lookAt(mat4.create(), [0, 5, 20], [0, 5, 0], [0, 1, 0]),\n    },\n  });\n\n  regl.frame(({ tick }) => {\n    regl.clear({ depth: 1, color: [0, 0, 0, 1] });\n    drawMain(() =>\n      drawBunny({\n        rotation: [0.0, (tick * Math.PI) / 800.0, 0.0],\n      })\n    );\n  });\n};\n\nconst demo: ShaderDemo = {\n  procedure,\n  code: [\n    { language: \"markdown\", code: markdown },\n    { language: \"glsl\", code: vertexShader },\n    { language: \"glsl\", code: fragmentShader },\n  ],\n};\n\nexport default demo;\n","precision mediump float;\n\nuniform mat4 model, view, projection;\nattribute vec3 position, normal;\nvarying vec3 frag_normal;\n\nvoid main() {\n    frag_normal = (view * model * vec4(normal, 0.0)).xyz;\n    gl_Position = projection * view * model * vec4(position, 1.0);\n}\n","precision mediump float;\n\nuniform mat4 view;\nvarying vec3 frag_normal;\n\nconst vec4 base_color =  vec4(0.6, 0.4, 0.8, 1.0);\nconst vec4 light_direction = normalize(vec4(1.0, -1.0, 0.0, 0.0));\nconst vec4 light_diffuse = vec4(0.8, 0.8, 0.8, 0.0);\nconst vec4 light_ambient = vec4(0.2, 0.2, 0.2, 1.0);\n\nvoid main() {\n    vec3 world_light_direction = (view * light_direction).xyz;\n    vec3 normal = normalize(frag_normal);\n\n    vec4 diffuse_factor = max(-dot(normal, world_light_direction), 0.0) * light_diffuse;\n    vec4 ambient_diffuse_factor = diffuse_factor + light_ambient;\n\n    gl_FragColor = ambient_diffuse_factor * base_color;\n}\n","import { readFileSync } from \"fs\";\nimport { mat4 } from \"gl-matrix\";\nimport bunny from \"bunny\";\n\nimport { Procedure } from \"~src/common/shaderView/shaderView.component\";\nimport { ShaderDemo } from \"../shadersList\";\nimport { Mesh } from \"../mesh\";\n\nimport vertexShader from \"~src/assets/shaders/lighting3.vert\";\nimport fragmentShader from \"~src/assets/shaders/lighting3.frag\";\nconst markdown = readFileSync(\"src/assets/shaders/lighting3.md\", \"utf-8\");\n\nconst procedure: Procedure = (regl) => {\n  const drawBunny = new Mesh(bunny.positions, bunny.cells).drawable(regl);\n  const drawMain = regl({\n    vert: vertexShader,\n    frag: fragmentShader,\n    uniforms: {\n      view: mat4.lookAt(mat4.create(), [0, 5, 20], [0, 5, 0], [0, 1, 0]),\n    },\n  });\n  regl.frame(({ tick }) => {\n    regl.clear({ depth: 1, color: [0, 0, 0, 1] });\n    drawMain(() =>\n      drawBunny({\n        rotation: [0.0, (tick * Math.PI) / 800.0, 0.0],\n      })\n    );\n  });\n};\n\nconst demo: ShaderDemo = {\n  procedure,\n  code: [\n    { language: \"markdown\", code: markdown },\n    { language: \"glsl\", code: vertexShader },\n    { language: \"glsl\", code: fragmentShader },\n  ],\n};\n\nexport default demo;\n","precision mediump float;\n\nuniform mat4 model, view, projection;\nattribute vec3 position, normal;\nvarying vec3 frag_position, frag_normal;\n\nvoid main() {\n    frag_position = position;\n    frag_normal = normal;\n    gl_Position = projection * view * model * vec4(position, 1.0);\n}\n","precision mediump float;\n\nuniform mat4 model, view;\nvarying vec3 frag_position, frag_normal;\n\nconst vec4 light_direction = normalize(vec4(1.0, -1.0, 0.0, 0.0));\nconst vec4 base_color =  vec4(0.6, 0.4, 0.8, 1.0);\nconst vec4 light_diffuse = vec4(0.8, 0.8, 0.8, 0.0);\nconst vec4 light_ambient = vec4(0.2, 0.2, 0.2, 1.0);\nconst vec4 light_specular = vec4(0.8, 0.8, 0.8, 1.0);\n\nvoid main() {\n    vec3 view_light_direction = (view * light_direction).xyz;\n    vec3 view_normal = (view * model * vec4(frag_normal, 0.0)).xyz;\n    vec3 normal = normalize(view_normal);\n    vec3 reflection = reflect(view_light_direction, normal);\n    vec3 eye = normalize((view * model * vec4(frag_position, 1.0)).xyz);\n\n    vec4 diffuse_factor = max(-dot(normal, view_light_direction), 0.0) * light_diffuse;\n    vec4 ambient_diffuse_factor = diffuse_factor + light_ambient;\n    vec4 specular_factor = pow(max(-dot(reflection, eye), 0.0), 12.0) * light_specular;\n\n    gl_FragColor = specular_factor + ambient_diffuse_factor * base_color;\n}\n","import { readFileSync } from \"fs\";\nimport { mat4, vec3 } from \"gl-matrix\";\nimport bunny from \"bunny\";\n\nimport { Procedure } from \"~src/common/shaderView/shaderView.component\";\nimport { ShaderDemo } from \"../shadersList\";\nimport { Mesh } from \"../mesh\";\n\nimport vertexShaderMain from \"~src/assets/shaders/shadows1_main.vert\";\nimport fragmentShaderMain from \"~src/assets/shaders/shadows1_main.frag\";\nimport vertexShaderDepth from \"~src/assets/shaders/shadows1_depth.vert\";\nimport fragmentShaderDepth from \"~src/assets/shaders/shadows1_depth.frag\";\nconst markdown = readFileSync(\"src/assets/shaders/shadows1.md\", \"utf-8\");\n\nconst procedure: Procedure = (regl) => {\n  const drawPlane = new Mesh(\n    [\n      [-0.5, +0.0, -0.5],\n      [+0.5, +0.0, -0.5],\n      [-0.5, +0.0, +0.5],\n      [+0.5, +0.0, +0.5],\n    ],\n    [\n      [3, 1, 0],\n      [0, 2, 3],\n    ],\n    [\n      [+0.0, +1.0, +0.0],\n      [+0.0, +1.0, +0.0],\n      [+0.0, +1.0, +0.0],\n      [+0.0, +1.0, +0.0],\n    ]\n  ).drawable(regl);\n\n  const drawBunny = new Mesh(bunny.positions, bunny.cells).drawable(regl);\n\n  const fbo = regl.framebuffer({\n    color: regl.texture({\n      width: 2048,\n      height: 2048,\n      wrap: \"clamp\",\n      type: \"float\",\n    }),\n    depth: true,\n  });\n\n  const drawGlobal = regl({\n    context: {\n      light_direction: [0.8, -1.0, 0.6],\n    },\n    uniforms: {\n      view: mat4.lookAt(mat4.create(), [0, 16, 8], [0, -3, -20], [0, 1, 0]),\n      light_direction: ({ light_direction }) => light_direction,\n      light_view: ({ light_direction }) =>\n        mat4.lookAt(\n          mat4.create(),\n          light_direction.map((e) => e * -1) as vec3,\n          [0, 0, 0],\n          [0, 1, 0]\n        ),\n      light_projection: mat4.ortho(mat4.create(), -30, 30, -30, 30, -30, 30),\n    },\n  });\n  const drawDepth = regl({\n    vert: vertexShaderDepth,\n    frag: fragmentShaderDepth,\n    framebuffer: fbo,\n  });\n  const drawMain = regl({\n    vert: vertexShaderMain,\n    frag: fragmentShaderMain,\n    uniforms: {\n      min_bias: 0.005,\n      max_bias: 0.05,\n      shadow_map: fbo,\n    },\n  });\n\n  regl.frame(({ tick }) => {\n    const drawMeshes = () => {\n      regl.clear({ depth: 1, color: [0, 0, 0, 1] });\n      drawBunny({\n        translation: [0, -3, -20],\n        rotation: [0.0, (tick * Math.PI) / 800.0, 0.0],\n      });\n      drawPlane({\n        translation: [0.0, -5.0, -20.0],\n        scale: [24.0, 24.0, 24.0],\n      });\n    };\n    drawGlobal(() => {\n      drawDepth(drawMeshes);\n      drawMain(drawMeshes);\n    });\n  });\n};\n\nconst demo: ShaderDemo = {\n  procedure,\n  code: [\n    { language: \"markdown\", code: markdown },\n    { language: \"glsl\", code: vertexShaderDepth },\n    { language: \"glsl\", code: fragmentShaderDepth },\n    { language: \"glsl\", code: vertexShaderMain },\n    { language: \"glsl\", code: fragmentShaderMain },\n  ],\n};\n\nexport default demo;\n","// MAIN VERTEX SHADER\n\n//[demo_hide]\nprecision mediump float;\n\nuniform mat4 model, view, projection, light_projection, light_view;\nattribute vec3 position, normal;\nvarying vec3 frag_position, frag_normal, frag_shadow, v_normal;\n//[demo_hide_end]\n\nvoid main() {\n    vec4 world_position = model * vec4(position, 1.0);\n    frag_position = position;\n    frag_normal = normal;\n    frag_shadow = (light_projection * light_view * world_position).xyz;\n    gl_Position = projection * view * world_position;\n}\n","// MAIN FRAGMENT SHADER\n\n//[demo_hide]\nprecision mediump float;\n\nuniform float min_bias, max_bias;\nuniform mat4 model, view;\nuniform vec3 light_direction;\nuniform sampler2D shadow_map;\nvarying vec3 frag_position, frag_normal, frag_shadow;\n\n#define texel_size 1.0 / 2048.0\n\nconst vec3 base_color =  vec3(0.6, 0.4, 0.8);\nconst vec3 light_diffuse = vec3(0.8, 0.8, 0.8);\nconst vec3 light_ambient = vec3(0.1, 0.1, 0.1);\nconst vec3 light_specular = vec3(0.8, 0.8, 0.8);\n//[demo_hide_end]\n\nfloat sample_shadow_map(vec2 coords, float z, float bias) {\n    float a = texture2D(shadow_map, coords).z;\n    float b = frag_shadow.z;\n    return step(b - bias, a);\n}\n\nvoid main() {\n    vec3 view_position = normalize((view * model * vec4(frag_position, 1.0)).xyz);\n    vec3 view_normal = normalize((view * model * vec4(frag_normal, 0.0)).xyz);\n    vec3 view_light = (view * normalize(vec4(light_direction, 0.0))).xyz;\n\n    vec3 ambient = light_ambient * base_color;\n    float cos_theta = dot(view_normal, -view_light);\n    vec3 diffuse = max(cos_theta, 0.0) * light_diffuse * base_color;\n\n    vec3 reflection = reflect(view_light, view_normal);\n    float reflected_cos_theta = dot(-reflection, view_position);\n    vec3 specular = pow(max(reflected_cos_theta, 0.0), 20.0) * light_specular;\n\n    vec2 coords = frag_shadow.xy * 0.5 + 0.5;\n    float bias = max(max_bias * (1.0 - cos_theta), min_bias);\n\n    float s0 = sample_shadow_map(coords + texel_size * vec2(0.0, 0.0), frag_shadow.z, bias);\n    float s1 = sample_shadow_map(coords + texel_size * vec2(1.0, 0.0), frag_shadow.z, bias);\n    float s2 = sample_shadow_map(coords + texel_size * vec2(0.0, 1.0), frag_shadow.z, bias);\n    float s3 = sample_shadow_map(coords + texel_size * vec2(1.0, 1.0), frag_shadow.z, bias);\n    float shadow = (s0 + s1 + s2 + s3) / 4.0;\n\n    gl_FragColor = vec4(shadow * (specular + diffuse) + ambient, 1.0);\n}\n","// DEPTH MAP VERTEX SHADER\n\nprecision mediump float;\n\n//[demo_hide]\nuniform mat4 light_projection, light_view, model;\nattribute vec3 position, normal;\nvarying vec3 frag_position;\n//[demo_hide_end]\n\nvoid main() {\n    vec4 p = light_projection * light_view * model * vec4(position, 1.0);\n    frag_position = p.xyz;\n    gl_Position = p;\n}\n","// DEPTH MAP FRAGMENT SHADER\n\n//[demo_hide]\nprecision mediump float;\n\nvarying vec3 frag_position;\n//[demo_hide_end]\n\nvoid main () {\n    gl_FragColor = vec4(vec3(frag_position.z), 1.0);\n}\n","import { FC, useEffect, useRef } from \"react\";\nimport ReglInit, { Regl } from \"regl\";\n\nimport { Frame } from \"../frame/frame.component\";\nimport styles from \"./shaderView.module.scss\";\n\nexport type Procedure = (regl: Regl) => void | Promise<void>;\n\nexport type ShaderViewProps = {\n  procedure: Procedure;\n};\n\nexport const ShaderView: FC<ShaderViewProps> = ({ procedure }) => {\n  const ref = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      const regl = ReglInit({\n        canvas: ref.current,\n        extensions: \"oes_texture_float\",\n      });\n\n      procedure(regl);\n\n      return () => {\n        regl.destroy();\n      };\n    }\n  }, [ref, procedure]);\n\n  return (\n    <Frame aspect={1 / 1} className={styles.shader_view}>\n      <canvas ref={ref} width={800} height={800} />\n    </Frame>\n  );\n};\n","@use \"../../shared.scss\" as *;\n@use \"../../themed.scss\" as *;\n\n.shader_view {\n  @include card($color-black, true);\n\n  width: 100%;\n  height: 100%;\n\n  & > canvas {\n    margin: 0;\n  }\n}\n","import { Dispatch, FC, SetStateAction } from \"react\";\n\nimport styles from \"./toggle.module.scss\";\n\ntype ToggleProps = {\n  value: boolean;\n  setter: Dispatch<SetStateAction<boolean>>;\n};\n\nexport const Toggle: FC<ToggleProps> = ({ value, setter, children }) => (\n  <label className={styles.toggle}>\n    {children}\n    <input\n      type={\"checkbox\"}\n      checked={value}\n      onChange={({ target }) => setter(target.checked)}\n    />\n    <span>\n      <span />\n    </span>\n  </label>\n);\n","@use \"../../shared.scss\" as *;\n@use \"../../themed.scss\" as *;\n\n.toggle {\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  flex-direction: row-reverse;\n\n  @include is_larger_than($sm-breakpoint) {\n    flex-direction: row;\n  }\n\n  & > input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n\n    &:checked + span > span {\n      @include themed() {\n        background-color: t($color-primary);\n      }\n\n      &:before {\n        transform: translateX(1.2rem);\n      }\n    }\n  }\n\n  & > span {\n    white-space: nowrap;\n    position: relative;\n    display: inline-block;\n    width: 2.4rem;\n    height: 1.2rem;\n\n    & > span {\n      position: absolute;\n      cursor: pointer;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      border-radius: 3rem;\n\n      @include themed() {\n        background-color: t($color-tertiary);\n        transition: 0.2s;\n      }\n\n      &::before {\n        content: \"\";\n        position: absolute;\n        height: 0.8rem;\n        width: 0.8rem;\n        left: 0.2rem;\n        bottom: 0.2rem;\n        border-radius: 50%;\n\n        @include themed() {\n          background-color: t($color-quaternary);\n          transition: 0.2s;\n        }\n      }\n    }\n  }\n\n  & > *:last-child {\n    margin: 0 0.75rem 0 0rem;\n\n    @include is_larger_than($sm-breakpoint) {\n      margin: 0 0 0 0.75rem;\n    }\n  }\n}\n","import { useState, useEffect, Dispatch, SetStateAction } from \"react\";\n\nexport const useLocalStorage = <T>(\n  key: string,\n  defaultValue: T\n): [T, Dispatch<SetStateAction<T>>] => {\n  const [value, setValue] = useState<T>(() => {\n    let currentValue;\n\n    try {\n      currentValue = JSON.parse(\n        localStorage.getItem(key) || String(defaultValue)\n      ) as T;\n    } catch (error) {\n      currentValue = defaultValue;\n    }\n\n    return currentValue;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n\n  return [value, setValue];\n};\n","@use \"../../shared.scss\" as *;\n@use \"../../themed.scss\" as *;\n\n.shader_list {\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-columns: minmax(0, 1fr);\n  width: 100%;\n\n  @include is_larger_than($sm-breakpoint) {\n    grid-template-columns: 1fr 1fr 1fr;\n\n    &.code_visible {\n      grid-template-columns: minmax(0, 1fr);\n    }\n  }\n}\n"],"names":["$lKtKv","parcelRequire","$7f07a3dc4c62428a$export$2e2bcd8739ae039","codeVisible","setCodeVisible","$b5ORo","useLocalStorage","category","$hvI8U","useParams","$aEUbb","CATEGORIES","includes","jsxs","jsx","$jHHQg","Subnavigation","current","routes","map","nav_category","route","label","options","$lhwHo","Toggle","value","setter","className","$parcel$interopDefault","$9sY3z","$h8ZRh","shader_list","code_visible","SHADERS_LIST","procedure","code","index","$4PA00","CodeDemo","excerpts","$cflIb","ShaderView","$0e9ff427c6714a76$export$3e7632bda0566d34","children","theme","$hTxeE","useAppSelector","state","$kyCyO","shader_demo","shader_view","shader_syntax","language","$cqg0o","SyntaxHighlighter","style","$ee91V","Theme","DARKMODE","styleDark","styleLight","input","replace","$ef74e4e8a7cd90bd$export$157037839347bb9","$ef74e4e8a7cd90bd$export$fa3e70b0974fa065","$ef74e4e8a7cd90bd$export$447389b194657347","$8MqWW","$afb612b3dcf10688$export$a513ea61a7bee91c","$afb612b3dcf10688$export$6844c95cdbc118c2","assorted","default","$2L8Ap","$5WDfX","$3dWlj","$kdqcS","$01H5z","basic","$jDQFa","$cUHr5","$e0ef6","$knkF5","textures","$70RoZ","lighting","$jjHi3","$5NLxk","$7mmkP","shadows","$3u2rL","$j4TH4","$5050738a9d1e25bc$export$2e2bcd8739ae039","regl","drawSquare","primitive","vert","frag","$9S1gd","elements","uniforms","u_time","time","u_resolution","viewportWidth","viewportHeight","attributes","position","$gwzP5","x","y","z","h","frame","clear","depth","color","module","exports","JSON","parse","$ejWyb","$d50d2159026af1bc$export$2e2bcd8739ae039","$e8uOk","$5Kmt8","$9024db5075f0129e$export$2e2bcd8739ae039","$bGxsH","$5jSRp","$b19efba33290a37b$export$2e2bcd8739ae039","$1fJUz","$i0gYS","$24db4dd983cc096a$export$2e2bcd8739ae039","$6KFGx","$fak20","$bbc460cdc7f0749c$export$2e2bcd8739ae039","$e0ZnI","$imcCA","$69d8d8e079915f90$export$2e2bcd8739ae039","$5aEpn","$cdkHD","$14c25adea1c12f47$export$2e2bcd8739ae039","$hc8Na","$lEDvD","$c12986eadec50e75$export$2e2bcd8739ae039","$11Nf0","$9FcaC","$aac67c013a11f439$export$2e2bcd8739ae039","$8uKSL","$00caa3bc9b6f9914$var$kitty","from","$00caa3bc9b6f9914$export$2e2bcd8739ae039","$l8qz4","importTextures","$hDxwF","$b7p4O","$cquVX","async","$6f58b55ad4ab1a2d$export$9bf81a1b9b1428ac","buffer","$lSV4t","getPixels","$6f58b55ad4ab1a2d$export$e8dc6d52aaa1d6e2","buffers","result","key","texture","$6f58b55ad4ab1a2d$export$531a38cc02cebcdc","perspective","create","Math","PI","$cmmNX","$90bfe889a3a444a8$export$185802fd694ee1f5","out","ARRAY_TYPE","Float32Array","$90bfe889a3a444a8$export$9cd59f9826255e47","a","$90bfe889a3a444a8$export$784d13d8ee351f07","$90bfe889a3a444a8$export$a82be99ed2a44a7d","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","$90bfe889a3a444a8$export$adaa4cf7ef1b65be","$90bfe889a3a444a8$export$f0954fd7d5368655","$90bfe889a3a444a8$export$9cb09a71b7d66923","a01","a02","a03","a12","a13","a23","$90bfe889a3a444a8$export$6897c284b6f9f4dc","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","$90bfe889a3a444a8$export$33f3c024b4ae00a1","$90bfe889a3a444a8$export$a04698f914c55ed9","$90bfe889a3a444a8$export$2060d2db72cce88f","b","b0","b1","b2","b3","$90bfe889a3a444a8$export$d73ee8ef04f5226a","v","$90bfe889a3a444a8$export$dcdf75081b88279d","$90bfe889a3a444a8$export$bb628a54ab399bc9","rad","axis","s","c","t","b12","b20","b21","b22","len","hypot","EPSILON","sin","cos","$90bfe889a3a444a8$export$a59c8716592e09af","$90bfe889a3a444a8$export$cf71e4d4ca4d1cfd","$90bfe889a3a444a8$export$ea6eae3365de5b9c","$90bfe889a3a444a8$export$bc9e79e74e9fddf6","$90bfe889a3a444a8$export$832ca188ffb1955d","$90bfe889a3a444a8$export$926fc125ff3c666c","$90bfe889a3a444a8$export$dd47cc2f828c32ef","$90bfe889a3a444a8$export$7dc997d67d2b7f33","$90bfe889a3a444a8$export$ad5ddaedc8f405df","$90bfe889a3a444a8$export$9545ac307f2a256b","q","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","$90bfe889a3a444a8$export$ff497f2be31cc6a","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","$90bfe889a3a444a8$export$202e99f82f7f0395","mat","$90bfe889a3a444a8$export$71dc54d92bd04b57","$90bfe889a3a444a8$export$df3937d3b537df0a","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","sqrt","$90bfe889a3a444a8$export$ddf9c55c9f2be172","sx","sy","sz","$90bfe889a3a444a8$export$1def1f860edc4b1f","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","$90bfe889a3a444a8$export$2ff2bbe382249af7","yx","zx","zy","$90bfe889a3a444a8$export$89b5708c387cac6c","left","right","bottom","top","near","far","rl","tb","nf","$90bfe889a3a444a8$export$4cf19729ec9a96b8","fovy","aspect","f","tan","Infinity","$90bfe889a3a444a8$export$541149539f3a4684","$90bfe889a3a444a8$export$294bba99a6af0c0c","$90bfe889a3a444a8$export$58ae211c788e338f","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","$90bfe889a3a444a8$export$c5f65ef3eb668f27","lr","bt","$90bfe889a3a444a8$export$4f2167e613cfc87b","$90bfe889a3a444a8$export$b1d31ea7b4d854e","$90bfe889a3a444a8$export$d924e14fd6d9aa66","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","abs","$90bfe889a3a444a8$export$aa67782f4dc9e52c","target","$90bfe889a3a444a8$export$42d51816ce590c93","$90bfe889a3a444a8$export$326827e8268e9cdb","$90bfe889a3a444a8$export$e16d8520af44a096","$90bfe889a3a444a8$export$4e2d2ead65e5f7e3","$90bfe889a3a444a8$export$c697bed75648cdb7","$90bfe889a3a444a8$export$553579f63bdd7137","scale","$90bfe889a3a444a8$export$f2599a5cf1109d8","$90bfe889a3a444a8$export$e9bab7fafb253603","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a14","a15","b4","b5","b6","b7","b8","b9","b13","b14","b15","max","$90bfe889a3a444a8$export$6e3a27864ab166fe","$90bfe889a3a444a8$export$f93b5905241a7cca","$025278b023032180$export$fd293b15f47e270","$025278b023032180$export$b67359430d3b1b2","Array","random","i","arguments","length","data","mimeType","getPixelsInternal","Uint8Array","Error","blob","Blob","type","path","URL","createObjectURL","Promise","resolve","reject","img","Image","crossOrigin","onload","revokeObjectURL","canvas","document","createElement","width","height","context","getContext","drawImage","pixels","getImageData","ndarray","onerror","err","src","$hB4q7","$d404d54ffa5194d4$var$hasTypedArrays","Float64Array","$d404d54ffa5194d4$var$compare1st","$d404d54ffa5194d4$var$order","stride","this","terms","sort","$d404d54ffa5194d4$var$compileConstructor","dtype","dimension","join","useGetters","Function","$d404d54ffa5194d4$var$CACHED_CONSTRUCTORS","indices","args","index_str","shapeArg","strideArg","push","a_vars","c_vars","tShape","tStride","n","idx","float32","float64","int8","int16","int32","uint8","uint16","uint32","array","uint8_clamped","bigint64","biguint64","generic","shape","offset","undefined","ctor","d","$7E4wf","Object","prototype","toString","call","isArray","$d404d54ffa5194d4$var$arrayDType","ctor_list","$590fc640dd350ee6$var$isBuffer","obj","constructor","isBuffer","readFloatLE","slice","$590fc640dd350ee6$var$isSlowBuffer","_isBuffer","$018dc125a583e169$var$EmptyProc","body","thisVars","localVars","$018dc125a583e169$var$fixup","name","lvalue","rvalue","count","$018dc125a583e169$var$makeOp","user_args","funcName","wrapper","$gW9OT","pre","post","proc","$018dc125a583e169$var$pcompile","$018dc125a583e169$var$assign_ops","add","sub","mul","div","mod","band","bor","bxor","lshift","rshift","rrshift","id","op","$018dc125a583e169$var$unary_ops","not","bnot","neg","recip","$018dc125a583e169$var$binary_ops","and","or","eq","neq","lt","gt","leq","geq","$018dc125a583e169$var$math_unary","$018dc125a583e169$var$math_comm","$018dc125a583e169$var$math_noncomm","any","all","sum","prod","norm2squared","norm2","norminf","norm1","sup","inf","argmin","argmax","assign","assigns","equals","$c549ae1f175a01ea$var$Procedure","argTypes","shimArgs","arrayArgs","arrayBlockIndices","scalarArgs","offsetArgs","offsetArgIndex","indexArgs","shapeArgs","debug","proc_args","arg_type","blockIndices","printCode","blockSize","$23CXl","vars","thunkName","typesig","string_typesig","shapeLengthConditions","shapeConditions","j","console","log","thunk","$kgd6z","bind","$ebff77a33e1cfea9$var$innerFill","order","nargs","has_index","pidx","$ebff77a33e1cfea9$var$processBlock","block","dtypes","carg","re","RegExp","ptrStr","arrNum","indexOf","offArgIndex","localStr","arrStr","reStrArr","ptrStrArr","trim","$ebff77a33e1cfea9$var$typeSummary","summary","allEqual","digits","match","charAt","orders","blockBegin","blockEnd","loopBegin","loopEnd","loopOrders","newOrder","arglist","zeros","off_arg","init_string","$5brTy","concat","matched","$ebff77a33e1cfea9$var$countMatches","indexStr","$ebff77a33e1cfea9$var$outerFill","loopName","list","compare","sorted","ptr","$3c639e33fe129cf8$var$unique_pred","$3c639e33fe129cf8$var$unique_eq","$29bb513f42bd0cdc$export$2e2bcd8739ae039","drawBunny","$9CyBl","Mesh","$5s5L6","positions","cells","drawable","drawMain","$S6Wea","$7MgbP","view","lookAt","tick","rotation","$3f8408d2795a7c6e$export$878041e1e4cd4218","$3f8408d2795a7c6e$export$57ba6370ea0e47f8","$18l3v","$285f9b80268f1982$export$e176487c05830cc5","normals","model","_","m","identity","translate","rotateX","rotateY","rotateZ","projection","standardProjection","normal","cull","enable","$0d36def9946e2e3e$var$hypot","pow","$0d36def9946e2e3e$var$weight","r","atan2","$0d36def9946e2e3e$var$mulAdd","dest","numVerts","numCells","cell","abx","aby","abz","ab","bcx","bcy","bcz","bc","ca","min","nx","ny","nz","nl","l","$ae37478c73d65d07$export$2e2bcd8739ae039","$6wS4C","$6wkKZ","$8b70935c2b22ccf4$export$2e2bcd8739ae039","$hVILQ","$jrUf5","$8039bf6bdd9c4806$export$2e2bcd8739ae039","drawPlane","fbo","framebuffer","wrap","drawGlobal","light_direction","light_view","e","light_projection","ortho","drawDepth","$lNFd2","$2bNkP","$5v4hw","$3kKez","min_bias","max_bias","shadow_map","drawMeshes","$7567eb09d751c200$export$ec92a3ab06ae2ae2","ref","$fPSy9","useRef","useEffect","$lrQbr","extensions","destroy","$gHXkF","Frame","$ePSYF","$acd0798002a968fa$export$447389b194657347","$b350d46c9622a636$export$bea8ebba691c5813","$4Ki0Q","toggle","checked","onChange","$37496e3b9fcfdf08$export$e03c1c3201ee8bb7","$75ff245af40ede09$export$86e2cef2561044ac","defaultValue","setValue","useState","currentValue","localStorage","getItem","String","error","setItem","stringify","$c7b32ac997de776f$export$d4ade6cdeec6bdd3","$c7b32ac997de776f$export$a83db6d4ef79fd38"],"version":3,"file":"shaders.component.ce4925fc.js.map"}