{"mappings":"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","sources":["src/features/posts/postsContent.component.tsx","node_modules/.pnpm/react-markdown@8.0.5_@preact+compat@17.1.2_@types+react@17.0.53/node_modules/react-markdown/lib/react-markdown.js","node_modules/.pnpm/vfile@5.3.7/node_modules/vfile/lib/index.js","node_modules/.pnpm/is-buffer@2.0.5/node_modules/is-buffer/index.js","node_modules/.pnpm/vfile-message@3.1.4/node_modules/vfile-message/lib/index.js","node_modules/.pnpm/unist-util-stringify-position@3.0.3/node_modules/unist-util-stringify-position/lib/index.js","node_modules/.pnpm/vfile@5.3.7/node_modules/vfile/lib/minpath.browser.js","node_modules/.pnpm/vfile@5.3.7/node_modules/vfile/lib/minproc.browser.js","node_modules/.pnpm/vfile@5.3.7/node_modules/vfile/lib/minurl.browser.js","node_modules/.pnpm/vfile@5.3.7/node_modules/vfile/lib/minurl.shared.js","node_modules/.pnpm/unified@10.1.2/node_modules/unified/lib/index.js","node_modules/.pnpm/bail@2.0.2/node_modules/bail/index.js","node_modules/.pnpm/extend@3.0.2/node_modules/extend/index.js","node_modules/.pnpm/is-plain-obj@4.1.0/node_modules/is-plain-obj/index.js","node_modules/.pnpm/trough@2.1.0/node_modules/trough/index.js","node_modules/.pnpm/remark-parse@10.0.1/node_modules/remark-parse/index.js","node_modules/.pnpm/remark-parse@10.0.1/node_modules/remark-parse/lib/index.js","node_modules/.pnpm/mdast-util-from-markdown@1.3.0/node_modules/mdast-util-from-markdown/lib/index.js","node_modules/.pnpm/mdast-util-to-string@3.1.1/node_modules/mdast-util-to-string/lib/index.js","node_modules/.pnpm/micromark@3.1.0/node_modules/micromark/lib/parse.js","node_modules/.pnpm/micromark-util-combine-extensions@1.0.0/node_modules/micromark-util-combine-extensions/index.js","node_modules/.pnpm/micromark-util-chunked@1.0.0/node_modules/micromark-util-chunked/index.js","node_modules/.pnpm/micromark@3.1.0/node_modules/micromark/lib/initialize/content.js","node_modules/.pnpm/micromark-factory-space@1.0.0/node_modules/micromark-factory-space/index.js","node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/index.js","node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","node_modules/.pnpm/micromark@3.1.0/node_modules/micromark/lib/initialize/document.js","node_modules/.pnpm/micromark@3.1.0/node_modules/micromark/lib/initialize/flow.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/blank-line.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/content.js","node_modules/.pnpm/micromark-util-subtokenize@1.0.2/node_modules/micromark-util-subtokenize/index.js","node_modules/.pnpm/micromark@3.1.0/node_modules/micromark/lib/initialize/text.js","node_modules/.pnpm/micromark@3.1.0/node_modules/micromark/lib/create-tokenizer.js","node_modules/.pnpm/micromark-util-resolve-all@1.0.0/node_modules/micromark-util-resolve-all/index.js","node_modules/.pnpm/micromark@3.1.0/node_modules/micromark/lib/constructs.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/attention.js","node_modules/.pnpm/micromark-util-classify-character@1.0.0/node_modules/micromark-util-classify-character/index.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/autolink.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/block-quote.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/character-escape.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/character-reference.js","node_modules/.pnpm/decode-named-character-reference@1.0.2/node_modules/decode-named-character-reference/index.js","node_modules/.pnpm/character-entities@2.0.2/node_modules/character-entities/index.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/code-fenced.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/code-indented.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/code-text.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/definition.js","node_modules/.pnpm/micromark-factory-destination@1.0.0/node_modules/micromark-factory-destination/index.js","node_modules/.pnpm/micromark-factory-label@1.0.2/node_modules/micromark-factory-label/index.js","node_modules/.pnpm/micromark-factory-title@1.0.2/node_modules/micromark-factory-title/index.js","node_modules/.pnpm/micromark-factory-whitespace@1.0.0/node_modules/micromark-factory-whitespace/index.js","node_modules/.pnpm/micromark-util-normalize-identifier@1.0.0/node_modules/micromark-util-normalize-identifier/index.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/hard-break-escape.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/heading-atx.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/html-flow.js","node_modules/.pnpm/micromark-util-html-tag-name@1.1.0/node_modules/micromark-util-html-tag-name/index.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/html-text.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/label-end.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/label-start-image.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/label-start-link.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/line-ending.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/list.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/thematic-break.js","node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/lib/setext-underline.js","node_modules/.pnpm/micromark@3.1.0/node_modules/micromark/lib/preprocess.js","node_modules/.pnpm/micromark@3.1.0/node_modules/micromark/lib/postprocess.js","node_modules/.pnpm/micromark-util-decode-numeric-character-reference@1.0.0/node_modules/micromark-util-decode-numeric-character-reference/index.js","node_modules/.pnpm/micromark-util-decode-string@1.0.2/node_modules/micromark-util-decode-string/index.js","node_modules/.pnpm/remark-rehype@10.1.0/node_modules/remark-rehype/lib/index.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/index.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/footer.js","node_modules/.pnpm/micromark-util-sanitize-uri@1.1.0/node_modules/micromark-util-sanitize-uri/index.js","node_modules/.pnpm/micromark-util-encode@1.0.1/node_modules/micromark-util-encode/index.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/state.js","node_modules/.pnpm/unist-util-visit@4.1.2/node_modules/unist-util-visit/lib/index.js","node_modules/.pnpm/unist-util-visit-parents@5.1.3/node_modules/unist-util-visit-parents/lib/index.js","node_modules/.pnpm/unist-util-is@5.2.0/node_modules/unist-util-is/lib/index.js","node_modules/.pnpm/unist-util-visit-parents@5.1.3/node_modules/unist-util-visit-parents/lib/color.browser.js","node_modules/.pnpm/unist-util-position@4.0.4/node_modules/unist-util-position/lib/index.js","node_modules/.pnpm/unist-util-generated@2.0.1/node_modules/unist-util-generated/lib/index.js","node_modules/.pnpm/mdast-util-definitions@5.1.2/node_modules/mdast-util-definitions/lib/index.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/index.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/break.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/code.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/delete.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/footnote.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/heading.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/html.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/revert.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/image.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/link.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/list.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/root.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/strong.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/table.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/table-row.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/text.js","node_modules/.pnpm/trim-lines@3.0.1/node_modules/trim-lines/index.js","node_modules/.pnpm/mdast-util-to-hast@12.3.0/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/index.js","node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/factoryWithThrowingShims.js","node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/lib/ReactPropTypesSecret.js","node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/index.js","node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/util/merge.js","node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/util/schema.js","node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/xlink.js","node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/util/create.js","node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/normalize.js","node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/util/defined-info.js","node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/util/info.js","node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/util/types.js","node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/xml.js","node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/xmlns.js","node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/util/case-insensitive-transform.js","node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/util/case-sensitive-transform.js","node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/aria.js","node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/html.js","node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/svg.js","node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/find.js","node_modules/.pnpm/property-information@6.2.0/node_modules/property-information/lib/hast-to-react.js","node_modules/.pnpm/react-markdown@8.0.5_@preact+compat@17.1.2_@types+react@17.0.53/node_modules/react-markdown/lib/rehype-filter.js","node_modules/.pnpm/react-markdown@8.0.5_@preact+compat@17.1.2_@types+react@17.0.53/node_modules/react-markdown/lib/ast-to-react.js","node_modules/.pnpm/hast-util-whitespace@2.0.1/node_modules/hast-util-whitespace/index.js","node_modules/.pnpm/space-separated-tokens@2.0.2/node_modules/space-separated-tokens/index.js","node_modules/.pnpm/comma-separated-tokens@2.0.3/node_modules/comma-separated-tokens/index.js","node_modules/.pnpm/style-to-object@0.4.1/node_modules/style-to-object/index.mjs","node_modules/.pnpm/style-to-object@0.4.1/node_modules/style-to-object/index.js","node_modules/.pnpm/inline-style-parser@0.1.1/node_modules/inline-style-parser/index.js","node_modules/.pnpm/react-markdown@8.0.5_@preact+compat@17.1.2_@types+react@17.0.53/node_modules/react-markdown/lib/uri-transformer.js","src/features/posts/postsContent.module.scss"],"sourcesContent":["import { FC } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport { useAppSelector } from \"~/src/app/store\";\nimport { Theme } from \"~/src/features/theme/theme.slice\";\nimport { Card } from \"~/src/common/card/card.component\";\nimport {\n  SyntaxHighlighter,\n  styleLight,\n  styleDark,\n} from \"~/src/utilities/syntaxHighlighter\";\n\nimport posts from \"./markdown\";\nimport styles from \"./postsContent.module.scss\";\n\nconst PostsContent: FC = () => {\n  const { id = \"\" } = useParams<{ id: string }>();\n  const {\n    content,\n    data: { title, date },\n  } = posts[id];\n\n  const theme = useAppSelector((state) => state.theme.theme);\n\n  return (\n    <section>\n      <Card\n        primary={title}\n        secondary={<time>{new Date(date).toDateString()}</time>}\n      />\n      <ReactMarkdown\n        className={styles.posts_content}\n        children={content}\n        components={{\n          code({ inline, className, children, ...props }) {\n            const match = /language-(\\w+)/.exec(className || \"\");\n            return (\n              <SyntaxHighlighter\n                className={styles.posts_content_code}\n                children={String(children).replace(/\\n$/, \"\")}\n                language={!inline && match ? match[1] : \"text\"}\n                {...props}\n                style={theme === Theme.DARKMODE ? styleDark : styleLight}\n              />\n            );\n          },\n        }}\n      />\n    </section>\n  );\n};\n\nexport default PostsContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        // @ts-expect-error: micromark types need to accept `null`.\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    // @ts-expect-error Patched.\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n */\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const includeImageAlt = (options || {}).includeImageAlt\n  return one(\n    value,\n    typeof includeImageAlt === 'boolean' ? includeImageAlt : true\n  )\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt) {\n  return (\n    (node(value) &&\n      (('value' in value && value.value) ||\n        (includeImageAlt && 'alt' in value && value.alt) ||\n        ('children' in value && all(value.children, includeImageAlt)))) ||\n    (Array.isArray(value) && all(value, includeImageAlt)) ||\n    ''\n  )\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","import {characterEntities} from 'character-entities'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Decode a single character reference (without the `&` or `;`).\n * You probably only need this when you’re building parsers yourself that follow\n * different rules compared to HTML.\n * This is optimized to be tiny in browsers.\n *\n * @param {string} value\n *   `notin` (named), `#123` (deci), `#x123` (hexa).\n * @returns {string|false}\n *   Decoded reference.\n */\nexport function decodeNamedCharacterReference(value) {\n  return own.call(characterEntities, value) ? characterEntities[value] : false\n}\n","/**\n * Map of named character references.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntities = {\n  AElig: 'Æ',\n  AMP: '&',\n  Aacute: 'Á',\n  Abreve: 'Ă',\n  Acirc: 'Â',\n  Acy: 'А',\n  Afr: '𝔄',\n  Agrave: 'À',\n  Alpha: 'Α',\n  Amacr: 'Ā',\n  And: '⩓',\n  Aogon: 'Ą',\n  Aopf: '𝔸',\n  ApplyFunction: '⁡',\n  Aring: 'Å',\n  Ascr: '𝒜',\n  Assign: '≔',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Backslash: '∖',\n  Barv: '⫧',\n  Barwed: '⌆',\n  Bcy: 'Б',\n  Because: '∵',\n  Bernoullis: 'ℬ',\n  Beta: 'Β',\n  Bfr: '𝔅',\n  Bopf: '𝔹',\n  Breve: '˘',\n  Bscr: 'ℬ',\n  Bumpeq: '≎',\n  CHcy: 'Ч',\n  COPY: '©',\n  Cacute: 'Ć',\n  Cap: '⋒',\n  CapitalDifferentialD: 'ⅅ',\n  Cayleys: 'ℭ',\n  Ccaron: 'Č',\n  Ccedil: 'Ç',\n  Ccirc: 'Ĉ',\n  Cconint: '∰',\n  Cdot: 'Ċ',\n  Cedilla: '¸',\n  CenterDot: '·',\n  Cfr: 'ℭ',\n  Chi: 'Χ',\n  CircleDot: '⊙',\n  CircleMinus: '⊖',\n  CirclePlus: '⊕',\n  CircleTimes: '⊗',\n  ClockwiseContourIntegral: '∲',\n  CloseCurlyDoubleQuote: '”',\n  CloseCurlyQuote: '’',\n  Colon: '∷',\n  Colone: '⩴',\n  Congruent: '≡',\n  Conint: '∯',\n  ContourIntegral: '∮',\n  Copf: 'ℂ',\n  Coproduct: '∐',\n  CounterClockwiseContourIntegral: '∳',\n  Cross: '⨯',\n  Cscr: '𝒞',\n  Cup: '⋓',\n  CupCap: '≍',\n  DD: 'ⅅ',\n  DDotrahd: '⤑',\n  DJcy: 'Ђ',\n  DScy: 'Ѕ',\n  DZcy: 'Џ',\n  Dagger: '‡',\n  Darr: '↡',\n  Dashv: '⫤',\n  Dcaron: 'Ď',\n  Dcy: 'Д',\n  Del: '∇',\n  Delta: 'Δ',\n  Dfr: '𝔇',\n  DiacriticalAcute: '´',\n  DiacriticalDot: '˙',\n  DiacriticalDoubleAcute: '˝',\n  DiacriticalGrave: '`',\n  DiacriticalTilde: '˜',\n  Diamond: '⋄',\n  DifferentialD: 'ⅆ',\n  Dopf: '𝔻',\n  Dot: '¨',\n  DotDot: '⃜',\n  DotEqual: '≐',\n  DoubleContourIntegral: '∯',\n  DoubleDot: '¨',\n  DoubleDownArrow: '⇓',\n  DoubleLeftArrow: '⇐',\n  DoubleLeftRightArrow: '⇔',\n  DoubleLeftTee: '⫤',\n  DoubleLongLeftArrow: '⟸',\n  DoubleLongLeftRightArrow: '⟺',\n  DoubleLongRightArrow: '⟹',\n  DoubleRightArrow: '⇒',\n  DoubleRightTee: '⊨',\n  DoubleUpArrow: '⇑',\n  DoubleUpDownArrow: '⇕',\n  DoubleVerticalBar: '∥',\n  DownArrow: '↓',\n  DownArrowBar: '⤓',\n  DownArrowUpArrow: '⇵',\n  DownBreve: '̑',\n  DownLeftRightVector: '⥐',\n  DownLeftTeeVector: '⥞',\n  DownLeftVector: '↽',\n  DownLeftVectorBar: '⥖',\n  DownRightTeeVector: '⥟',\n  DownRightVector: '⇁',\n  DownRightVectorBar: '⥗',\n  DownTee: '⊤',\n  DownTeeArrow: '↧',\n  Downarrow: '⇓',\n  Dscr: '𝒟',\n  Dstrok: 'Đ',\n  ENG: 'Ŋ',\n  ETH: 'Ð',\n  Eacute: 'É',\n  Ecaron: 'Ě',\n  Ecirc: 'Ê',\n  Ecy: 'Э',\n  Edot: 'Ė',\n  Efr: '𝔈',\n  Egrave: 'È',\n  Element: '∈',\n  Emacr: 'Ē',\n  EmptySmallSquare: '◻',\n  EmptyVerySmallSquare: '▫',\n  Eogon: 'Ę',\n  Eopf: '𝔼',\n  Epsilon: 'Ε',\n  Equal: '⩵',\n  EqualTilde: '≂',\n  Equilibrium: '⇌',\n  Escr: 'ℰ',\n  Esim: '⩳',\n  Eta: 'Η',\n  Euml: 'Ë',\n  Exists: '∃',\n  ExponentialE: 'ⅇ',\n  Fcy: 'Ф',\n  Ffr: '𝔉',\n  FilledSmallSquare: '◼',\n  FilledVerySmallSquare: '▪',\n  Fopf: '𝔽',\n  ForAll: '∀',\n  Fouriertrf: 'ℱ',\n  Fscr: 'ℱ',\n  GJcy: 'Ѓ',\n  GT: '>',\n  Gamma: 'Γ',\n  Gammad: 'Ϝ',\n  Gbreve: 'Ğ',\n  Gcedil: 'Ģ',\n  Gcirc: 'Ĝ',\n  Gcy: 'Г',\n  Gdot: 'Ġ',\n  Gfr: '𝔊',\n  Gg: '⋙',\n  Gopf: '𝔾',\n  GreaterEqual: '≥',\n  GreaterEqualLess: '⋛',\n  GreaterFullEqual: '≧',\n  GreaterGreater: '⪢',\n  GreaterLess: '≷',\n  GreaterSlantEqual: '⩾',\n  GreaterTilde: '≳',\n  Gscr: '𝒢',\n  Gt: '≫',\n  HARDcy: 'Ъ',\n  Hacek: 'ˇ',\n  Hat: '^',\n  Hcirc: 'Ĥ',\n  Hfr: 'ℌ',\n  HilbertSpace: 'ℋ',\n  Hopf: 'ℍ',\n  HorizontalLine: '─',\n  Hscr: 'ℋ',\n  Hstrok: 'Ħ',\n  HumpDownHump: '≎',\n  HumpEqual: '≏',\n  IEcy: 'Е',\n  IJlig: 'Ĳ',\n  IOcy: 'Ё',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Icy: 'И',\n  Idot: 'İ',\n  Ifr: 'ℑ',\n  Igrave: 'Ì',\n  Im: 'ℑ',\n  Imacr: 'Ī',\n  ImaginaryI: 'ⅈ',\n  Implies: '⇒',\n  Int: '∬',\n  Integral: '∫',\n  Intersection: '⋂',\n  InvisibleComma: '⁣',\n  InvisibleTimes: '⁢',\n  Iogon: 'Į',\n  Iopf: '𝕀',\n  Iota: 'Ι',\n  Iscr: 'ℐ',\n  Itilde: 'Ĩ',\n  Iukcy: 'І',\n  Iuml: 'Ï',\n  Jcirc: 'Ĵ',\n  Jcy: 'Й',\n  Jfr: '𝔍',\n  Jopf: '𝕁',\n  Jscr: '𝒥',\n  Jsercy: 'Ј',\n  Jukcy: 'Є',\n  KHcy: 'Х',\n  KJcy: 'Ќ',\n  Kappa: 'Κ',\n  Kcedil: 'Ķ',\n  Kcy: 'К',\n  Kfr: '𝔎',\n  Kopf: '𝕂',\n  Kscr: '𝒦',\n  LJcy: 'Љ',\n  LT: '<',\n  Lacute: 'Ĺ',\n  Lambda: 'Λ',\n  Lang: '⟪',\n  Laplacetrf: 'ℒ',\n  Larr: '↞',\n  Lcaron: 'Ľ',\n  Lcedil: 'Ļ',\n  Lcy: 'Л',\n  LeftAngleBracket: '⟨',\n  LeftArrow: '←',\n  LeftArrowBar: '⇤',\n  LeftArrowRightArrow: '⇆',\n  LeftCeiling: '⌈',\n  LeftDoubleBracket: '⟦',\n  LeftDownTeeVector: '⥡',\n  LeftDownVector: '⇃',\n  LeftDownVectorBar: '⥙',\n  LeftFloor: '⌊',\n  LeftRightArrow: '↔',\n  LeftRightVector: '⥎',\n  LeftTee: '⊣',\n  LeftTeeArrow: '↤',\n  LeftTeeVector: '⥚',\n  LeftTriangle: '⊲',\n  LeftTriangleBar: '⧏',\n  LeftTriangleEqual: '⊴',\n  LeftUpDownVector: '⥑',\n  LeftUpTeeVector: '⥠',\n  LeftUpVector: '↿',\n  LeftUpVectorBar: '⥘',\n  LeftVector: '↼',\n  LeftVectorBar: '⥒',\n  Leftarrow: '⇐',\n  Leftrightarrow: '⇔',\n  LessEqualGreater: '⋚',\n  LessFullEqual: '≦',\n  LessGreater: '≶',\n  LessLess: '⪡',\n  LessSlantEqual: '⩽',\n  LessTilde: '≲',\n  Lfr: '𝔏',\n  Ll: '⋘',\n  Lleftarrow: '⇚',\n  Lmidot: 'Ŀ',\n  LongLeftArrow: '⟵',\n  LongLeftRightArrow: '⟷',\n  LongRightArrow: '⟶',\n  Longleftarrow: '⟸',\n  Longleftrightarrow: '⟺',\n  Longrightarrow: '⟹',\n  Lopf: '𝕃',\n  LowerLeftArrow: '↙',\n  LowerRightArrow: '↘',\n  Lscr: 'ℒ',\n  Lsh: '↰',\n  Lstrok: 'Ł',\n  Lt: '≪',\n  Map: '⤅',\n  Mcy: 'М',\n  MediumSpace: ' ',\n  Mellintrf: 'ℳ',\n  Mfr: '𝔐',\n  MinusPlus: '∓',\n  Mopf: '𝕄',\n  Mscr: 'ℳ',\n  Mu: 'Μ',\n  NJcy: 'Њ',\n  Nacute: 'Ń',\n  Ncaron: 'Ň',\n  Ncedil: 'Ņ',\n  Ncy: 'Н',\n  NegativeMediumSpace: '​',\n  NegativeThickSpace: '​',\n  NegativeThinSpace: '​',\n  NegativeVeryThinSpace: '​',\n  NestedGreaterGreater: '≫',\n  NestedLessLess: '≪',\n  NewLine: '\\n',\n  Nfr: '𝔑',\n  NoBreak: '⁠',\n  NonBreakingSpace: ' ',\n  Nopf: 'ℕ',\n  Not: '⫬',\n  NotCongruent: '≢',\n  NotCupCap: '≭',\n  NotDoubleVerticalBar: '∦',\n  NotElement: '∉',\n  NotEqual: '≠',\n  NotEqualTilde: '≂̸',\n  NotExists: '∄',\n  NotGreater: '≯',\n  NotGreaterEqual: '≱',\n  NotGreaterFullEqual: '≧̸',\n  NotGreaterGreater: '≫̸',\n  NotGreaterLess: '≹',\n  NotGreaterSlantEqual: '⩾̸',\n  NotGreaterTilde: '≵',\n  NotHumpDownHump: '≎̸',\n  NotHumpEqual: '≏̸',\n  NotLeftTriangle: '⋪',\n  NotLeftTriangleBar: '⧏̸',\n  NotLeftTriangleEqual: '⋬',\n  NotLess: '≮',\n  NotLessEqual: '≰',\n  NotLessGreater: '≸',\n  NotLessLess: '≪̸',\n  NotLessSlantEqual: '⩽̸',\n  NotLessTilde: '≴',\n  NotNestedGreaterGreater: '⪢̸',\n  NotNestedLessLess: '⪡̸',\n  NotPrecedes: '⊀',\n  NotPrecedesEqual: '⪯̸',\n  NotPrecedesSlantEqual: '⋠',\n  NotReverseElement: '∌',\n  NotRightTriangle: '⋫',\n  NotRightTriangleBar: '⧐̸',\n  NotRightTriangleEqual: '⋭',\n  NotSquareSubset: '⊏̸',\n  NotSquareSubsetEqual: '⋢',\n  NotSquareSuperset: '⊐̸',\n  NotSquareSupersetEqual: '⋣',\n  NotSubset: '⊂⃒',\n  NotSubsetEqual: '⊈',\n  NotSucceeds: '⊁',\n  NotSucceedsEqual: '⪰̸',\n  NotSucceedsSlantEqual: '⋡',\n  NotSucceedsTilde: '≿̸',\n  NotSuperset: '⊃⃒',\n  NotSupersetEqual: '⊉',\n  NotTilde: '≁',\n  NotTildeEqual: '≄',\n  NotTildeFullEqual: '≇',\n  NotTildeTilde: '≉',\n  NotVerticalBar: '∤',\n  Nscr: '𝒩',\n  Ntilde: 'Ñ',\n  Nu: 'Ν',\n  OElig: 'Œ',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Ocy: 'О',\n  Odblac: 'Ő',\n  Ofr: '𝔒',\n  Ograve: 'Ò',\n  Omacr: 'Ō',\n  Omega: 'Ω',\n  Omicron: 'Ο',\n  Oopf: '𝕆',\n  OpenCurlyDoubleQuote: '“',\n  OpenCurlyQuote: '‘',\n  Or: '⩔',\n  Oscr: '𝒪',\n  Oslash: 'Ø',\n  Otilde: 'Õ',\n  Otimes: '⨷',\n  Ouml: 'Ö',\n  OverBar: '‾',\n  OverBrace: '⏞',\n  OverBracket: '⎴',\n  OverParenthesis: '⏜',\n  PartialD: '∂',\n  Pcy: 'П',\n  Pfr: '𝔓',\n  Phi: 'Φ',\n  Pi: 'Π',\n  PlusMinus: '±',\n  Poincareplane: 'ℌ',\n  Popf: 'ℙ',\n  Pr: '⪻',\n  Precedes: '≺',\n  PrecedesEqual: '⪯',\n  PrecedesSlantEqual: '≼',\n  PrecedesTilde: '≾',\n  Prime: '″',\n  Product: '∏',\n  Proportion: '∷',\n  Proportional: '∝',\n  Pscr: '𝒫',\n  Psi: 'Ψ',\n  QUOT: '\"',\n  Qfr: '𝔔',\n  Qopf: 'ℚ',\n  Qscr: '𝒬',\n  RBarr: '⤐',\n  REG: '®',\n  Racute: 'Ŕ',\n  Rang: '⟫',\n  Rarr: '↠',\n  Rarrtl: '⤖',\n  Rcaron: 'Ř',\n  Rcedil: 'Ŗ',\n  Rcy: 'Р',\n  Re: 'ℜ',\n  ReverseElement: '∋',\n  ReverseEquilibrium: '⇋',\n  ReverseUpEquilibrium: '⥯',\n  Rfr: 'ℜ',\n  Rho: 'Ρ',\n  RightAngleBracket: '⟩',\n  RightArrow: '→',\n  RightArrowBar: '⇥',\n  RightArrowLeftArrow: '⇄',\n  RightCeiling: '⌉',\n  RightDoubleBracket: '⟧',\n  RightDownTeeVector: '⥝',\n  RightDownVector: '⇂',\n  RightDownVectorBar: '⥕',\n  RightFloor: '⌋',\n  RightTee: '⊢',\n  RightTeeArrow: '↦',\n  RightTeeVector: '⥛',\n  RightTriangle: '⊳',\n  RightTriangleBar: '⧐',\n  RightTriangleEqual: '⊵',\n  RightUpDownVector: '⥏',\n  RightUpTeeVector: '⥜',\n  RightUpVector: '↾',\n  RightUpVectorBar: '⥔',\n  RightVector: '⇀',\n  RightVectorBar: '⥓',\n  Rightarrow: '⇒',\n  Ropf: 'ℝ',\n  RoundImplies: '⥰',\n  Rrightarrow: '⇛',\n  Rscr: 'ℛ',\n  Rsh: '↱',\n  RuleDelayed: '⧴',\n  SHCHcy: 'Щ',\n  SHcy: 'Ш',\n  SOFTcy: 'Ь',\n  Sacute: 'Ś',\n  Sc: '⪼',\n  Scaron: 'Š',\n  Scedil: 'Ş',\n  Scirc: 'Ŝ',\n  Scy: 'С',\n  Sfr: '𝔖',\n  ShortDownArrow: '↓',\n  ShortLeftArrow: '←',\n  ShortRightArrow: '→',\n  ShortUpArrow: '↑',\n  Sigma: 'Σ',\n  SmallCircle: '∘',\n  Sopf: '𝕊',\n  Sqrt: '√',\n  Square: '□',\n  SquareIntersection: '⊓',\n  SquareSubset: '⊏',\n  SquareSubsetEqual: '⊑',\n  SquareSuperset: '⊐',\n  SquareSupersetEqual: '⊒',\n  SquareUnion: '⊔',\n  Sscr: '𝒮',\n  Star: '⋆',\n  Sub: '⋐',\n  Subset: '⋐',\n  SubsetEqual: '⊆',\n  Succeeds: '≻',\n  SucceedsEqual: '⪰',\n  SucceedsSlantEqual: '≽',\n  SucceedsTilde: '≿',\n  SuchThat: '∋',\n  Sum: '∑',\n  Sup: '⋑',\n  Superset: '⊃',\n  SupersetEqual: '⊇',\n  Supset: '⋑',\n  THORN: 'Þ',\n  TRADE: '™',\n  TSHcy: 'Ћ',\n  TScy: 'Ц',\n  Tab: '\\t',\n  Tau: 'Τ',\n  Tcaron: 'Ť',\n  Tcedil: 'Ţ',\n  Tcy: 'Т',\n  Tfr: '𝔗',\n  Therefore: '∴',\n  Theta: 'Θ',\n  ThickSpace: '  ',\n  ThinSpace: ' ',\n  Tilde: '∼',\n  TildeEqual: '≃',\n  TildeFullEqual: '≅',\n  TildeTilde: '≈',\n  Topf: '𝕋',\n  TripleDot: '⃛',\n  Tscr: '𝒯',\n  Tstrok: 'Ŧ',\n  Uacute: 'Ú',\n  Uarr: '↟',\n  Uarrocir: '⥉',\n  Ubrcy: 'Ў',\n  Ubreve: 'Ŭ',\n  Ucirc: 'Û',\n  Ucy: 'У',\n  Udblac: 'Ű',\n  Ufr: '𝔘',\n  Ugrave: 'Ù',\n  Umacr: 'Ū',\n  UnderBar: '_',\n  UnderBrace: '⏟',\n  UnderBracket: '⎵',\n  UnderParenthesis: '⏝',\n  Union: '⋃',\n  UnionPlus: '⊎',\n  Uogon: 'Ų',\n  Uopf: '𝕌',\n  UpArrow: '↑',\n  UpArrowBar: '⤒',\n  UpArrowDownArrow: '⇅',\n  UpDownArrow: '↕',\n  UpEquilibrium: '⥮',\n  UpTee: '⊥',\n  UpTeeArrow: '↥',\n  Uparrow: '⇑',\n  Updownarrow: '⇕',\n  UpperLeftArrow: '↖',\n  UpperRightArrow: '↗',\n  Upsi: 'ϒ',\n  Upsilon: 'Υ',\n  Uring: 'Ů',\n  Uscr: '𝒰',\n  Utilde: 'Ũ',\n  Uuml: 'Ü',\n  VDash: '⊫',\n  Vbar: '⫫',\n  Vcy: 'В',\n  Vdash: '⊩',\n  Vdashl: '⫦',\n  Vee: '⋁',\n  Verbar: '‖',\n  Vert: '‖',\n  VerticalBar: '∣',\n  VerticalLine: '|',\n  VerticalSeparator: '❘',\n  VerticalTilde: '≀',\n  VeryThinSpace: ' ',\n  Vfr: '𝔙',\n  Vopf: '𝕍',\n  Vscr: '𝒱',\n  Vvdash: '⊪',\n  Wcirc: 'Ŵ',\n  Wedge: '⋀',\n  Wfr: '𝔚',\n  Wopf: '𝕎',\n  Wscr: '𝒲',\n  Xfr: '𝔛',\n  Xi: 'Ξ',\n  Xopf: '𝕏',\n  Xscr: '𝒳',\n  YAcy: 'Я',\n  YIcy: 'Ї',\n  YUcy: 'Ю',\n  Yacute: 'Ý',\n  Ycirc: 'Ŷ',\n  Ycy: 'Ы',\n  Yfr: '𝔜',\n  Yopf: '𝕐',\n  Yscr: '𝒴',\n  Yuml: 'Ÿ',\n  ZHcy: 'Ж',\n  Zacute: 'Ź',\n  Zcaron: 'Ž',\n  Zcy: 'З',\n  Zdot: 'Ż',\n  ZeroWidthSpace: '​',\n  Zeta: 'Ζ',\n  Zfr: 'ℨ',\n  Zopf: 'ℤ',\n  Zscr: '𝒵',\n  aacute: 'á',\n  abreve: 'ă',\n  ac: '∾',\n  acE: '∾̳',\n  acd: '∿',\n  acirc: 'â',\n  acute: '´',\n  acy: 'а',\n  aelig: 'æ',\n  af: '⁡',\n  afr: '𝔞',\n  agrave: 'à',\n  alefsym: 'ℵ',\n  aleph: 'ℵ',\n  alpha: 'α',\n  amacr: 'ā',\n  amalg: '⨿',\n  amp: '&',\n  and: '∧',\n  andand: '⩕',\n  andd: '⩜',\n  andslope: '⩘',\n  andv: '⩚',\n  ang: '∠',\n  ange: '⦤',\n  angle: '∠',\n  angmsd: '∡',\n  angmsdaa: '⦨',\n  angmsdab: '⦩',\n  angmsdac: '⦪',\n  angmsdad: '⦫',\n  angmsdae: '⦬',\n  angmsdaf: '⦭',\n  angmsdag: '⦮',\n  angmsdah: '⦯',\n  angrt: '∟',\n  angrtvb: '⊾',\n  angrtvbd: '⦝',\n  angsph: '∢',\n  angst: 'Å',\n  angzarr: '⍼',\n  aogon: 'ą',\n  aopf: '𝕒',\n  ap: '≈',\n  apE: '⩰',\n  apacir: '⩯',\n  ape: '≊',\n  apid: '≋',\n  apos: \"'\",\n  approx: '≈',\n  approxeq: '≊',\n  aring: 'å',\n  ascr: '𝒶',\n  ast: '*',\n  asymp: '≈',\n  asympeq: '≍',\n  atilde: 'ã',\n  auml: 'ä',\n  awconint: '∳',\n  awint: '⨑',\n  bNot: '⫭',\n  backcong: '≌',\n  backepsilon: '϶',\n  backprime: '‵',\n  backsim: '∽',\n  backsimeq: '⋍',\n  barvee: '⊽',\n  barwed: '⌅',\n  barwedge: '⌅',\n  bbrk: '⎵',\n  bbrktbrk: '⎶',\n  bcong: '≌',\n  bcy: 'б',\n  bdquo: '„',\n  becaus: '∵',\n  because: '∵',\n  bemptyv: '⦰',\n  bepsi: '϶',\n  bernou: 'ℬ',\n  beta: 'β',\n  beth: 'ℶ',\n  between: '≬',\n  bfr: '𝔟',\n  bigcap: '⋂',\n  bigcirc: '◯',\n  bigcup: '⋃',\n  bigodot: '⨀',\n  bigoplus: '⨁',\n  bigotimes: '⨂',\n  bigsqcup: '⨆',\n  bigstar: '★',\n  bigtriangledown: '▽',\n  bigtriangleup: '△',\n  biguplus: '⨄',\n  bigvee: '⋁',\n  bigwedge: '⋀',\n  bkarow: '⤍',\n  blacklozenge: '⧫',\n  blacksquare: '▪',\n  blacktriangle: '▴',\n  blacktriangledown: '▾',\n  blacktriangleleft: '◂',\n  blacktriangleright: '▸',\n  blank: '␣',\n  blk12: '▒',\n  blk14: '░',\n  blk34: '▓',\n  block: '█',\n  bne: '=⃥',\n  bnequiv: '≡⃥',\n  bnot: '⌐',\n  bopf: '𝕓',\n  bot: '⊥',\n  bottom: '⊥',\n  bowtie: '⋈',\n  boxDL: '╗',\n  boxDR: '╔',\n  boxDl: '╖',\n  boxDr: '╓',\n  boxH: '═',\n  boxHD: '╦',\n  boxHU: '╩',\n  boxHd: '╤',\n  boxHu: '╧',\n  boxUL: '╝',\n  boxUR: '╚',\n  boxUl: '╜',\n  boxUr: '╙',\n  boxV: '║',\n  boxVH: '╬',\n  boxVL: '╣',\n  boxVR: '╠',\n  boxVh: '╫',\n  boxVl: '╢',\n  boxVr: '╟',\n  boxbox: '⧉',\n  boxdL: '╕',\n  boxdR: '╒',\n  boxdl: '┐',\n  boxdr: '┌',\n  boxh: '─',\n  boxhD: '╥',\n  boxhU: '╨',\n  boxhd: '┬',\n  boxhu: '┴',\n  boxminus: '⊟',\n  boxplus: '⊞',\n  boxtimes: '⊠',\n  boxuL: '╛',\n  boxuR: '╘',\n  boxul: '┘',\n  boxur: '└',\n  boxv: '│',\n  boxvH: '╪',\n  boxvL: '╡',\n  boxvR: '╞',\n  boxvh: '┼',\n  boxvl: '┤',\n  boxvr: '├',\n  bprime: '‵',\n  breve: '˘',\n  brvbar: '¦',\n  bscr: '𝒷',\n  bsemi: '⁏',\n  bsim: '∽',\n  bsime: '⋍',\n  bsol: '\\\\',\n  bsolb: '⧅',\n  bsolhsub: '⟈',\n  bull: '•',\n  bullet: '•',\n  bump: '≎',\n  bumpE: '⪮',\n  bumpe: '≏',\n  bumpeq: '≏',\n  cacute: 'ć',\n  cap: '∩',\n  capand: '⩄',\n  capbrcup: '⩉',\n  capcap: '⩋',\n  capcup: '⩇',\n  capdot: '⩀',\n  caps: '∩︀',\n  caret: '⁁',\n  caron: 'ˇ',\n  ccaps: '⩍',\n  ccaron: 'č',\n  ccedil: 'ç',\n  ccirc: 'ĉ',\n  ccups: '⩌',\n  ccupssm: '⩐',\n  cdot: 'ċ',\n  cedil: '¸',\n  cemptyv: '⦲',\n  cent: '¢',\n  centerdot: '·',\n  cfr: '𝔠',\n  chcy: 'ч',\n  check: '✓',\n  checkmark: '✓',\n  chi: 'χ',\n  cir: '○',\n  cirE: '⧃',\n  circ: 'ˆ',\n  circeq: '≗',\n  circlearrowleft: '↺',\n  circlearrowright: '↻',\n  circledR: '®',\n  circledS: 'Ⓢ',\n  circledast: '⊛',\n  circledcirc: '⊚',\n  circleddash: '⊝',\n  cire: '≗',\n  cirfnint: '⨐',\n  cirmid: '⫯',\n  cirscir: '⧂',\n  clubs: '♣',\n  clubsuit: '♣',\n  colon: ':',\n  colone: '≔',\n  coloneq: '≔',\n  comma: ',',\n  commat: '@',\n  comp: '∁',\n  compfn: '∘',\n  complement: '∁',\n  complexes: 'ℂ',\n  cong: '≅',\n  congdot: '⩭',\n  conint: '∮',\n  copf: '𝕔',\n  coprod: '∐',\n  copy: '©',\n  copysr: '℗',\n  crarr: '↵',\n  cross: '✗',\n  cscr: '𝒸',\n  csub: '⫏',\n  csube: '⫑',\n  csup: '⫐',\n  csupe: '⫒',\n  ctdot: '⋯',\n  cudarrl: '⤸',\n  cudarrr: '⤵',\n  cuepr: '⋞',\n  cuesc: '⋟',\n  cularr: '↶',\n  cularrp: '⤽',\n  cup: '∪',\n  cupbrcap: '⩈',\n  cupcap: '⩆',\n  cupcup: '⩊',\n  cupdot: '⊍',\n  cupor: '⩅',\n  cups: '∪︀',\n  curarr: '↷',\n  curarrm: '⤼',\n  curlyeqprec: '⋞',\n  curlyeqsucc: '⋟',\n  curlyvee: '⋎',\n  curlywedge: '⋏',\n  curren: '¤',\n  curvearrowleft: '↶',\n  curvearrowright: '↷',\n  cuvee: '⋎',\n  cuwed: '⋏',\n  cwconint: '∲',\n  cwint: '∱',\n  cylcty: '⌭',\n  dArr: '⇓',\n  dHar: '⥥',\n  dagger: '†',\n  daleth: 'ℸ',\n  darr: '↓',\n  dash: '‐',\n  dashv: '⊣',\n  dbkarow: '⤏',\n  dblac: '˝',\n  dcaron: 'ď',\n  dcy: 'д',\n  dd: 'ⅆ',\n  ddagger: '‡',\n  ddarr: '⇊',\n  ddotseq: '⩷',\n  deg: '°',\n  delta: 'δ',\n  demptyv: '⦱',\n  dfisht: '⥿',\n  dfr: '𝔡',\n  dharl: '⇃',\n  dharr: '⇂',\n  diam: '⋄',\n  diamond: '⋄',\n  diamondsuit: '♦',\n  diams: '♦',\n  die: '¨',\n  digamma: 'ϝ',\n  disin: '⋲',\n  div: '÷',\n  divide: '÷',\n  divideontimes: '⋇',\n  divonx: '⋇',\n  djcy: 'ђ',\n  dlcorn: '⌞',\n  dlcrop: '⌍',\n  dollar: '$',\n  dopf: '𝕕',\n  dot: '˙',\n  doteq: '≐',\n  doteqdot: '≑',\n  dotminus: '∸',\n  dotplus: '∔',\n  dotsquare: '⊡',\n  doublebarwedge: '⌆',\n  downarrow: '↓',\n  downdownarrows: '⇊',\n  downharpoonleft: '⇃',\n  downharpoonright: '⇂',\n  drbkarow: '⤐',\n  drcorn: '⌟',\n  drcrop: '⌌',\n  dscr: '𝒹',\n  dscy: 'ѕ',\n  dsol: '⧶',\n  dstrok: 'đ',\n  dtdot: '⋱',\n  dtri: '▿',\n  dtrif: '▾',\n  duarr: '⇵',\n  duhar: '⥯',\n  dwangle: '⦦',\n  dzcy: 'џ',\n  dzigrarr: '⟿',\n  eDDot: '⩷',\n  eDot: '≑',\n  eacute: 'é',\n  easter: '⩮',\n  ecaron: 'ě',\n  ecir: '≖',\n  ecirc: 'ê',\n  ecolon: '≕',\n  ecy: 'э',\n  edot: 'ė',\n  ee: 'ⅇ',\n  efDot: '≒',\n  efr: '𝔢',\n  eg: '⪚',\n  egrave: 'è',\n  egs: '⪖',\n  egsdot: '⪘',\n  el: '⪙',\n  elinters: '⏧',\n  ell: 'ℓ',\n  els: '⪕',\n  elsdot: '⪗',\n  emacr: 'ē',\n  empty: '∅',\n  emptyset: '∅',\n  emptyv: '∅',\n  emsp13: ' ',\n  emsp14: ' ',\n  emsp: ' ',\n  eng: 'ŋ',\n  ensp: ' ',\n  eogon: 'ę',\n  eopf: '𝕖',\n  epar: '⋕',\n  eparsl: '⧣',\n  eplus: '⩱',\n  epsi: 'ε',\n  epsilon: 'ε',\n  epsiv: 'ϵ',\n  eqcirc: '≖',\n  eqcolon: '≕',\n  eqsim: '≂',\n  eqslantgtr: '⪖',\n  eqslantless: '⪕',\n  equals: '=',\n  equest: '≟',\n  equiv: '≡',\n  equivDD: '⩸',\n  eqvparsl: '⧥',\n  erDot: '≓',\n  erarr: '⥱',\n  escr: 'ℯ',\n  esdot: '≐',\n  esim: '≂',\n  eta: 'η',\n  eth: 'ð',\n  euml: 'ë',\n  euro: '€',\n  excl: '!',\n  exist: '∃',\n  expectation: 'ℰ',\n  exponentiale: 'ⅇ',\n  fallingdotseq: '≒',\n  fcy: 'ф',\n  female: '♀',\n  ffilig: 'ﬃ',\n  fflig: 'ﬀ',\n  ffllig: 'ﬄ',\n  ffr: '𝔣',\n  filig: 'ﬁ',\n  fjlig: 'fj',\n  flat: '♭',\n  fllig: 'ﬂ',\n  fltns: '▱',\n  fnof: 'ƒ',\n  fopf: '𝕗',\n  forall: '∀',\n  fork: '⋔',\n  forkv: '⫙',\n  fpartint: '⨍',\n  frac12: '½',\n  frac13: '⅓',\n  frac14: '¼',\n  frac15: '⅕',\n  frac16: '⅙',\n  frac18: '⅛',\n  frac23: '⅔',\n  frac25: '⅖',\n  frac34: '¾',\n  frac35: '⅗',\n  frac38: '⅜',\n  frac45: '⅘',\n  frac56: '⅚',\n  frac58: '⅝',\n  frac78: '⅞',\n  frasl: '⁄',\n  frown: '⌢',\n  fscr: '𝒻',\n  gE: '≧',\n  gEl: '⪌',\n  gacute: 'ǵ',\n  gamma: 'γ',\n  gammad: 'ϝ',\n  gap: '⪆',\n  gbreve: 'ğ',\n  gcirc: 'ĝ',\n  gcy: 'г',\n  gdot: 'ġ',\n  ge: '≥',\n  gel: '⋛',\n  geq: '≥',\n  geqq: '≧',\n  geqslant: '⩾',\n  ges: '⩾',\n  gescc: '⪩',\n  gesdot: '⪀',\n  gesdoto: '⪂',\n  gesdotol: '⪄',\n  gesl: '⋛︀',\n  gesles: '⪔',\n  gfr: '𝔤',\n  gg: '≫',\n  ggg: '⋙',\n  gimel: 'ℷ',\n  gjcy: 'ѓ',\n  gl: '≷',\n  glE: '⪒',\n  gla: '⪥',\n  glj: '⪤',\n  gnE: '≩',\n  gnap: '⪊',\n  gnapprox: '⪊',\n  gne: '⪈',\n  gneq: '⪈',\n  gneqq: '≩',\n  gnsim: '⋧',\n  gopf: '𝕘',\n  grave: '`',\n  gscr: 'ℊ',\n  gsim: '≳',\n  gsime: '⪎',\n  gsiml: '⪐',\n  gt: '>',\n  gtcc: '⪧',\n  gtcir: '⩺',\n  gtdot: '⋗',\n  gtlPar: '⦕',\n  gtquest: '⩼',\n  gtrapprox: '⪆',\n  gtrarr: '⥸',\n  gtrdot: '⋗',\n  gtreqless: '⋛',\n  gtreqqless: '⪌',\n  gtrless: '≷',\n  gtrsim: '≳',\n  gvertneqq: '≩︀',\n  gvnE: '≩︀',\n  hArr: '⇔',\n  hairsp: ' ',\n  half: '½',\n  hamilt: 'ℋ',\n  hardcy: 'ъ',\n  harr: '↔',\n  harrcir: '⥈',\n  harrw: '↭',\n  hbar: 'ℏ',\n  hcirc: 'ĥ',\n  hearts: '♥',\n  heartsuit: '♥',\n  hellip: '…',\n  hercon: '⊹',\n  hfr: '𝔥',\n  hksearow: '⤥',\n  hkswarow: '⤦',\n  hoarr: '⇿',\n  homtht: '∻',\n  hookleftarrow: '↩',\n  hookrightarrow: '↪',\n  hopf: '𝕙',\n  horbar: '―',\n  hscr: '𝒽',\n  hslash: 'ℏ',\n  hstrok: 'ħ',\n  hybull: '⁃',\n  hyphen: '‐',\n  iacute: 'í',\n  ic: '⁣',\n  icirc: 'î',\n  icy: 'и',\n  iecy: 'е',\n  iexcl: '¡',\n  iff: '⇔',\n  ifr: '𝔦',\n  igrave: 'ì',\n  ii: 'ⅈ',\n  iiiint: '⨌',\n  iiint: '∭',\n  iinfin: '⧜',\n  iiota: '℩',\n  ijlig: 'ĳ',\n  imacr: 'ī',\n  image: 'ℑ',\n  imagline: 'ℐ',\n  imagpart: 'ℑ',\n  imath: 'ı',\n  imof: '⊷',\n  imped: 'Ƶ',\n  in: '∈',\n  incare: '℅',\n  infin: '∞',\n  infintie: '⧝',\n  inodot: 'ı',\n  int: '∫',\n  intcal: '⊺',\n  integers: 'ℤ',\n  intercal: '⊺',\n  intlarhk: '⨗',\n  intprod: '⨼',\n  iocy: 'ё',\n  iogon: 'į',\n  iopf: '𝕚',\n  iota: 'ι',\n  iprod: '⨼',\n  iquest: '¿',\n  iscr: '𝒾',\n  isin: '∈',\n  isinE: '⋹',\n  isindot: '⋵',\n  isins: '⋴',\n  isinsv: '⋳',\n  isinv: '∈',\n  it: '⁢',\n  itilde: 'ĩ',\n  iukcy: 'і',\n  iuml: 'ï',\n  jcirc: 'ĵ',\n  jcy: 'й',\n  jfr: '𝔧',\n  jmath: 'ȷ',\n  jopf: '𝕛',\n  jscr: '𝒿',\n  jsercy: 'ј',\n  jukcy: 'є',\n  kappa: 'κ',\n  kappav: 'ϰ',\n  kcedil: 'ķ',\n  kcy: 'к',\n  kfr: '𝔨',\n  kgreen: 'ĸ',\n  khcy: 'х',\n  kjcy: 'ќ',\n  kopf: '𝕜',\n  kscr: '𝓀',\n  lAarr: '⇚',\n  lArr: '⇐',\n  lAtail: '⤛',\n  lBarr: '⤎',\n  lE: '≦',\n  lEg: '⪋',\n  lHar: '⥢',\n  lacute: 'ĺ',\n  laemptyv: '⦴',\n  lagran: 'ℒ',\n  lambda: 'λ',\n  lang: '⟨',\n  langd: '⦑',\n  langle: '⟨',\n  lap: '⪅',\n  laquo: '«',\n  larr: '←',\n  larrb: '⇤',\n  larrbfs: '⤟',\n  larrfs: '⤝',\n  larrhk: '↩',\n  larrlp: '↫',\n  larrpl: '⤹',\n  larrsim: '⥳',\n  larrtl: '↢',\n  lat: '⪫',\n  latail: '⤙',\n  late: '⪭',\n  lates: '⪭︀',\n  lbarr: '⤌',\n  lbbrk: '❲',\n  lbrace: '{',\n  lbrack: '[',\n  lbrke: '⦋',\n  lbrksld: '⦏',\n  lbrkslu: '⦍',\n  lcaron: 'ľ',\n  lcedil: 'ļ',\n  lceil: '⌈',\n  lcub: '{',\n  lcy: 'л',\n  ldca: '⤶',\n  ldquo: '“',\n  ldquor: '„',\n  ldrdhar: '⥧',\n  ldrushar: '⥋',\n  ldsh: '↲',\n  le: '≤',\n  leftarrow: '←',\n  leftarrowtail: '↢',\n  leftharpoondown: '↽',\n  leftharpoonup: '↼',\n  leftleftarrows: '⇇',\n  leftrightarrow: '↔',\n  leftrightarrows: '⇆',\n  leftrightharpoons: '⇋',\n  leftrightsquigarrow: '↭',\n  leftthreetimes: '⋋',\n  leg: '⋚',\n  leq: '≤',\n  leqq: '≦',\n  leqslant: '⩽',\n  les: '⩽',\n  lescc: '⪨',\n  lesdot: '⩿',\n  lesdoto: '⪁',\n  lesdotor: '⪃',\n  lesg: '⋚︀',\n  lesges: '⪓',\n  lessapprox: '⪅',\n  lessdot: '⋖',\n  lesseqgtr: '⋚',\n  lesseqqgtr: '⪋',\n  lessgtr: '≶',\n  lesssim: '≲',\n  lfisht: '⥼',\n  lfloor: '⌊',\n  lfr: '𝔩',\n  lg: '≶',\n  lgE: '⪑',\n  lhard: '↽',\n  lharu: '↼',\n  lharul: '⥪',\n  lhblk: '▄',\n  ljcy: 'љ',\n  ll: '≪',\n  llarr: '⇇',\n  llcorner: '⌞',\n  llhard: '⥫',\n  lltri: '◺',\n  lmidot: 'ŀ',\n  lmoust: '⎰',\n  lmoustache: '⎰',\n  lnE: '≨',\n  lnap: '⪉',\n  lnapprox: '⪉',\n  lne: '⪇',\n  lneq: '⪇',\n  lneqq: '≨',\n  lnsim: '⋦',\n  loang: '⟬',\n  loarr: '⇽',\n  lobrk: '⟦',\n  longleftarrow: '⟵',\n  longleftrightarrow: '⟷',\n  longmapsto: '⟼',\n  longrightarrow: '⟶',\n  looparrowleft: '↫',\n  looparrowright: '↬',\n  lopar: '⦅',\n  lopf: '𝕝',\n  loplus: '⨭',\n  lotimes: '⨴',\n  lowast: '∗',\n  lowbar: '_',\n  loz: '◊',\n  lozenge: '◊',\n  lozf: '⧫',\n  lpar: '(',\n  lparlt: '⦓',\n  lrarr: '⇆',\n  lrcorner: '⌟',\n  lrhar: '⇋',\n  lrhard: '⥭',\n  lrm: '‎',\n  lrtri: '⊿',\n  lsaquo: '‹',\n  lscr: '𝓁',\n  lsh: '↰',\n  lsim: '≲',\n  lsime: '⪍',\n  lsimg: '⪏',\n  lsqb: '[',\n  lsquo: '‘',\n  lsquor: '‚',\n  lstrok: 'ł',\n  lt: '<',\n  ltcc: '⪦',\n  ltcir: '⩹',\n  ltdot: '⋖',\n  lthree: '⋋',\n  ltimes: '⋉',\n  ltlarr: '⥶',\n  ltquest: '⩻',\n  ltrPar: '⦖',\n  ltri: '◃',\n  ltrie: '⊴',\n  ltrif: '◂',\n  lurdshar: '⥊',\n  luruhar: '⥦',\n  lvertneqq: '≨︀',\n  lvnE: '≨︀',\n  mDDot: '∺',\n  macr: '¯',\n  male: '♂',\n  malt: '✠',\n  maltese: '✠',\n  map: '↦',\n  mapsto: '↦',\n  mapstodown: '↧',\n  mapstoleft: '↤',\n  mapstoup: '↥',\n  marker: '▮',\n  mcomma: '⨩',\n  mcy: 'м',\n  mdash: '—',\n  measuredangle: '∡',\n  mfr: '𝔪',\n  mho: '℧',\n  micro: 'µ',\n  mid: '∣',\n  midast: '*',\n  midcir: '⫰',\n  middot: '·',\n  minus: '−',\n  minusb: '⊟',\n  minusd: '∸',\n  minusdu: '⨪',\n  mlcp: '⫛',\n  mldr: '…',\n  mnplus: '∓',\n  models: '⊧',\n  mopf: '𝕞',\n  mp: '∓',\n  mscr: '𝓂',\n  mstpos: '∾',\n  mu: 'μ',\n  multimap: '⊸',\n  mumap: '⊸',\n  nGg: '⋙̸',\n  nGt: '≫⃒',\n  nGtv: '≫̸',\n  nLeftarrow: '⇍',\n  nLeftrightarrow: '⇎',\n  nLl: '⋘̸',\n  nLt: '≪⃒',\n  nLtv: '≪̸',\n  nRightarrow: '⇏',\n  nVDash: '⊯',\n  nVdash: '⊮',\n  nabla: '∇',\n  nacute: 'ń',\n  nang: '∠⃒',\n  nap: '≉',\n  napE: '⩰̸',\n  napid: '≋̸',\n  napos: 'ŉ',\n  napprox: '≉',\n  natur: '♮',\n  natural: '♮',\n  naturals: 'ℕ',\n  nbsp: ' ',\n  nbump: '≎̸',\n  nbumpe: '≏̸',\n  ncap: '⩃',\n  ncaron: 'ň',\n  ncedil: 'ņ',\n  ncong: '≇',\n  ncongdot: '⩭̸',\n  ncup: '⩂',\n  ncy: 'н',\n  ndash: '–',\n  ne: '≠',\n  neArr: '⇗',\n  nearhk: '⤤',\n  nearr: '↗',\n  nearrow: '↗',\n  nedot: '≐̸',\n  nequiv: '≢',\n  nesear: '⤨',\n  nesim: '≂̸',\n  nexist: '∄',\n  nexists: '∄',\n  nfr: '𝔫',\n  ngE: '≧̸',\n  nge: '≱',\n  ngeq: '≱',\n  ngeqq: '≧̸',\n  ngeqslant: '⩾̸',\n  nges: '⩾̸',\n  ngsim: '≵',\n  ngt: '≯',\n  ngtr: '≯',\n  nhArr: '⇎',\n  nharr: '↮',\n  nhpar: '⫲',\n  ni: '∋',\n  nis: '⋼',\n  nisd: '⋺',\n  niv: '∋',\n  njcy: 'њ',\n  nlArr: '⇍',\n  nlE: '≦̸',\n  nlarr: '↚',\n  nldr: '‥',\n  nle: '≰',\n  nleftarrow: '↚',\n  nleftrightarrow: '↮',\n  nleq: '≰',\n  nleqq: '≦̸',\n  nleqslant: '⩽̸',\n  nles: '⩽̸',\n  nless: '≮',\n  nlsim: '≴',\n  nlt: '≮',\n  nltri: '⋪',\n  nltrie: '⋬',\n  nmid: '∤',\n  nopf: '𝕟',\n  not: '¬',\n  notin: '∉',\n  notinE: '⋹̸',\n  notindot: '⋵̸',\n  notinva: '∉',\n  notinvb: '⋷',\n  notinvc: '⋶',\n  notni: '∌',\n  notniva: '∌',\n  notnivb: '⋾',\n  notnivc: '⋽',\n  npar: '∦',\n  nparallel: '∦',\n  nparsl: '⫽⃥',\n  npart: '∂̸',\n  npolint: '⨔',\n  npr: '⊀',\n  nprcue: '⋠',\n  npre: '⪯̸',\n  nprec: '⊀',\n  npreceq: '⪯̸',\n  nrArr: '⇏',\n  nrarr: '↛',\n  nrarrc: '⤳̸',\n  nrarrw: '↝̸',\n  nrightarrow: '↛',\n  nrtri: '⋫',\n  nrtrie: '⋭',\n  nsc: '⊁',\n  nsccue: '⋡',\n  nsce: '⪰̸',\n  nscr: '𝓃',\n  nshortmid: '∤',\n  nshortparallel: '∦',\n  nsim: '≁',\n  nsime: '≄',\n  nsimeq: '≄',\n  nsmid: '∤',\n  nspar: '∦',\n  nsqsube: '⋢',\n  nsqsupe: '⋣',\n  nsub: '⊄',\n  nsubE: '⫅̸',\n  nsube: '⊈',\n  nsubset: '⊂⃒',\n  nsubseteq: '⊈',\n  nsubseteqq: '⫅̸',\n  nsucc: '⊁',\n  nsucceq: '⪰̸',\n  nsup: '⊅',\n  nsupE: '⫆̸',\n  nsupe: '⊉',\n  nsupset: '⊃⃒',\n  nsupseteq: '⊉',\n  nsupseteqq: '⫆̸',\n  ntgl: '≹',\n  ntilde: 'ñ',\n  ntlg: '≸',\n  ntriangleleft: '⋪',\n  ntrianglelefteq: '⋬',\n  ntriangleright: '⋫',\n  ntrianglerighteq: '⋭',\n  nu: 'ν',\n  num: '#',\n  numero: '№',\n  numsp: ' ',\n  nvDash: '⊭',\n  nvHarr: '⤄',\n  nvap: '≍⃒',\n  nvdash: '⊬',\n  nvge: '≥⃒',\n  nvgt: '>⃒',\n  nvinfin: '⧞',\n  nvlArr: '⤂',\n  nvle: '≤⃒',\n  nvlt: '<⃒',\n  nvltrie: '⊴⃒',\n  nvrArr: '⤃',\n  nvrtrie: '⊵⃒',\n  nvsim: '∼⃒',\n  nwArr: '⇖',\n  nwarhk: '⤣',\n  nwarr: '↖',\n  nwarrow: '↖',\n  nwnear: '⤧',\n  oS: 'Ⓢ',\n  oacute: 'ó',\n  oast: '⊛',\n  ocir: '⊚',\n  ocirc: 'ô',\n  ocy: 'о',\n  odash: '⊝',\n  odblac: 'ő',\n  odiv: '⨸',\n  odot: '⊙',\n  odsold: '⦼',\n  oelig: 'œ',\n  ofcir: '⦿',\n  ofr: '𝔬',\n  ogon: '˛',\n  ograve: 'ò',\n  ogt: '⧁',\n  ohbar: '⦵',\n  ohm: 'Ω',\n  oint: '∮',\n  olarr: '↺',\n  olcir: '⦾',\n  olcross: '⦻',\n  oline: '‾',\n  olt: '⧀',\n  omacr: 'ō',\n  omega: 'ω',\n  omicron: 'ο',\n  omid: '⦶',\n  ominus: '⊖',\n  oopf: '𝕠',\n  opar: '⦷',\n  operp: '⦹',\n  oplus: '⊕',\n  or: '∨',\n  orarr: '↻',\n  ord: '⩝',\n  order: 'ℴ',\n  orderof: 'ℴ',\n  ordf: 'ª',\n  ordm: 'º',\n  origof: '⊶',\n  oror: '⩖',\n  orslope: '⩗',\n  orv: '⩛',\n  oscr: 'ℴ',\n  oslash: 'ø',\n  osol: '⊘',\n  otilde: 'õ',\n  otimes: '⊗',\n  otimesas: '⨶',\n  ouml: 'ö',\n  ovbar: '⌽',\n  par: '∥',\n  para: '¶',\n  parallel: '∥',\n  parsim: '⫳',\n  parsl: '⫽',\n  part: '∂',\n  pcy: 'п',\n  percnt: '%',\n  period: '.',\n  permil: '‰',\n  perp: '⊥',\n  pertenk: '‱',\n  pfr: '𝔭',\n  phi: 'φ',\n  phiv: 'ϕ',\n  phmmat: 'ℳ',\n  phone: '☎',\n  pi: 'π',\n  pitchfork: '⋔',\n  piv: 'ϖ',\n  planck: 'ℏ',\n  planckh: 'ℎ',\n  plankv: 'ℏ',\n  plus: '+',\n  plusacir: '⨣',\n  plusb: '⊞',\n  pluscir: '⨢',\n  plusdo: '∔',\n  plusdu: '⨥',\n  pluse: '⩲',\n  plusmn: '±',\n  plussim: '⨦',\n  plustwo: '⨧',\n  pm: '±',\n  pointint: '⨕',\n  popf: '𝕡',\n  pound: '£',\n  pr: '≺',\n  prE: '⪳',\n  prap: '⪷',\n  prcue: '≼',\n  pre: '⪯',\n  prec: '≺',\n  precapprox: '⪷',\n  preccurlyeq: '≼',\n  preceq: '⪯',\n  precnapprox: '⪹',\n  precneqq: '⪵',\n  precnsim: '⋨',\n  precsim: '≾',\n  prime: '′',\n  primes: 'ℙ',\n  prnE: '⪵',\n  prnap: '⪹',\n  prnsim: '⋨',\n  prod: '∏',\n  profalar: '⌮',\n  profline: '⌒',\n  profsurf: '⌓',\n  prop: '∝',\n  propto: '∝',\n  prsim: '≾',\n  prurel: '⊰',\n  pscr: '𝓅',\n  psi: 'ψ',\n  puncsp: ' ',\n  qfr: '𝔮',\n  qint: '⨌',\n  qopf: '𝕢',\n  qprime: '⁗',\n  qscr: '𝓆',\n  quaternions: 'ℍ',\n  quatint: '⨖',\n  quest: '?',\n  questeq: '≟',\n  quot: '\"',\n  rAarr: '⇛',\n  rArr: '⇒',\n  rAtail: '⤜',\n  rBarr: '⤏',\n  rHar: '⥤',\n  race: '∽̱',\n  racute: 'ŕ',\n  radic: '√',\n  raemptyv: '⦳',\n  rang: '⟩',\n  rangd: '⦒',\n  range: '⦥',\n  rangle: '⟩',\n  raquo: '»',\n  rarr: '→',\n  rarrap: '⥵',\n  rarrb: '⇥',\n  rarrbfs: '⤠',\n  rarrc: '⤳',\n  rarrfs: '⤞',\n  rarrhk: '↪',\n  rarrlp: '↬',\n  rarrpl: '⥅',\n  rarrsim: '⥴',\n  rarrtl: '↣',\n  rarrw: '↝',\n  ratail: '⤚',\n  ratio: '∶',\n  rationals: 'ℚ',\n  rbarr: '⤍',\n  rbbrk: '❳',\n  rbrace: '}',\n  rbrack: ']',\n  rbrke: '⦌',\n  rbrksld: '⦎',\n  rbrkslu: '⦐',\n  rcaron: 'ř',\n  rcedil: 'ŗ',\n  rceil: '⌉',\n  rcub: '}',\n  rcy: 'р',\n  rdca: '⤷',\n  rdldhar: '⥩',\n  rdquo: '”',\n  rdquor: '”',\n  rdsh: '↳',\n  real: 'ℜ',\n  realine: 'ℛ',\n  realpart: 'ℜ',\n  reals: 'ℝ',\n  rect: '▭',\n  reg: '®',\n  rfisht: '⥽',\n  rfloor: '⌋',\n  rfr: '𝔯',\n  rhard: '⇁',\n  rharu: '⇀',\n  rharul: '⥬',\n  rho: 'ρ',\n  rhov: 'ϱ',\n  rightarrow: '→',\n  rightarrowtail: '↣',\n  rightharpoondown: '⇁',\n  rightharpoonup: '⇀',\n  rightleftarrows: '⇄',\n  rightleftharpoons: '⇌',\n  rightrightarrows: '⇉',\n  rightsquigarrow: '↝',\n  rightthreetimes: '⋌',\n  ring: '˚',\n  risingdotseq: '≓',\n  rlarr: '⇄',\n  rlhar: '⇌',\n  rlm: '‏',\n  rmoust: '⎱',\n  rmoustache: '⎱',\n  rnmid: '⫮',\n  roang: '⟭',\n  roarr: '⇾',\n  robrk: '⟧',\n  ropar: '⦆',\n  ropf: '𝕣',\n  roplus: '⨮',\n  rotimes: '⨵',\n  rpar: ')',\n  rpargt: '⦔',\n  rppolint: '⨒',\n  rrarr: '⇉',\n  rsaquo: '›',\n  rscr: '𝓇',\n  rsh: '↱',\n  rsqb: ']',\n  rsquo: '’',\n  rsquor: '’',\n  rthree: '⋌',\n  rtimes: '⋊',\n  rtri: '▹',\n  rtrie: '⊵',\n  rtrif: '▸',\n  rtriltri: '⧎',\n  ruluhar: '⥨',\n  rx: '℞',\n  sacute: 'ś',\n  sbquo: '‚',\n  sc: '≻',\n  scE: '⪴',\n  scap: '⪸',\n  scaron: 'š',\n  sccue: '≽',\n  sce: '⪰',\n  scedil: 'ş',\n  scirc: 'ŝ',\n  scnE: '⪶',\n  scnap: '⪺',\n  scnsim: '⋩',\n  scpolint: '⨓',\n  scsim: '≿',\n  scy: 'с',\n  sdot: '⋅',\n  sdotb: '⊡',\n  sdote: '⩦',\n  seArr: '⇘',\n  searhk: '⤥',\n  searr: '↘',\n  searrow: '↘',\n  sect: '§',\n  semi: ';',\n  seswar: '⤩',\n  setminus: '∖',\n  setmn: '∖',\n  sext: '✶',\n  sfr: '𝔰',\n  sfrown: '⌢',\n  sharp: '♯',\n  shchcy: 'щ',\n  shcy: 'ш',\n  shortmid: '∣',\n  shortparallel: '∥',\n  shy: '­',\n  sigma: 'σ',\n  sigmaf: 'ς',\n  sigmav: 'ς',\n  sim: '∼',\n  simdot: '⩪',\n  sime: '≃',\n  simeq: '≃',\n  simg: '⪞',\n  simgE: '⪠',\n  siml: '⪝',\n  simlE: '⪟',\n  simne: '≆',\n  simplus: '⨤',\n  simrarr: '⥲',\n  slarr: '←',\n  smallsetminus: '∖',\n  smashp: '⨳',\n  smeparsl: '⧤',\n  smid: '∣',\n  smile: '⌣',\n  smt: '⪪',\n  smte: '⪬',\n  smtes: '⪬︀',\n  softcy: 'ь',\n  sol: '/',\n  solb: '⧄',\n  solbar: '⌿',\n  sopf: '𝕤',\n  spades: '♠',\n  spadesuit: '♠',\n  spar: '∥',\n  sqcap: '⊓',\n  sqcaps: '⊓︀',\n  sqcup: '⊔',\n  sqcups: '⊔︀',\n  sqsub: '⊏',\n  sqsube: '⊑',\n  sqsubset: '⊏',\n  sqsubseteq: '⊑',\n  sqsup: '⊐',\n  sqsupe: '⊒',\n  sqsupset: '⊐',\n  sqsupseteq: '⊒',\n  squ: '□',\n  square: '□',\n  squarf: '▪',\n  squf: '▪',\n  srarr: '→',\n  sscr: '𝓈',\n  ssetmn: '∖',\n  ssmile: '⌣',\n  sstarf: '⋆',\n  star: '☆',\n  starf: '★',\n  straightepsilon: 'ϵ',\n  straightphi: 'ϕ',\n  strns: '¯',\n  sub: '⊂',\n  subE: '⫅',\n  subdot: '⪽',\n  sube: '⊆',\n  subedot: '⫃',\n  submult: '⫁',\n  subnE: '⫋',\n  subne: '⊊',\n  subplus: '⪿',\n  subrarr: '⥹',\n  subset: '⊂',\n  subseteq: '⊆',\n  subseteqq: '⫅',\n  subsetneq: '⊊',\n  subsetneqq: '⫋',\n  subsim: '⫇',\n  subsub: '⫕',\n  subsup: '⫓',\n  succ: '≻',\n  succapprox: '⪸',\n  succcurlyeq: '≽',\n  succeq: '⪰',\n  succnapprox: '⪺',\n  succneqq: '⪶',\n  succnsim: '⋩',\n  succsim: '≿',\n  sum: '∑',\n  sung: '♪',\n  sup1: '¹',\n  sup2: '²',\n  sup3: '³',\n  sup: '⊃',\n  supE: '⫆',\n  supdot: '⪾',\n  supdsub: '⫘',\n  supe: '⊇',\n  supedot: '⫄',\n  suphsol: '⟉',\n  suphsub: '⫗',\n  suplarr: '⥻',\n  supmult: '⫂',\n  supnE: '⫌',\n  supne: '⊋',\n  supplus: '⫀',\n  supset: '⊃',\n  supseteq: '⊇',\n  supseteqq: '⫆',\n  supsetneq: '⊋',\n  supsetneqq: '⫌',\n  supsim: '⫈',\n  supsub: '⫔',\n  supsup: '⫖',\n  swArr: '⇙',\n  swarhk: '⤦',\n  swarr: '↙',\n  swarrow: '↙',\n  swnwar: '⤪',\n  szlig: 'ß',\n  target: '⌖',\n  tau: 'τ',\n  tbrk: '⎴',\n  tcaron: 'ť',\n  tcedil: 'ţ',\n  tcy: 'т',\n  tdot: '⃛',\n  telrec: '⌕',\n  tfr: '𝔱',\n  there4: '∴',\n  therefore: '∴',\n  theta: 'θ',\n  thetasym: 'ϑ',\n  thetav: 'ϑ',\n  thickapprox: '≈',\n  thicksim: '∼',\n  thinsp: ' ',\n  thkap: '≈',\n  thksim: '∼',\n  thorn: 'þ',\n  tilde: '˜',\n  times: '×',\n  timesb: '⊠',\n  timesbar: '⨱',\n  timesd: '⨰',\n  tint: '∭',\n  toea: '⤨',\n  top: '⊤',\n  topbot: '⌶',\n  topcir: '⫱',\n  topf: '𝕥',\n  topfork: '⫚',\n  tosa: '⤩',\n  tprime: '‴',\n  trade: '™',\n  triangle: '▵',\n  triangledown: '▿',\n  triangleleft: '◃',\n  trianglelefteq: '⊴',\n  triangleq: '≜',\n  triangleright: '▹',\n  trianglerighteq: '⊵',\n  tridot: '◬',\n  trie: '≜',\n  triminus: '⨺',\n  triplus: '⨹',\n  trisb: '⧍',\n  tritime: '⨻',\n  trpezium: '⏢',\n  tscr: '𝓉',\n  tscy: 'ц',\n  tshcy: 'ћ',\n  tstrok: 'ŧ',\n  twixt: '≬',\n  twoheadleftarrow: '↞',\n  twoheadrightarrow: '↠',\n  uArr: '⇑',\n  uHar: '⥣',\n  uacute: 'ú',\n  uarr: '↑',\n  ubrcy: 'ў',\n  ubreve: 'ŭ',\n  ucirc: 'û',\n  ucy: 'у',\n  udarr: '⇅',\n  udblac: 'ű',\n  udhar: '⥮',\n  ufisht: '⥾',\n  ufr: '𝔲',\n  ugrave: 'ù',\n  uharl: '↿',\n  uharr: '↾',\n  uhblk: '▀',\n  ulcorn: '⌜',\n  ulcorner: '⌜',\n  ulcrop: '⌏',\n  ultri: '◸',\n  umacr: 'ū',\n  uml: '¨',\n  uogon: 'ų',\n  uopf: '𝕦',\n  uparrow: '↑',\n  updownarrow: '↕',\n  upharpoonleft: '↿',\n  upharpoonright: '↾',\n  uplus: '⊎',\n  upsi: 'υ',\n  upsih: 'ϒ',\n  upsilon: 'υ',\n  upuparrows: '⇈',\n  urcorn: '⌝',\n  urcorner: '⌝',\n  urcrop: '⌎',\n  uring: 'ů',\n  urtri: '◹',\n  uscr: '𝓊',\n  utdot: '⋰',\n  utilde: 'ũ',\n  utri: '▵',\n  utrif: '▴',\n  uuarr: '⇈',\n  uuml: 'ü',\n  uwangle: '⦧',\n  vArr: '⇕',\n  vBar: '⫨',\n  vBarv: '⫩',\n  vDash: '⊨',\n  vangrt: '⦜',\n  varepsilon: 'ϵ',\n  varkappa: 'ϰ',\n  varnothing: '∅',\n  varphi: 'ϕ',\n  varpi: 'ϖ',\n  varpropto: '∝',\n  varr: '↕',\n  varrho: 'ϱ',\n  varsigma: 'ς',\n  varsubsetneq: '⊊︀',\n  varsubsetneqq: '⫋︀',\n  varsupsetneq: '⊋︀',\n  varsupsetneqq: '⫌︀',\n  vartheta: 'ϑ',\n  vartriangleleft: '⊲',\n  vartriangleright: '⊳',\n  vcy: 'в',\n  vdash: '⊢',\n  vee: '∨',\n  veebar: '⊻',\n  veeeq: '≚',\n  vellip: '⋮',\n  verbar: '|',\n  vert: '|',\n  vfr: '𝔳',\n  vltri: '⊲',\n  vnsub: '⊂⃒',\n  vnsup: '⊃⃒',\n  vopf: '𝕧',\n  vprop: '∝',\n  vrtri: '⊳',\n  vscr: '𝓋',\n  vsubnE: '⫋︀',\n  vsubne: '⊊︀',\n  vsupnE: '⫌︀',\n  vsupne: '⊋︀',\n  vzigzag: '⦚',\n  wcirc: 'ŵ',\n  wedbar: '⩟',\n  wedge: '∧',\n  wedgeq: '≙',\n  weierp: '℘',\n  wfr: '𝔴',\n  wopf: '𝕨',\n  wp: '℘',\n  wr: '≀',\n  wreath: '≀',\n  wscr: '𝓌',\n  xcap: '⋂',\n  xcirc: '◯',\n  xcup: '⋃',\n  xdtri: '▽',\n  xfr: '𝔵',\n  xhArr: '⟺',\n  xharr: '⟷',\n  xi: 'ξ',\n  xlArr: '⟸',\n  xlarr: '⟵',\n  xmap: '⟼',\n  xnis: '⋻',\n  xodot: '⨀',\n  xopf: '𝕩',\n  xoplus: '⨁',\n  xotime: '⨂',\n  xrArr: '⟹',\n  xrarr: '⟶',\n  xscr: '𝓍',\n  xsqcup: '⨆',\n  xuplus: '⨄',\n  xutri: '△',\n  xvee: '⋁',\n  xwedge: '⋀',\n  yacute: 'ý',\n  yacy: 'я',\n  ycirc: 'ŷ',\n  ycy: 'ы',\n  yen: '¥',\n  yfr: '𝔶',\n  yicy: 'ї',\n  yopf: '𝕪',\n  yscr: '𝓎',\n  yucy: 'ю',\n  yuml: 'ÿ',\n  zacute: 'ź',\n  zcaron: 'ž',\n  zcy: 'з',\n  zdot: 'ż',\n  zeetrf: 'ℨ',\n  zeta: 'ζ',\n  zfr: '𝔷',\n  zhcy: 'ж',\n  zigrarr: '⇝',\n  zopf: '𝕫',\n  zscr: '𝓏',\n  zwj: '‍',\n  zwnj: '‌'\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n * @returns {string}\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, it’s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","@use \"../../shared.scss\" as *;\n@use \"../../themed.scss\" as *;\n\n.posts_content {\n  @include text_spacing();\n\n  a {\n    @include interactive_secondary();\n    line-height: 1.5rem;\n  }\n}\n\n.posts_content_code {\n  @include card();\n  @include text_spacing();\n}\n"],"names":["$lKtKv","parcelRequire","$5b827356140ac14a$export$2e2bcd8739ae039","id","$hvI8U","useParams","content","data","title","date","$5gZKO","default","theme","$hTxeE","useAppSelector","state","jsxs","jsx","$la7Ay","Card","primary","secondary","Date","toDateString","$g4uyC","ReactMarkdown","className","$parcel$interopDefault","$b6AxM","posts_content","children","components","code","inline","props","match","exec","$cqg0o","SyntaxHighlighter","posts_content_code","String","replace","language","style","$ee91V","Theme","DARKMODE","styleDark","styleLight","$fPSy9","$bb34b91bb72ef434$var$own","hasOwnProperty","$bb34b91bb72ef434$var$changelog","$bb34b91bb72ef434$var$deprecated","plugins","to","renderers","astPlugins","allowDangerousHtml","escapeHtml","source","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","$bb34b91bb72ef434$export$83ef7ab426386201","options","key","call","deprecation","console","warn","processor","$27vyP","unified","use","$73kRC","remarkPlugins","$kJTlh","remarkRehypeOptions","rehypePlugins","$1p9m5","file","$8EANy","VFile","value","undefined","hastNode","runSync","parse","type","TypeError","result","createElement","Fragment","$hM85M","childrenToReact","schema","$aY292","html","listDepth","propTypes","$4RND8","string","allowElement","func","allowedElements","arrayOf","disallowedElements","unwrapDisallowed","bool","oneOfType","object","any","sourcePos","rawSourcePos","skipHtml","includeElementIndex","transformLinkUri","linkTarget","transformImageUri","$1Tv42","$64ce9a830b94da6b$var$order","$64ce9a830b94da6b$export$93dff69eb10dc7ce","constructor","$64ce9a830b94da6b$var$buffer","$jfDid","isUrl","path","this","messages","history","cwd","$cz21B","proc","stored","map","prop","index","length","includes","$guBlg","urlToPath","$64ce9a830b94da6b$var$assertNonEmpty","push","dirname","$acHbX","$64ce9a830b94da6b$var$assertPath","basename","join","$64ce9a830b94da6b$var$assertPart","extname","charCodeAt","Error","stem","toString","encoding","message","reason","place","origin","$c9gcl","VFileMessage","name","fatal","info","fail","part","sep","module","exports","obj","isBuffer","$gHjNW","$8d82e3e29a1417e2$export$752e5c445fe834ef","parts","position","start","line","column","end","super","indexOf","slice","stringifyPosition","stack","ruleId","actual","expected","url","note","prototype","$c2800647e46698b3$export$c304dd45fe166145","$c2800647e46698b3$var$position","$c2800647e46698b3$var$point","point","$c2800647e46698b3$var$index","pos","$76dc8763f1906fc2$export$bb654e07daaf8c3a","ext","$76dc8763f1906fc2$var$assertPath","seenNonSlash","firstNonSlashEnd","extIndex","unmatchedSlash","startPart","startDot","preDotState","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","lastIndexOf","$76dc8763f1906fc2$var$normalizeString","$76dc8763f1906fc2$var$normalize","JSON","stringify","$925a52fec1b90daa$export$97a5aaf482767187","$c01c6a0463602ee5$export$9b2b676c902de799","URL","error","protocol","hostname","pathname","third","decodeURIComponent","$c01c6a0463602ee5$var$getPathFromURLPosix","$e03de5c8a9f67c93$export$8304a22d431f958","fileUrlOrPath","href","$dEvVi","$18b4b78c0087b74e$export$7cc1b2fe10c52bb","$18b4b78c0087b74e$var$base","transformers","$gpg7e","trough","attachers","frozen","namespace","freezeIndex","arguments","$18b4b78c0087b74e$var$assertUnfrozen","$18b4b78c0087b74e$var$own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","Array","isArray","addList","addPreset","Object","assign","add","plugin","entry","$4ld8y","$eWaCG","doc","$18b4b78c0087b74e$var$vfile","$18b4b78c0087b74e$var$assertParser","$18b4b78c0087b74e$var$newable","node","$18b4b78c0087b74e$var$assertCompiler","$18b4b78c0087b74e$var$assertNode","compile","run","callback","Promise","executor","resolve","reject","done","tree","complete","$18b4b78c0087b74e$var$assertDone","bail","process","processSync","destination","$18b4b78c0087b74e$var$keys","asyncName","Boolean","$18b4b78c0087b74e$var$looksLikeAVFile","$9f07c614b2a686d3$export$dd911e13ecb11e05","$adfeb8f4e98e800c$var$hasOwn","$adfeb8f4e98e800c$var$toStr","$adfeb8f4e98e800c$var$defineProperty","defineProperty","$adfeb8f4e98e800c$var$gOPD","getOwnPropertyDescriptor","$adfeb8f4e98e800c$var$isArray","arr","$adfeb8f4e98e800c$var$isPlainObject","hasOwnConstructor","hasIsPrototypeOf","$adfeb8f4e98e800c$var$setProperty","target","enumerable","configurable","newValue","writable","$adfeb8f4e98e800c$var$getProperty","extend","src","copy","copyIsArray","clone","i","deep","$329350557b958064$export$2e2bcd8739ae039","getPrototypeOf","Symbol","toStringTag","iterator","$bf1b7b5cf378e900$export$91b56f5ca106aa43","fns","pipeline","values","middlewareIndex","pop","next","output","fn","middleware","called","wrapped","parameters","fnExpectsCallback","apply","then","$bf1b7b5cf378e900$export$4997ffc0176396a6","middelware","$5228ff543a462260$export$2e2bcd8739ae039","$1YdnK","$a07843732b3ecc17$export$2e2bcd8739ae039","fromMarkdown","extensions","mdastExtensions","$2lcqI","$16f5c6747a84503c$var$own","$16f5c6747a84503c$export$d744d789c09bfde6","config","transforms","canContainEols","enter","autolink","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","heading","blockQuote","characterEscape","characterReference","codeFenced","codeFlow","codeFencedFenceInfo","buffer","codeFencedFenceMeta","codeIndented","codeText","codeTextData","codeFlowValue","definition","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreakEscape","hardBreak","hardBreakTrailing","htmlFlow","htmlFlowData","htmlText","htmlTextData","image","label","listItem","listItemValue","onenterlistitemvalue","listOrdered","list","onenterlistordered","listUnordered","paragraph","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","thematicBreak","exit","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","lineEnding","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","$16f5c6747a84503c$var$configure","events","context","tokenStack","resume","setData","getData","listStack","prepareList","handler","sliceSerialize","tail","$16f5c6747a84503c$var$defaultOnError","$16f5c6747a84503c$var$point","offset","lineIndex","firstBlankLineIndex","atMarker","containerBalance","listSpread","event","tailIndex","tailEvent","_spread","splice","create","and","open","token","errorHandler","close","onExitError","parseInt","lang","meta","identifier","$3ac70","normalizeIdentifier","toLowerCase","depth","text","referenceType","ancestor","$8OH7a","decodeString","fragment","alt","$gZtaX","decodeNumericCharacterReference","$3HEPL","decodeNamedCharacterReference","ordered","spread","checked","$16f5c6747a84503c$var$compiler","$3gGaD","postprocess","$cTtHt","document","write","$lw7ce","preprocess","d","combined","$16f5c6747a84503c$var$extension","extension","right","left","$1b472f46fc8ca74f$export$f84e8e69fd4488a5","includeImageAlt","$1b472f46fc8ca74f$var$one","$1b472f46fc8ca74f$var$node","$1b472f46fc8ca74f$var$all","$9UGYc","$9631a8efb162102f$export$98e6a39c04603d36","parser","defined","lazy","combineExtensions","$6HWiY","concat","$2oNzp","$lAK8r","flow","$gxpzI","$l2tD0","initial","from","$8MiTe","createTokenizer","$2Qp1S","$737aacf765ba6d74$var$hasOwnProperty","$737aacf765ba6d74$export$86a865d89ef3c690","all","$737aacf765ba6d74$var$syntaxExtension","hook","$737aacf765ba6d74$var$constructs","existing","before","$2123da67b38b8197$export$869882364835d202","remove","items","chunkStart","unshift","$2123da67b38b8197$export$4cbf152802aa238","$jH5RB","$1bf446438b8bfa65$export$a7db06668cad9adb","tokenize","effects","contentStart","attempt","constructs","contentInitial","consume","factorySpace","lineStart","previous","contentType","$iUvtM","markdownLineEnding","$e56694df1d786fea$export$ae105c1eb063a0a2","ok","max","limit","size","markdownSpace","prefix","$7No4A","$dc45e01a14bb512b$export$d65d6b62c24d5436","$dc45e01a14bb512b$var$regexCheck","$dc45e01a14bb512b$export$ca8b5b1a6c320e6e","$dc45e01a14bb512b$export$eca2752363989806","$dc45e01a14bb512b$export$75c76db11865a9f4","$dc45e01a14bb512b$export$35794a7d1db99380","$dc45e01a14bb512b$export$4397998b34fe597d","$dc45e01a14bb512b$export$67dbf494fc8394df","$dc45e01a14bb512b$export$a30284361b3814b7","$dc45e01a14bb512b$export$34a1dff1c0936953","$dc45e01a14bb512b$export$2c6cf65c1127992a","$dc45e01a14bb512b$export$a0ff789c034ffdf4","$dc45e01a14bb512b$export$aa04114dd888a7a0","unicodePunctuationRegex","regex","test","fromCharCode","$5acfc86363294f46$export$85b5101f24802e8c","$fb80bf3aef2e1300$export$5a7bfc01df82fcd1","self","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","$fb80bf3aef2e1300$var$containerConstruct","thereIsANewContainer","thereIsNoNewContainer","now","containerContinue","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","seen","nok","disable","null","$iJpmS","$c0a39111b1e2f39f$export$ccc7b0636abaffc3","$7jf0e","blankLine","flowInitial","afterConstruct","$5525f1ffc20239bb$export$d50d28ce3ab2a612","partial","$da301b88381bfdbf$export$a7db06668cad9adb","contentEnd","$da301b88381bfdbf$var$continuationConstruct","contentContinue","$jsYfy","subtokenize","prefixed","$e2bf5e361d23365c$export$12949d1dd00fddf4","jumps","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","$e2bf5e361d23365c$var$subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","$f510c46d167f2895$export$50397835cbfdbc24","resolveAll","$f510c46d167f2895$var$createResolver","$f510c46d167f2895$export$22b082955e083ec3","$f510c46d167f2895$var$initializeFactory","$f510c46d167f2895$export$6f093cfa640b7166","field","notText","atBreak","$f510c46d167f2895$var$resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","_bufferIndex","$664175902a9bcd27$export$ae34f10ee4b29837","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","$664175902a9bcd27$var$serializeChunks","main","$km4eF","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","$664175902a9bcd27$var$sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","$ed1925d082960da2$export$3ff61ec196ff408b","$5jHEg","$4e23fc6993cb2e1b$export$5a7bfc01df82fcd1","$1PP7G","$gNBbl","$4e23fc6993cb2e1b$export$5a2181fb44b58173","$bvMUE","$4e23fc6993cb2e1b$export$cf8bead395eff824","$aqw4N","$4e23fc6993cb2e1b$export$ccc7b0636abaffc3","$kSTx0","headingAtx","$jEoWp","setextUnderline","$4vLKK","$gs3o4","$4e23fc6993cb2e1b$export$22b082955e083ec3","$2Qs41","$gEHeN","$4e23fc6993cb2e1b$export$6f093cfa640b7166","$hmr3Q","$8be8Q","labelStartImage","$6nTV3","attention","$OcEpt","$bgjqA","$a9cNg","labelStartLink","$h2kyO","$dz9VB","labelEnd","$8zB3f","$4e23fc6993cb2e1b$export$d44f260a3f9b69f5","resolver","$4e23fc6993cb2e1b$export$b9c0b60d74426aea","$4e23fc6993cb2e1b$export$e20fbacbb41798b","$4a604472ee2b5b37$export$45b92471da762af7","attentionMarkers","$9oBa2","classifyCharacter","marker","sequence","after","_open","_close","group","openingSequence","closingSequence","nextEvents","$4a604472ee2b5b37$var$movePoint","insideSpan","$6d732e591ba9f10c$export$e3902bc0d835cad0","markdownLineEndingOrSpace","unicodeWhitespace","unicodePunctuation","$096e7bce554321fc$export$17ddf85e4c916ad6","asciiAlpha","schemeOrEmailAtext","asciiAtext","emailAtext","asciiAlphanumeric","schemeInsideOrEmailAtext","urlInside","asciiControl","emailAtSignOrDot","emailLabel","emailValue","$c3ae10810aeedc61$export$200dcd0a5903c968","$c201ebe1baa7ee0e$export$2005478564e78d96","asciiPunctuation","$212634ff078dd1a4$export$e31905600aaf3d8e","numeric","asciiHexDigit","asciiDigit","$HyG4B","$2b251002bd854cfd$var$own","$2b251002bd854cfd$export$289b6a6320f709b4","characterEntities","$082eea842a54ecda$export$ec810d1aafce79a7","AElig","AMP","Aacute","Abreve","Acirc","Acy","Afr","Agrave","Alpha","Amacr","And","Aogon","Aopf","ApplyFunction","Aring","Ascr","Assign","Atilde","Auml","Backslash","Barv","Barwed","Bcy","Because","Bernoullis","Beta","Bfr","Bopf","Breve","Bscr","Bumpeq","CHcy","COPY","Cacute","Cap","CapitalDifferentialD","Cayleys","Ccaron","Ccedil","Ccirc","Cconint","Cdot","Cedilla","CenterDot","Cfr","Chi","CircleDot","CircleMinus","CirclePlus","CircleTimes","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","Colon","Colone","Congruent","Conint","ContourIntegral","Copf","Coproduct","CounterClockwiseContourIntegral","Cross","Cscr","Cup","CupCap","DD","DDotrahd","DJcy","DScy","DZcy","Dagger","Darr","Dashv","Dcaron","Dcy","Del","Delta","Dfr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","Diamond","DifferentialD","Dopf","Dot","DotDot","DotEqual","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","DownArrowBar","DownArrowUpArrow","DownBreve","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","Downarrow","Dscr","Dstrok","ENG","ETH","Eacute","Ecaron","Ecirc","Ecy","Edot","Efr","Egrave","Element","Emacr","EmptySmallSquare","EmptyVerySmallSquare","Eogon","Eopf","Epsilon","Equal","EqualTilde","Equilibrium","Escr","Esim","Eta","Euml","Exists","ExponentialE","Fcy","Ffr","FilledSmallSquare","FilledVerySmallSquare","Fopf","ForAll","Fouriertrf","Fscr","GJcy","GT","Gamma","Gammad","Gbreve","Gcedil","Gcirc","Gcy","Gdot","Gfr","Gg","Gopf","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","Gt","HARDcy","Hacek","Hat","Hcirc","Hfr","HilbertSpace","Hopf","HorizontalLine","Hscr","Hstrok","HumpDownHump","HumpEqual","IEcy","IJlig","IOcy","Iacute","Icirc","Icy","Idot","Ifr","Igrave","Im","Imacr","ImaginaryI","Implies","Int","Integral","Intersection","InvisibleComma","InvisibleTimes","Iogon","Iopf","Iota","Iscr","Itilde","Iukcy","Iuml","Jcirc","Jcy","Jfr","Jopf","Jscr","Jsercy","Jukcy","KHcy","KJcy","Kappa","Kcedil","Kcy","Kfr","Kopf","Kscr","LJcy","LT","Lacute","Lambda","Lang","Laplacetrf","Larr","Lcaron","Lcedil","Lcy","LeftAngleBracket","LeftArrow","LeftArrowBar","LeftArrowRightArrow","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","LeftRightArrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","Leftarrow","Leftrightarrow","LessEqualGreater","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessTilde","Lfr","Ll","Lleftarrow","Lmidot","LongLeftArrow","LongLeftRightArrow","LongRightArrow","Longleftarrow","Longleftrightarrow","Longrightarrow","Lopf","LowerLeftArrow","LowerRightArrow","Lscr","Lsh","Lstrok","Lt","Map","Mcy","MediumSpace","Mellintrf","Mfr","MinusPlus","Mopf","Mscr","Mu","NJcy","Nacute","Ncaron","Ncedil","Ncy","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NestedGreaterGreater","NestedLessLess","NewLine","Nfr","NoBreak","NonBreakingSpace","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","Nscr","Ntilde","Nu","OElig","Oacute","Ocirc","Ocy","Odblac","Ofr","Ograve","Omacr","Omega","Omicron","Oopf","OpenCurlyDoubleQuote","OpenCurlyQuote","Or","Oscr","Oslash","Otilde","Otimes","Ouml","OverBar","OverBrace","OverBracket","OverParenthesis","PartialD","Pcy","Pfr","Phi","Pi","PlusMinus","Poincareplane","Popf","Pr","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Prime","Product","Proportion","Proportional","Pscr","Psi","QUOT","Qfr","Qopf","Qscr","RBarr","REG","Racute","Rang","Rarr","Rarrtl","Rcaron","Rcedil","Rcy","Re","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","Rfr","Rho","RightAngleBracket","RightArrow","RightArrowBar","RightArrowLeftArrow","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","Rightarrow","Ropf","RoundImplies","Rrightarrow","Rscr","Rsh","RuleDelayed","SHCHcy","SHcy","SOFTcy","Sacute","Sc","Scaron","Scedil","Scirc","Scy","Sfr","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","Sigma","SmallCircle","Sopf","Sqrt","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","Sscr","Star","Sub","Subset","SubsetEqual","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","SuchThat","Sum","Sup","Superset","SupersetEqual","Supset","THORN","TRADE","TSHcy","TScy","Tab","Tau","Tcaron","Tcedil","Tcy","Tfr","Therefore","Theta","ThickSpace","ThinSpace","Tilde","TildeEqual","TildeFullEqual","TildeTilde","Topf","TripleDot","Tscr","Tstrok","Uacute","Uarr","Uarrocir","Ubrcy","Ubreve","Ucirc","Ucy","Udblac","Ufr","Ugrave","Umacr","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","Uopf","UpArrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","UpEquilibrium","UpTee","UpTeeArrow","Uparrow","Updownarrow","UpperLeftArrow","UpperRightArrow","Upsi","Upsilon","Uring","Uscr","Utilde","Uuml","VDash","Vbar","Vcy","Vdash","Vdashl","Vee","Verbar","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","Vopf","Vscr","Vvdash","Wcirc","Wedge","Wfr","Wopf","Wscr","Xfr","Xi","Xopf","Xscr","YAcy","YIcy","YUcy","Yacute","Ycirc","Ycy","Yfr","Yopf","Yscr","Yuml","ZHcy","Zacute","Zcaron","Zcy","Zdot","ZeroWidthSpace","Zeta","Zfr","Zopf","Zscr","aacute","abreve","ac","acE","acd","acirc","acute","acy","aelig","af","afr","agrave","alefsym","aleph","alpha","amacr","amalg","amp","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","aogon","aopf","ap","apE","apacir","ape","apid","apos","approx","approxeq","aring","ascr","ast","asymp","asympeq","atilde","auml","awconint","awint","bNot","backcong","backepsilon","backprime","backsim","backsimeq","barvee","barwed","barwedge","bbrk","bbrktbrk","bcong","bcy","bdquo","becaus","because","bemptyv","bepsi","bernou","beta","beth","between","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bnot","bopf","bot","bottom","bowtie","boxDL","boxDR","boxDl","boxDr","boxH","boxHD","boxHU","boxHd","boxHu","boxUL","boxUR","boxUl","boxUr","boxV","boxVH","boxVL","boxVR","boxVh","boxVl","boxVr","boxbox","boxdL","boxdR","boxdl","boxdr","boxh","boxhD","boxhU","boxhd","boxhu","boxminus","boxplus","boxtimes","boxuL","boxuR","boxul","boxur","boxv","boxvH","boxvL","boxvR","boxvh","boxvl","boxvr","bprime","breve","brvbar","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","bumpeq","cacute","cap","capand","capbrcup","capcap","capcup","capdot","caps","caret","caron","ccaps","ccaron","ccedil","ccirc","ccups","ccupssm","cdot","cedil","cemptyv","cent","centerdot","cfr","chcy","checkmark","chi","cir","cirE","circ","circeq","circlearrowleft","circlearrowright","circledR","circledS","circledast","circledcirc","circleddash","cire","cirfnint","cirmid","cirscir","clubs","clubsuit","colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","conint","copf","coprod","copysr","crarr","cross","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dArr","dHar","dagger","daleth","darr","dash","dashv","dbkarow","dblac","dcaron","dcy","dd","ddagger","ddarr","ddotseq","deg","delta","demptyv","dfisht","dfr","dharl","dharr","diam","diamond","diamondsuit","diams","die","digamma","disin","div","divide","divideontimes","divonx","djcy","dlcorn","dlcrop","dollar","dopf","dot","doteq","doteqdot","dotminus","dotplus","dotsquare","doublebarwedge","downarrow","downdownarrows","downharpoonleft","downharpoonright","drbkarow","drcorn","drcrop","dscr","dscy","dsol","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","dzcy","dzigrarr","eDDot","eDot","eacute","easter","ecaron","ecir","ecirc","ecolon","ecy","edot","ee","efDot","efr","eg","egrave","egs","egsdot","el","elinters","ell","els","elsdot","emacr","empty","emptyset","emptyv","emsp13","emsp14","emsp","eng","ensp","eogon","eopf","epar","eparsl","eplus","epsi","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equals","equest","equiv","equivDD","eqvparsl","erDot","erarr","escr","esdot","esim","eta","eth","euml","euro","excl","exist","expectation","exponentiale","fallingdotseq","fcy","female","ffilig","fflig","ffllig","ffr","filig","fjlig","flat","fllig","fltns","fnof","fopf","forall","fork","forkv","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","gE","gEl","gacute","gamma","gammad","gap","gbreve","gcirc","gcy","gdot","ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","gfr","gg","ggg","gimel","gjcy","gl","glE","gla","glj","gnE","gnap","gnapprox","gne","gneq","gneqq","gnsim","gopf","grave","gscr","gsim","gsime","gsiml","gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","hArr","hairsp","half","hamilt","hardcy","harr","harrcir","harrw","hbar","hcirc","hearts","heartsuit","hellip","hercon","hfr","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","hscr","hslash","hstrok","hybull","hyphen","iacute","ic","icirc","icy","iecy","iexcl","iff","ifr","igrave","ii","iiiint","iiint","iinfin","iiota","ijlig","imacr","imagline","imagpart","imath","imof","imped","in","incare","infin","infintie","inodot","int","intcal","integers","intercal","intlarhk","intprod","iocy","iogon","iopf","iota","iprod","iquest","iscr","isin","isinE","isindot","isins","isinsv","isinv","it","itilde","iukcy","iuml","jcirc","jcy","jfr","jmath","jopf","jscr","jsercy","jukcy","kappa","kappav","kcedil","kcy","kfr","kgreen","khcy","kjcy","kopf","kscr","lAarr","lArr","lAtail","lBarr","lE","lEg","lHar","lacute","laemptyv","lagran","lambda","langd","langle","lap","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","lcaron","lcedil","lceil","lcub","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftthreetimes","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessgtr","lesssim","lfisht","lfloor","lfr","lg","lgE","lhard","lharu","lharul","lhblk","ljcy","ll","llarr","llcorner","llhard","lltri","lmidot","lmoust","lmoustache","lnE","lnap","lnapprox","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok","lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltrPar","ltri","ltrie","ltrif","lurdshar","luruhar","lvertneqq","lvnE","mDDot","macr","male","malt","maltese","mapsto","mapstodown","mapstoleft","mapstoup","mcomma","mcy","mdash","measuredangle","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","mlcp","mldr","mnplus","models","mopf","mp","mscr","mstpos","mu","multimap","mumap","nGg","nGt","nGtv","nLeftarrow","nLeftrightarrow","nLl","nLt","nLtv","nRightarrow","nVDash","nVdash","nabla","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy","ndash","ne","neArr","nearhk","nearr","nearrow","nedot","nequiv","nesear","nesim","nexist","nexists","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","ngsim","ngt","ngtr","nhArr","nharr","nhpar","ni","nis","nisd","niv","njcy","nlArr","nlE","nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nlsim","nlt","nltri","nltrie","nmid","nopf","not","notin","notinE","notindot","notinva","notinvb","notinvc","notni","notniva","notnivb","notnivc","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nu","num","numero","numsp","nvDash","nvHarr","nvap","nvdash","nvge","nvgt","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwArr","nwarhk","nwarr","nwarrow","nwnear","oS","oacute","oast","ocir","ocirc","ocy","odash","odblac","odiv","odot","odsold","oelig","ofcir","ofr","ogon","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","omacr","omega","omicron","omid","ominus","oopf","opar","operp","oplus","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oscr","oslash","osol","otilde","otimes","otimesas","ouml","ovbar","par","para","parallel","parsim","parsl","pcy","percnt","period","permil","perp","pertenk","pfr","phi","phiv","phmmat","phone","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusmn","plussim","plustwo","pm","pointint","popf","pound","pr","prE","prap","prcue","pre","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnE","prnap","prnsim","prod","profalar","profline","profsurf","propto","prsim","prurel","pscr","psi","puncsp","qfr","qint","qopf","qprime","qscr","quaternions","quatint","quest","questeq","quot","rAarr","rArr","rAtail","rBarr","rHar","race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","rcaron","rcedil","rceil","rcub","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","real","realine","realpart","reals","rect","reg","rfisht","rfloor","rfr","rhard","rharu","rharul","rho","rhov","rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","rightthreetimes","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","ropf","roplus","rotimes","rpar","rpargt","rppolint","rrarr","rsaquo","rscr","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","ruluhar","rx","sacute","sbquo","sc","scE","scap","scaron","sccue","sce","scedil","scirc","scnE","scnap","scnsim","scpolint","scsim","scy","sdot","sdotb","sdote","seArr","searhk","searr","searrow","sect","semi","seswar","setminus","setmn","sext","sfr","sfrown","sharp","shchcy","shcy","shortmid","shortparallel","shy","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","softcy","sol","solb","solbar","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squarf","squf","srarr","sscr","ssetmn","ssmile","sstarf","star","starf","straightepsilon","straightphi","strns","sub","subE","subdot","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","sum","sung","sup1","sup2","sup3","sup","supE","supdot","supdsub","supe","supedot","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swArr","swarhk","swarr","swarrow","swnwar","szlig","tau","tbrk","tcaron","tcedil","tcy","tdot","telrec","tfr","there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thinsp","thkap","thksim","thorn","tilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","topf","topfork","tosa","tprime","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","triplus","trisb","tritime","trpezium","tscr","tscy","tshcy","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","uArr","uHar","uacute","uarr","ubrcy","ubreve","ucirc","ucy","udarr","udblac","udhar","ufisht","ufr","ugrave","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","umacr","uml","uogon","uopf","uparrow","updownarrow","upharpoonleft","upharpoonright","uplus","upsi","upsih","upsilon","upuparrows","urcorn","urcorner","urcrop","uring","urtri","uscr","utdot","utilde","utri","utrif","uuarr","uuml","uwangle","vArr","vBar","vBarv","vDash","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vcy","vdash","vee","veebar","veeeq","vellip","verbar","vert","vfr","vltri","vnsub","vnsup","vopf","vprop","vrtri","vscr","vsubnE","vsubne","vsupnE","vsupne","vzigzag","wcirc","wedbar","wedge","wedgeq","weierp","wfr","wopf","wp","wr","wreath","wscr","xcap","xcirc","xcup","xdtri","xfr","xhArr","xharr","xi","xlArr","xlarr","xmap","xnis","xodot","xopf","xoplus","xotime","xrArr","xrarr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","yacute","yacy","ycirc","ycy","yen","yfr","yicy","yopf","yscr","yucy","yuml","zacute","zcaron","zcy","zdot","zeetrf","zeta","zfr","zhcy","zigrarr","zopf","zscr","zwj","zwnj","$bfa1e3841184db91$export$c23e4921f8d87e7c","closingFenceConstruct","closingSequenceStart","sizeOpen","closingSequenceEnd","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","$797536ce4d4ef541$export$47910b7ab28d1853","afterStartPrefix","afterPrefix","$797536ce4d4ef541$var$indentedContent","$63de5539f73334db$export$d24f93e715f9df88","tailExitIndex","headEnterIndex","$DVYDN","$861888066e94d267$export$69f215ed977cdb73","$fDPPf","factoryLabel","labelAfter","$e4FUu","factoryWhitespace","factoryDestination","$861888066e94d267$var$titleConstruct","$hFl17","factoryTitle","$07809dac6ed252d2$export$2e6c8deaa96af245","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","$b632b306b4fd5043$export$7b768614d8ba97a7","markerType","labelEscape","$cdc6918eb8aa8f3b$export$f970569cc855e483","atFirstTitleBreak","atTitleBreak","titleEscape","$a3f1f2e26d47e9ab$export$1f27bd1aa33ce173","$24dbb37024226bd1$export$806d55e226cfcd08","toUpperCase","$c67292758c3a9417$export$86c573ab9e06f418","$f343ed25fab8a66c$export$3871e9deb360695c","fenceOpenInside","headingBreak","$348f19684487bb7f$export$476ac411cb7d0d8f","kind","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","$gZx53","htmlRawNames","htmlBlockNames","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","$348f19684487bb7f$var$nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","$c5ec00f1b3028007$export$7364aee1c59d1879","$c5ec00f1b3028007$export$948e66da505d080","$8330424d747ed971$export$398af27f284914fe","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","$9e063ebe1e586afe$export$470a5dafbbf62654","labelStart","_balanced","_inactive","balanced","afterLabelEnd","$9e063ebe1e586afe$var$resourceConstruct","$9e063ebe1e586afe$var$fullReferenceConstruct","$9e063ebe1e586afe$var$collapsedReferenceConstruct","media","destinationAfter","afterLabel","$5f4a520d3aad06eb$export$3d754936e25aa5f5","$01e81346ffe0e376$export$5c0cee0701a3b584","$ca397b7ad9fc1681$export$8e62e0ad51c97b2","$156235cc4d370751$export$8837f4fc672e936d","initialSize","inside","onBlank","$156235cc4d370751$var$listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","$156235cc4d370751$var$indentConstruct","$3df095c4dce56453$export$ba7b13e047416c03","$e4e5198b081c05d3$export$e104e2de391dfde9","$faa22b241d1ff8fd$var$search","$faa22b241d1ff8fd$export$fc37fe19dfda43ee","atCarriageReturn","endPosition","lastIndex","Math","ceil","$261393ead1603790$export$bd0e6e1378a871d7","$c5e8f98ad61a9793$export$15a69557afac2c20","base","$66b46fe490d28799$var$characterEscapeOrReference","$66b46fe490d28799$export$a0fb664af7d0cc44","$66b46fe490d28799$var$decode","$0","$1","$2","head","hex","$82jGJ","$f192f06803e471a7$export$2e2bcd8739ae039","toHast","$f192f06803e471a7$var$bridge","$f192f06803e471a7$var$mutate","$1j7pP","$5d9dc8503281e181$export$c0e4c5cf07538633","$56qaC","createState","one","foot","footer","$eznPp","$0f3d515b9a22cf98$export$adb608be33961c98","listItems","footnoteOrder","footnoteById","safeId","normalizeUri","referenceIndex","backReferences","footnoteCounts","backReference","properties","clobberPrefix","dataFootnoteBackref","ariaLabel","footnoteBackLabel","tailTail","wrap","patch","dataFootnotes","footnoteLabelTagName","footnoteLabelProperties","footnoteLabel","$a9b6d15784ed8a88$export$e42a3e39590d28b5","skip","encodeURIComponent","$b08403b79a57c87d$var$characterReferences","$b08403b79a57c87d$export$c564cdbbe6da493","$ei8wA","$3b71d02d19a2f9fc$var$own","$3b71d02d19a2f9fc$export$e6a0daad8304de","dangerous","unknownHandler","passThrough","handlers","$1u0y6","$kCihy","definitions","$3b71d02d19a2f9fc$var$patch","applyData","$3b71d02d19a2f9fc$var$applyData","parent","$3b71d02d19a2f9fc$export$80bf7733f1207381","$3b71d02d19a2f9fc$export$84bf76cd7afc7469","$3b71d02d19a2f9fc$export$4997ffc0176396a6","augment","visit","hName","hProperties","hChildren","ctx","$8bjnJ","generated","$40w8i","pointStart","pointEnd","$3b71d02d19a2f9fc$var$defaultUnknownHandler","nodes","loose","$7xAT4","$a6795beeb14361e9$export$bf638b60ea8b89b7","visitor","reverse","visitParents","parents","$cXrlj","$57d83a7e99fe1db8$export$f4d8133c446fe484","$57d83a7e99fe1db8$export$7f100f842f565dc9","$57d83a7e99fe1db8$export$8773f85c2fb2c116","$57d83a7e99fe1db8$export$70008a21eb6de899","is","convert","step","factory","$dwwhP","color","subresult","grandparents","$57d83a7e99fe1db8$var$toResult","$96f0346b9b041ae6$export$9c68d69a4c5bbcf9","$96f0346b9b041ae6$var$ok","$96f0346b9b041ae6$var$castFactory","$96f0346b9b041ae6$var$typeFactory","tests","checks","$96f0346b9b041ae6$var$anyFactory","$96f0346b9b041ae6$var$propsFactory","$9d874ef8a8ef080d$export$35e9368ef982300f","$2eb0166faf454f4f$export$771bf3e4949bfbee","$2eb0166faf454f4f$var$point","$2eb0166faf454f4f$export$da309cdce9dc2a25","$2eb0166faf454f4f$export$5880b8b5730aff45","$5f4e629f12acb78a$export$41ad1363166ec91a","$f02589b0b57bcb5b$var$own","$f02589b0b57bcb5b$export$d79264f26953ec1","cache","$f02589b0b57bcb5b$var$clean","$bBTWt","$114904d24886f596$export$455ce229eb3d2472","blockquote","break","$gAkBB","$aQ0We","delete","$1eNIu","strikethrough","$6Pou9","$lzRR1","footnoteReference","$4R9bv","footnote","$g6bry","$2ude9","$luOdh","imageReference","$3ONqI","$ginya","inlineCode","$jcqku","linkReference","$lTpT2","$lhaRl","$aA78B","$kaiJ7","$9TBfz","root","$d1czY","$84G49","table","$bEKLo","tableCell","$auLC5","tableRow","$ksz7P","$Sxzp6","toml","$114904d24886f596$var$ignore","yaml","footnoteDefinition","$873e8b602d67e1eb$export$67dc04e652a298ca","$c12ffdf45974319a$export$371da9dd35aba193","$7e3f7d005d5ee31c$export$6565f9f03506010b","$0e6da9eea1159b5c$export$19426ff118fe8be","$4f8a7fc2c9259b58$export$bef81ba411953b51","$fb56a43294cb554f$export$7f87ee744075c1ba","counter","reuseCounter","dataFootnoteRef","ariaDescribedBy","$38933c847d32fb3a$export$3b6a720baa2c20ec","no","$bb86154deb79b98e$export$46e4a324ac90507f","$1cf8a4c88312066a$export$c0bb0b647f701bb5","$fa63599826cf80b6$export$f281796f6bc3b8db","$3Hi5O","revert","$2b136c1710f10951$export$3fdd26f3d9e7dc78","subtype","suffix","contents","$2c7c625ff27de5b7$export$5c452ff88e35e47d","$bdd09856e8ba33ae$export$91b9bee19a0d8569","$dfa38fce9f7f6b8c$export$e6c469b1b7b2bc6a","$ff02d09ce4744195$export$9c30223ca0a664fb","$f7d39bf347298f3f$export$76c7e83ecc9cdf05","results","$f7d39bf347298f3f$var$listItemLoose","$f7d39bf347298f3f$var$listLoose","disabled","child","$7b42cd949e6c60f9$export$8837f4fc672e936d","$eae3449019415a3a$export$9c206ddddb32a9b","$7346253959989240$export$e8e78c978b129247","$97a52058d14c61a8$export$59ae2c325a998f89","$5e0f53d9d07017d8$export$9852986a3ec5f6a0","rows","firstRow","shift","tableContent","body","$7a41a3b926310dff$export$ce666bf02318c957","siblings","align","cellIndex","cells","cell","alignValue","$87c7b463ad5582bc$export$e1e720e5f4603e6a","$4AQW1","$ee51ab4e98d30870$export$6f093cfa640b7166","trimLines","$358395fcbf5a2cfd$var$tab","$358395fcbf5a2cfd$var$space","$358395fcbf5a2cfd$export$a771f20bdd13def9","search","last","lines","$358395fcbf5a2cfd$var$trimLine","codePointAt","$0a3f1591cf32526f$export$ba7b13e047416c03","$9a4d6a57aaaab11e$var$emptyFunction","$9a4d6a57aaaab11e$var$emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","$lNqgI","err","getShim","isRequired","ReactPropTypes","array","bigint","number","symbol","element","elementType","instanceOf","objectOf","oneOf","shape","exact","checkPropTypes","PropTypes","$8K29K","$7fc12be348255554$export$c0bb0b647f701bb5","merge","$2mSAN","xml","$cXEVp","xlink","$8TXBj","xmlns","$7ejLl","aria","$cwo9C","$7fc12be348255554$export$7ed1367e7fa1ad68","$lF5RX","svg","$2V6iF","$65d44acdf87d3821$export$4950aa0f605343fb","space","property","normal","Schema","$2205caaf944f60ef$export$19342e026b58ebb7","$96fabd8cd2ed1feb$export$2bd1230ec7600845","transform","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","$4GEAW","$df873a045ab9997d$var$own","$df873a045ab9997d$export$185802fd694ee1f5","$lqZ1V","DefinedInfo","attributes","mustUseProperty","normalize","attribute","$369a92eee5cf5c65$export$a3295358bff77e","$imkUs","$f9ab5dffd32c2b27$var$checks","keys","$bhH9I","$f9ab5dffd32c2b27$export$ea6b9f0064e88c9b","Info","mask","$f9ab5dffd32c2b27$var$mark","$d5da804e63e4f031$export$c4868e4a24d48fad","boolean","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","$8372c20d7637626a$var$powers","$8372c20d7637626a$export$4a21f16c33752377","$8372c20d7637626a$var$increment","$8372c20d7637626a$export$55e9e1fbc638dc8f","$8372c20d7637626a$export$242ac3d3042558aa","$8372c20d7637626a$export$98e628dec113755e","$8372c20d7637626a$export$ab8645c862eb5a3e","$8372c20d7637626a$export$9c8d678629b3d3","$8372c20d7637626a$export$2ad25cfebf36cacd","$1b97fbcaee557873$export$f2913fe8983302e","xmlLang","xmlBase","xmlSpace","$jbPNJ","$67b1b149c061c281$export$e20c24a128671213","xmlnsxlink","$4PxUO","caseInsensitiveTransform","xmlnsXLink","$5rtXf","$38463bbd80687601$export$32b9e4cec9c208e1","caseSensitiveTransform","$3f66b5b5be89dedb$export$5b10b3bc32d7efbc","$54392ba55dc44eaa$export$4d2d26490572750a","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","$91db35b5689628e4$export$c0bb0b647f701bb5","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","$fc51face202e8fdd$export$7ed1367e7fa1ad68","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","$5fd6180ccffdcd4c$var$valid","$5fd6180ccffdcd4c$var$dash","$5fd6180ccffdcd4c$var$cap","$5fd6180ccffdcd4c$export$71aa6c912b956294","Type","charAt","rest","$5fd6180ccffdcd4c$var$camelcase","dashes","$5fd6180ccffdcd4c$var$kebab","$de01df0dd0de2012$export$d8abd7e5fb6871f9","$105f61fb909d5bd6$export$2e2bcd8739ae039","parent_","$cf0d324ac74956f1$var$own","$cf0d324ac74956f1$var$tableElements","Set","$cf0d324ac74956f1$export$4b745c302603ab5d","childIndex","$cf0d324ac74956f1$var$toReact","has","$2h0WQ","whitespace","$10YAt","uriTransformer","parentSchema","$cf0d324ac74956f1$var$addProperty","component","basic","$5EgQh","isValidElementType","level","input","$cf0d324ac74956f1$var$getInputElement","$cf0d324ac74956f1$var$getElementsBeforeCount","textAlign","isHeader","sourcePosition","siblingCount","count","$8e8kD","find","$aydpb","$9LDtD","$aKvL7","v","$cf0d324ac74956f1$var$styleReplacer","$cf0d324ac74956f1$var$parseStyle","$j3JRp","hastToReact","$1a7de79656976693$export$7af1228ff777d175","thing","$71c7202b4e4c47aa$export$fac44ee5b035f737","trim","$7ae77a5ec40be267$export$fac44ee5b035f737","padRight","padLeft","$8a48ffc0108afa92$export$2e2bcd8739ae039","$c2Dp1","$5448fd54a0960326$var$StyleToObject","declarations","hasIterator","len","$8c443c74d39aad73$var$COMMENT_REGEX","$8c443c74d39aad73$var$NEWLINE_REGEX","$8c443c74d39aad73$var$WHITESPACE_REGEX","$8c443c74d39aad73$var$PROPERTY_REGEX","$8c443c74d39aad73$var$COLON_REGEX","$8c443c74d39aad73$var$VALUE_REGEX","$8c443c74d39aad73$var$SEMICOLON_REGEX","$8c443c74d39aad73$var$TRIM_REGEX","$8c443c74d39aad73$var$NEWLINE","$8c443c74d39aad73$var$FORWARD_SLASH","$8c443c74d39aad73$var$ASTERISK","$8c443c74d39aad73$var$EMPTY_STRING","$8c443c74d39aad73$var$TYPE_COMMENT","$8c443c74d39aad73$var$TYPE_DECLARATION","$8c443c74d39aad73$var$trim","str","lineno","updatePosition","Position","errorsList","msg","filename","silent","re","m","comments","c","val","ret","decl","decls","$0bd4c9e9b9330ba0$var$protocols","$0bd4c9e9b9330ba0$export$b83532a10e2e268b","uri","first","$815c9a1adfb144b5$export$2b55d7630a748f79","$815c9a1adfb144b5$export$e13597a754cb43a1"],"version":3,"file":"postsContent.component.ba46ce39.js.map"}